{
	"id": "e907255f5a9952aecab3b0ad9afa92f2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Monica.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.4.0\npragma solidity ^0.8.27;\n\nimport {ERC20} from \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\";\nimport {ERC20Pausable} from \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\";\nimport {Ownable} from \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\";\n\n/// @custom:security-contact monica.galeendo@gmail.com\ncontract Monica is ERC20, ERC20Pausable, Ownable {\n\n    // State variables\n    address public treasury;\n    uint256 public taxFee; // Fee in basis points (100 = 1%)\n    \n    // Maximum fee is 2% (200 basis points)\n    uint256 public constant MAX_FEE = 200;\n    \n    // Mapping to track fee-exempt addresses\n    mapping(address => bool) public isFeeExempt;\n\n    // Events\n    event TreasuryUpdated(address indexed oldTreasury, address indexed newTreasury);\n    event TaxFeeUpdated(uint256 oldFee, uint256 newFee);\n    event FeeExemptionUpdated(address indexed account, bool exempt);\n    event TaxCollected(address indexed from, address indexed to, uint256 taxAmount, uint256 transferAmount);\n\n    error InvalidTreasuryAddress();\n    error InvalidTaxFee();\n    error TransferFailed();\n\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        address _treasury,\n        uint256 _taxFee)\n        ERC20(_name, _symbol)\n        Ownable(msg.sender)\n    {\n        if (_treasury == address(0)) revert InvalidTreasuryAddress();\n        if (_taxFee > MAX_FEE) revert InvalidTaxFee();\n        treasury = _treasury;\n        taxFee = _taxFee;\n        \n        // Owner and treasury are fee exempt by default\n        isFeeExempt[msg.sender] = true;\n        isFeeExempt[_treasury] = true;\n        \n        // Mint initial supply to deployer (optional - adjust as needed)\n        _mint(msg.sender, 1000000 * 10**decimals());\n        \n        emit TreasuryUpdated(address(0), _treasury);\n        emit TaxFeeUpdated(0, _taxFee);\n        emit FeeExemptionUpdated(msg.sender, true);\n        emit FeeExemptionUpdated(_treasury, true);\n    }\n\n    /**\n     * @dev Updates the treasury address\n     * @param _newTreasury New treasury address\n     */\n    function setTreasury(address _newTreasury) external onlyOwner {\n        if (_newTreasury == address(0)) revert InvalidTreasuryAddress();\n        \n        address oldTreasury = treasury;\n        treasury = _newTreasury;\n        \n        // Update fee exemption\n        isFeeExempt[oldTreasury] = false;\n        isFeeExempt[_newTreasury] = true;\n        \n        emit TreasuryUpdated(oldTreasury, _newTreasury);\n        emit FeeExemptionUpdated(oldTreasury, false);\n        emit FeeExemptionUpdated(_newTreasury, true);\n    }\n    \n    /**\n     * @dev Updates the tax fee\n     * @param _newFee New tax fee in basis points\n     */\n    function setTaxFee(uint256 _newFee) external onlyOwner {\n        if (_newFee > 10000) revert InvalidTaxFee();\n        \n        uint256 oldFee = taxFee;\n        taxFee = _newFee;\n        \n        emit TaxFeeUpdated(oldFee, _newFee);\n    }\n    \n    /**\n     * @dev Sets fee exemption status for an address\n     * @param _account Address to update\n     * @param _exempt Whether the address should be exempt from fees\n     */\n    function setFeeExemption(address _account, bool _exempt) external onlyOwner {\n        isFeeExempt[_account] = _exempt;\n        emit FeeExemptionUpdated(_account, _exempt);\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    /**\n     * @dev Override transfer to include tax logic\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _update(owner, to, amount);\n        return true;\n    }\n    \n    /**\n     * @dev Override transferFrom to include tax logic\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _update(from, to, amount);\n        return true;\n    }\n    \n    /**\n     * @dev Returns the maximum fee that can be set\n     */\n    function getMaxFee() external pure returns (uint256) {\n        return MAX_FEE;\n    }\n    \n    /**\n     * @dev Returns the current tax fee as a percentage (with 2 decimals)\n     */\n    function getTaxFeePercentage() external view returns (uint256) {\n        return taxFee;\n    }\n    \n    /**\n     * @dev Calculates tax amount for a given transfer amount\n     * @param amount Transfer amount\n     * @return Tax amount that would be collected\n     */\n    function calculateTax(uint256 amount) external view returns (uint256) {\n        return (amount * taxFee) / MAX_FEE;\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address from, address to, uint256 amount) internal override(ERC20, ERC20Pausable) {\n        if (from != address(0) && to != address(0)) {\n            if (taxFee > 0) {\n                uint256 fee = (amount * taxFee) / 100;\n                if (fee > 0) {\n                    super._update(from, treasury, fee);\n                    uint256 net = amount - fee;\n                    super._update(from, to, net);\n                    return;\n                }\n            }\n        }\n        super._update(from, to, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.4.0/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.4.0/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.4.0/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts@5.4.0/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts@5.4.0/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@5.4.0/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts@5.4.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts@5.4.0/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.4.0/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.4.0/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.4.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.4.0/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.4.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.4.0/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.4.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.4.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts@5.4.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts@5.4.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.4.0/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.4.0/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.4.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol": {
				"ERC20Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.4.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts@5.4.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts@5.4.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 976,
								"contract": "@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.4.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.4.0/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.4.0/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.4.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.4.0/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.4.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 976,
								"contract": "@openzeppelin/contracts@5.4.0/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Monica.sol": {
				"Monica": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_taxFee",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTaxFee",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTreasuryAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "exempt",
									"type": "bool"
								}
							],
							"name": "FeeExemptionUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "taxAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "transferAmount",
									"type": "uint256"
								}
							],
							"name": "TaxCollected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "TaxFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldTreasury",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newTreasury",
									"type": "address"
								}
							],
							"name": "TreasuryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "calculateTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTaxFeePercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isFeeExempt",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_exempt",
									"type": "bool"
								}
							],
							"name": "setFeeExemption",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newFee",
									"type": "uint256"
								}
							],
							"name": "setTaxFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newTreasury",
									"type": "address"
								}
							],
							"name": "setTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:security-contact": "monica.galeendo@gmail.com",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"calculateTax(uint256)": {
								"details": "Calculates tax amount for a given transfer amount",
								"params": {
									"amount": "Transfer amount"
								},
								"returns": {
									"_0": "Tax amount that would be collected"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getMaxFee()": {
								"details": "Returns the maximum fee that can be set"
							},
							"getTaxFeePercentage()": {
								"details": "Returns the current tax fee as a percentage (with 2 decimals)"
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setFeeExemption(address,bool)": {
								"details": "Sets fee exemption status for an address",
								"params": {
									"_account": "Address to update",
									"_exempt": "Whether the address should be exempt from fees"
								}
							},
							"setTaxFee(uint256)": {
								"details": "Updates the tax fee",
								"params": {
									"_newFee": "New tax fee in basis points"
								}
							},
							"setTreasury(address)": {
								"details": "Updates the treasury address",
								"params": {
									"_newTreasury": "New treasury address"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Override transfer to include tax logic"
							},
							"transferFrom(address,address,uint256)": {
								"details": "Override transferFrom to include tax logic"
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Monica.sol\":414:5404  contract Monica is ERC20, ERC20Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Monica.sol\":1203:2062  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Monica.sol\":1374:1384  msg.sender */\n  caller\n    /* \"Monica.sol\":1342:1347  _name */\n  dup5\n    /* \"Monica.sol\":1349:1356  _symbol */\n  dup5\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"Monica.sol\":1425:1426  0 */\n  0x00\n    /* \"Monica.sol\":1404:1427  _treasury == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Monica.sol\":1404:1413  _treasury */\n  dup3\n    /* \"Monica.sol\":1404:1427  _treasury == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Monica.sol\":1400:1460  if (_treasury == address(0)) revert InvalidTreasuryAddress() */\n  tag_18\n  jumpi\n    /* \"Monica.sol\":1436:1460  InvalidTreasuryAddress() */\n  mload(0x40)\n  0xcfe2ea6300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Monica.sol\":1400:1460  if (_treasury == address(0)) revert InvalidTreasuryAddress() */\ntag_18:\n    /* \"Monica.sol\":666:669  200 */\n  0xc8\n    /* \"Monica.sol\":1474:1481  _taxFee */\n  dup2\n    /* \"Monica.sol\":1474:1491  _taxFee > MAX_FEE */\n  gt\n    /* \"Monica.sol\":1470:1515  if (_taxFee > MAX_FEE) revert InvalidTaxFee() */\n  iszero\n  tag_19\n  jumpi\n    /* \"Monica.sol\":1500:1515  InvalidTaxFee() */\n  mload(0x40)\n  0x5ba09ae000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Monica.sol\":1470:1515  if (_taxFee > MAX_FEE) revert InvalidTaxFee() */\ntag_19:\n    /* \"Monica.sol\":1536:1545  _treasury */\n  dup2\n    /* \"Monica.sol\":1525:1533  treasury */\n  0x06\n  0x00\n    /* \"Monica.sol\":1525:1545  treasury = _treasury */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Monica.sol\":1564:1571  _taxFee */\n  dup1\n    /* \"Monica.sol\":1555:1561  taxFee */\n  0x07\n    /* \"Monica.sol\":1555:1571  taxFee = _taxFee */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Monica.sol\":1672:1676  true */\n  0x01\n    /* \"Monica.sol\":1646:1657  isFeeExempt */\n  0x08\n    /* \"Monica.sol\":1646:1669  isFeeExempt[msg.sender] */\n  0x00\n    /* \"Monica.sol\":1658:1668  msg.sender */\n  caller\n    /* \"Monica.sol\":1646:1669  isFeeExempt[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"Monica.sol\":1646:1676  isFeeExempt[msg.sender] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Monica.sol\":1711:1715  true */\n  0x01\n    /* \"Monica.sol\":1686:1697  isFeeExempt */\n  0x08\n    /* \"Monica.sol\":1686:1708  isFeeExempt[_treasury] */\n  0x00\n    /* \"Monica.sol\":1698:1707  _treasury */\n  dup5\n    /* \"Monica.sol\":1686:1708  isFeeExempt[_treasury] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"Monica.sol\":1686:1715  isFeeExempt[_treasury] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Monica.sol\":1807:1850  _mint(msg.sender, 1000000 * 10**decimals()) */\n  tag_20\n    /* \"Monica.sol\":1813:1823  msg.sender */\n  caller\n    /* \"Monica.sol\":1839:1849  decimals() */\n  tag_21\n    /* \"Monica.sol\":1839:1847  decimals */\n  shl(0x20, tag_22)\n    /* \"Monica.sol\":1839:1849  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"Monica.sol\":1835:1837  10 */\n  0x0a\n    /* \"Monica.sol\":1835:1849  10**decimals() */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"Monica.sol\":1825:1832  1000000 */\n  0x0f4240\n    /* \"Monica.sol\":1825:1849  1000000 * 10**decimals() */\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"Monica.sol\":1807:1812  _mint */\n  shl(0x20, tag_27)\n    /* \"Monica.sol\":1807:1850  _mint(msg.sender, 1000000 * 10**decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"Monica.sol\":1902:1911  _treasury */\n  dup2\n    /* \"Monica.sol\":1874:1912  TreasuryUpdated(address(0), _treasury) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Monica.sol\":1898:1899  0 */\n  0x00\n    /* \"Monica.sol\":1874:1912  TreasuryUpdated(address(0), _treasury) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Monica.sol\":1927:1952  TaxFeeUpdated(0, _taxFee) */\n  0x2211abb4bbc4d80b7505c31b54d01d15ac6e33a42c59540d309d89daf759063a\n    /* \"Monica.sol\":1941:1942  0 */\n  0x00\n    /* \"Monica.sol\":1944:1951  _taxFee */\n  dup3\n    /* \"Monica.sol\":1927:1952  TaxFeeUpdated(0, _taxFee) */\n  mload(0x40)\n  tag_28\n  swap3\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"Monica.sol\":1987:1997  msg.sender */\n  caller\n    /* \"Monica.sol\":1967:2004  FeeExemptionUpdated(msg.sender, true) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f\n    /* \"Monica.sol\":1999:2003  true */\n  0x01\n    /* \"Monica.sol\":1967:2004  FeeExemptionUpdated(msg.sender, true) */\n  mload(0x40)\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"Monica.sol\":2039:2048  _treasury */\n  dup2\n    /* \"Monica.sol\":2019:2055  FeeExemptionUpdated(_treasury, true) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f\n    /* \"Monica.sol\":2050:2054  true */\n  0x01\n    /* \"Monica.sol\":2019:2055  FeeExemptionUpdated(_treasury, true) */\n  mload(0x40)\n  tag_32\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_32:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"Monica.sol\":1203:2062  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"Monica.sol\":414:5404  contract Monica is ERC20, ERC20Pausable, Ownable {... */\n  jump(tag_33)\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x01\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\ntag_22:\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2761:2763  18 */\n  0x12\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\ntag_27:\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7451:7452  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7432:7439  account */\n  dup3\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7505:7506  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\ntag_37:\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  tag_39\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7544:7545  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7548:7555  account */\n  dup4\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7557:7562  value */\n  dup4\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7528:7535  _update */\n  shl(0x20, tag_40)\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Monica.sol\":4861:5402  function _update(address from, address to, uint256 amount) internal override(ERC20, ERC20Pausable) {... */\ntag_40:\n    /* \"Monica.sol\":4990:4991  0 */\n  0x00\n    /* \"Monica.sol\":4974:4992  from != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Monica.sol\":4974:4978  from */\n  dup4\n    /* \"Monica.sol\":4974:4992  from != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"Monica.sol\":4974:5012  from != address(0) && to != address(0) */\n  dup1\n  iszero\n  tag_42\n  jumpi\n  pop\n    /* \"Monica.sol\":5010:5011  0 */\n  0x00\n    /* \"Monica.sol\":4996:5012  to != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Monica.sol\":4996:4998  to */\n  dup3\n    /* \"Monica.sol\":4996:5012  to != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"Monica.sol\":4974:5012  from != address(0) && to != address(0) */\ntag_42:\n    /* \"Monica.sol\":4970:5355  if (from != address(0) && to != address(0)) {... */\n  iszero\n  tag_43\n  jumpi\n    /* \"Monica.sol\":5041:5042  0 */\n  0x00\n    /* \"Monica.sol\":5032:5038  taxFee */\n  sload(0x07)\n    /* \"Monica.sol\":5032:5042  taxFee > 0 */\n  gt\n    /* \"Monica.sol\":5028:5345  if (taxFee > 0) {... */\n  iszero\n  tag_44\n  jumpi\n    /* \"Monica.sol\":5062:5073  uint256 fee */\n  0x00\n    /* \"Monica.sol\":5096:5099  100 */\n  0x64\n    /* \"Monica.sol\":5086:5092  taxFee */\n  sload(0x07)\n    /* \"Monica.sol\":5077:5083  amount */\n  dup4\n    /* \"Monica.sol\":5077:5092  amount * taxFee */\n  tag_45\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_45:\n    /* \"Monica.sol\":5076:5099  (amount * taxFee) / 100 */\n  tag_46\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n    /* \"Monica.sol\":5062:5099  uint256 fee = (amount * taxFee) / 100 */\n  swap1\n  pop\n    /* \"Monica.sol\":5127:5128  0 */\n  0x00\n    /* \"Monica.sol\":5121:5124  fee */\n  dup2\n    /* \"Monica.sol\":5121:5128  fee > 0 */\n  gt\n    /* \"Monica.sol\":5117:5331  if (fee > 0) {... */\n  iszero\n  tag_48\n  jumpi\n    /* \"Monica.sol\":5152:5186  super._update(from, treasury, fee) */\n  tag_49\n    /* \"Monica.sol\":5166:5170  from */\n  dup5\n    /* \"Monica.sol\":5172:5180  treasury */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Monica.sol\":5182:5185  fee */\n  dup4\n    /* \"Monica.sol\":5152:5165  super._update */\n  shl(0x20, tag_50)\n    /* \"Monica.sol\":5152:5186  super._update(from, treasury, fee) */\n  0x20\n  shr\n  jump\t// in\ntag_49:\n    /* \"Monica.sol\":5208:5219  uint256 net */\n  0x00\n    /* \"Monica.sol\":5231:5234  fee */\n  dup2\n    /* \"Monica.sol\":5222:5228  amount */\n  dup4\n    /* \"Monica.sol\":5222:5234  amount - fee */\n  tag_51\n  swap2\n  swap1\n  tag_52\n  jump\t// in\ntag_51:\n    /* \"Monica.sol\":5208:5234  uint256 net = amount - fee */\n  swap1\n  pop\n    /* \"Monica.sol\":5256:5284  super._update(from, to, net) */\n  tag_53\n    /* \"Monica.sol\":5270:5274  from */\n  dup6\n    /* \"Monica.sol\":5276:5278  to */\n  dup6\n    /* \"Monica.sol\":5280:5283  net */\n  dup4\n    /* \"Monica.sol\":5256:5269  super._update */\n  shl(0x20, tag_50)\n    /* \"Monica.sol\":5256:5284  super._update(from, to, net) */\n  0x20\n  shr\n  jump\t// in\ntag_53:\n    /* \"Monica.sol\":5306:5313  return; */\n  pop\n  pop\n  jump(tag_41)\n    /* \"Monica.sol\":5117:5331  if (fee > 0) {... */\ntag_48:\n    /* \"Monica.sol\":5044:5345  {... */\n  pop\n    /* \"Monica.sol\":5028:5345  if (taxFee > 0) {... */\ntag_44:\n    /* \"Monica.sol\":4970:5355  if (from != address(0) && to != address(0)) {... */\ntag_43:\n    /* \"Monica.sol\":5364:5395  super._update(from, to, amount) */\n  tag_54\n    /* \"Monica.sol\":5378:5382  from */\n  dup4\n    /* \"Monica.sol\":5384:5386  to */\n  dup4\n    /* \"Monica.sol\":5388:5394  amount */\n  dup4\n    /* \"Monica.sol\":5364:5377  super._update */\n  shl(0x20, tag_50)\n    /* \"Monica.sol\":5364:5395  super._update(from, to, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_54:\n    /* \"Monica.sol\":4861:5402  function _update(address from, address to, uint256 amount) internal override(ERC20, ERC20Pausable) {... */\ntag_41:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":1113:1258  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\ntag_50:\n    /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n  tag_56\n    /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n  shl(0x20, tag_57)\n    /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n  0x20\n  shr\n  jump\t// in\ntag_56:\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":1221:1251  super._update(from, to, value) */\n  tag_59\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":1235:1239  from */\n  dup4\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":1241:1243  to */\n  dup4\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":1245:1250  value */\n  dup4\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":1221:1234  super._update */\n  shl(0x20, tag_60)\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":1221:1251  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_59:\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":1113:1258  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\ntag_57:\n    /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1943:1951  paused() */\n  tag_62\n    /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1943:1949  paused */\n  shl(0x20, tag_63)\n    /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1943:1951  paused() */\n  0x20\n  shr\n  jump\t// in\ntag_62:\n    /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n  iszero\n  tag_64\n  jumpi\n    /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1974:1989  EnforcedPause() */\n  mload(0x40)\n  0xd93c066500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1939:2000  if (paused()) {... */\ntag_64:\n    /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_60:\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6017:6018  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6001:6005  from */\n  dup4\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  tag_66\n  jumpi\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6153:6158  value */\n  dup1\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_67\n  swap2\n  swap1\n  tag_68\n  jump\t// in\ntag_67:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  jump(tag_69)\ntag_66:\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6211:6220  _balances */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6221:6225  from */\n  dup6\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6258:6263  value */\n  dup2\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n  iszero\n  tag_70\n  jumpi\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6315:6319  from */\n  dup4\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6334:6339  value */\n  dup4\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_71\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_72\n  jump\t// in\ntag_71:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\ntag_70:\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6507:6512  value */\n  dup2\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6475:6484  _balances */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6485:6489  from */\n  dup7\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6175:6537  {... */\n  pop\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\ntag_69:\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6565:6566  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6551:6553  to */\n  dup3\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  tag_73\n  jumpi\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6730:6735  value */\n  dup1\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  jump(tag_74)\ntag_73:\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6942:6947  value */\n  dup1\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6925:6934  _balances */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6935:6937  to */\n  dup5\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\ntag_74:\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7002:7004  to */\n  dup2\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6996:7000  from */\n  dup4\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7006:7011  value */\n  dup4\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  mload(0x40)\n  tag_75\n  swap2\n  swap1\n  tag_76\n  jump\t// in\ntag_75:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\ntag_63:\n    /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1773:1777  bool */\n  0x00\n    /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1796:1803  _paused */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1789:1803  return _paused */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_78:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_79:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_80:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_81:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_82:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_83:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_84:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_85:\n    /* \"#utility.yul\":957:984   */\n  tag_138\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_83\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_140\n  tag_84\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":1030:1118   */\ntag_139:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_86:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_142\n  tag_78\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_143\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_85\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_87:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_146\n  tag_84\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":1434:1490   */\ntag_145:\n    /* \"#utility.yul\":1508:1537   */\n  tag_147\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_83\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_88:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_89:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_150\n    /* \"#utility.yul\":1885:1934   */\n  tag_151\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_87\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":1869:1935   */\n  tag_86\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_153\n  tag_82\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":2010:2122   */\ntag_152:\n    /* \"#utility.yul\":2131:2183   */\n  tag_154\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_88\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_90:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_156\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_157\n  tag_81\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":2292:2414   */\ntag_156:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_158\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_89\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2696   */\ntag_91:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2647:2689   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2640:2645   */\n  dup3\n    /* \"#utility.yul\":2636:2690   */\n  and\n    /* \"#utility.yul\":2625:2690   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2696   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2702:2798   */\ntag_92:\n    /* \"#utility.yul\":2739:2746   */\n  0x00\n    /* \"#utility.yul\":2768:2792   */\n  tag_161\n    /* \"#utility.yul\":2786:2791   */\n  dup3\n    /* \"#utility.yul\":2768:2792   */\n  tag_91\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":2757:2792   */\n  swap1\n  pop\n    /* \"#utility.yul\":2702:2798   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2804:2926   */\ntag_93:\n    /* \"#utility.yul\":2877:2901   */\n  tag_163\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2877:2901   */\n  tag_92\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":2870:2875   */\n  dup2\n    /* \"#utility.yul\":2867:2902   */\n  eq\n    /* \"#utility.yul\":2857:2920   */\n  tag_164\n  jumpi\n    /* \"#utility.yul\":2916:2917   */\n  0x00\n    /* \"#utility.yul\":2913:2914   */\n  0x00\n    /* \"#utility.yul\":2906:2918   */\n  revert\n    /* \"#utility.yul\":2857:2920   */\ntag_164:\n    /* \"#utility.yul\":2804:2926   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2932:3075   */\ntag_94:\n    /* \"#utility.yul\":2989:2994   */\n  0x00\n    /* \"#utility.yul\":3020:3026   */\n  dup2\n    /* \"#utility.yul\":3014:3027   */\n  mload\n    /* \"#utility.yul\":3005:3027   */\n  swap1\n  pop\n    /* \"#utility.yul\":3036:3069   */\n  tag_166\n    /* \"#utility.yul\":3063:3068   */\n  dup2\n    /* \"#utility.yul\":3036:3069   */\n  tag_93\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":2932:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:3158   */\ntag_95:\n    /* \"#utility.yul\":3118:3125   */\n  0x00\n    /* \"#utility.yul\":3147:3152   */\n  dup2\n    /* \"#utility.yul\":3136:3152   */\n  swap1\n  pop\n    /* \"#utility.yul\":3081:3158   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3164:3286   */\ntag_96:\n    /* \"#utility.yul\":3237:3261   */\n  tag_169\n    /* \"#utility.yul\":3255:3260   */\n  dup2\n    /* \"#utility.yul\":3237:3261   */\n  tag_95\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":3230:3235   */\n  dup2\n    /* \"#utility.yul\":3227:3262   */\n  eq\n    /* \"#utility.yul\":3217:3280   */\n  tag_170\n  jumpi\n    /* \"#utility.yul\":3276:3277   */\n  0x00\n    /* \"#utility.yul\":3273:3274   */\n  0x00\n    /* \"#utility.yul\":3266:3278   */\n  revert\n    /* \"#utility.yul\":3217:3280   */\ntag_170:\n    /* \"#utility.yul\":3164:3286   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3292:3435   */\ntag_97:\n    /* \"#utility.yul\":3349:3354   */\n  0x00\n    /* \"#utility.yul\":3380:3386   */\n  dup2\n    /* \"#utility.yul\":3374:3387   */\n  mload\n    /* \"#utility.yul\":3365:3387   */\n  swap1\n  pop\n    /* \"#utility.yul\":3396:3429   */\n  tag_172\n    /* \"#utility.yul\":3423:3428   */\n  dup2\n    /* \"#utility.yul\":3396:3429   */\n  tag_96\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":3292:3435   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3441:4607   */\ntag_3:\n    /* \"#utility.yul\":3558:3564   */\n  0x00\n    /* \"#utility.yul\":3566:3572   */\n  0x00\n    /* \"#utility.yul\":3574:3580   */\n  0x00\n    /* \"#utility.yul\":3582:3588   */\n  0x00\n    /* \"#utility.yul\":3631:3634   */\n  0x80\n    /* \"#utility.yul\":3619:3628   */\n  dup6\n    /* \"#utility.yul\":3610:3617   */\n  dup8\n    /* \"#utility.yul\":3606:3629   */\n  sub\n    /* \"#utility.yul\":3602:3635   */\n  slt\n    /* \"#utility.yul\":3599:3719   */\n  iszero\n  tag_174\n  jumpi\n    /* \"#utility.yul\":3638:3717   */\n  tag_175\n  tag_79\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":3599:3719   */\ntag_174:\n    /* \"#utility.yul\":3779:3780   */\n  0x00\n    /* \"#utility.yul\":3768:3777   */\n  dup6\n    /* \"#utility.yul\":3764:3781   */\n  add\n    /* \"#utility.yul\":3758:3782   */\n  mload\n    /* \"#utility.yul\":3809:3827   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3801:3807   */\n  dup2\n    /* \"#utility.yul\":3798:3828   */\n  gt\n    /* \"#utility.yul\":3795:3912   */\n  iszero\n  tag_176\n  jumpi\n    /* \"#utility.yul\":3831:3910   */\n  tag_177\n  tag_80\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":3795:3912   */\ntag_176:\n    /* \"#utility.yul\":3936:4010   */\n  tag_178\n    /* \"#utility.yul\":4002:4009   */\n  dup8\n    /* \"#utility.yul\":3993:3999   */\n  dup3\n    /* \"#utility.yul\":3982:3991   */\n  dup9\n    /* \"#utility.yul\":3978:4000   */\n  add\n    /* \"#utility.yul\":3936:4010   */\n  tag_90\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":3926:4010   */\n  swap5\n  pop\n    /* \"#utility.yul\":3729:4020   */\n  pop\n    /* \"#utility.yul\":4080:4082   */\n  0x20\n    /* \"#utility.yul\":4069:4078   */\n  dup6\n    /* \"#utility.yul\":4065:4083   */\n  add\n    /* \"#utility.yul\":4059:4084   */\n  mload\n    /* \"#utility.yul\":4111:4129   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4103:4109   */\n  dup2\n    /* \"#utility.yul\":4100:4130   */\n  gt\n    /* \"#utility.yul\":4097:4214   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":4133:4212   */\n  tag_180\n  tag_80\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":4097:4214   */\ntag_179:\n    /* \"#utility.yul\":4238:4312   */\n  tag_181\n    /* \"#utility.yul\":4304:4311   */\n  dup8\n    /* \"#utility.yul\":4295:4301   */\n  dup3\n    /* \"#utility.yul\":4284:4293   */\n  dup9\n    /* \"#utility.yul\":4280:4302   */\n  add\n    /* \"#utility.yul\":4238:4312   */\n  tag_90\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":4228:4312   */\n  swap4\n  pop\n    /* \"#utility.yul\":4030:4322   */\n  pop\n    /* \"#utility.yul\":4361:4363   */\n  0x40\n    /* \"#utility.yul\":4387:4451   */\n  tag_182\n    /* \"#utility.yul\":4443:4450   */\n  dup8\n    /* \"#utility.yul\":4434:4440   */\n  dup3\n    /* \"#utility.yul\":4423:4432   */\n  dup9\n    /* \"#utility.yul\":4419:4441   */\n  add\n    /* \"#utility.yul\":4387:4451   */\n  tag_94\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":4377:4451   */\n  swap3\n  pop\n    /* \"#utility.yul\":4332:4461   */\n  pop\n    /* \"#utility.yul\":4500:4502   */\n  0x60\n    /* \"#utility.yul\":4526:4590   */\n  tag_183\n    /* \"#utility.yul\":4582:4589   */\n  dup8\n    /* \"#utility.yul\":4573:4579   */\n  dup3\n    /* \"#utility.yul\":4562:4571   */\n  dup9\n    /* \"#utility.yul\":4558:4580   */\n  add\n    /* \"#utility.yul\":4526:4590   */\n  tag_97\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":4516:4590   */\n  swap2\n  pop\n    /* \"#utility.yul\":4471:4600   */\n  pop\n    /* \"#utility.yul\":3441:4607   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4613:4712   */\ntag_98:\n    /* \"#utility.yul\":4665:4671   */\n  0x00\n    /* \"#utility.yul\":4699:4704   */\n  dup2\n    /* \"#utility.yul\":4693:4705   */\n  mload\n    /* \"#utility.yul\":4683:4705   */\n  swap1\n  pop\n    /* \"#utility.yul\":4613:4712   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4718:4898   */\ntag_99:\n    /* \"#utility.yul\":4766:4843   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4763:4764   */\n  0x00\n    /* \"#utility.yul\":4756:4844   */\n  mstore\n    /* \"#utility.yul\":4863:4867   */\n  0x22\n    /* \"#utility.yul\":4860:4861   */\n  0x04\n    /* \"#utility.yul\":4853:4868   */\n  mstore\n    /* \"#utility.yul\":4887:4891   */\n  0x24\n    /* \"#utility.yul\":4884:4885   */\n  0x00\n    /* \"#utility.yul\":4877:4892   */\n  revert\n    /* \"#utility.yul\":4904:5224   */\ntag_100:\n    /* \"#utility.yul\":4948:4954   */\n  0x00\n    /* \"#utility.yul\":4985:4986   */\n  0x02\n    /* \"#utility.yul\":4979:4983   */\n  dup3\n    /* \"#utility.yul\":4975:4987   */\n  div\n    /* \"#utility.yul\":4965:4987   */\n  swap1\n  pop\n    /* \"#utility.yul\":5032:5033   */\n  0x01\n    /* \"#utility.yul\":5026:5030   */\n  dup3\n    /* \"#utility.yul\":5022:5034   */\n  and\n    /* \"#utility.yul\":5053:5071   */\n  dup1\n    /* \"#utility.yul\":5043:5124   */\n  tag_187\n  jumpi\n    /* \"#utility.yul\":5109:5113   */\n  0x7f\n    /* \"#utility.yul\":5101:5107   */\n  dup3\n    /* \"#utility.yul\":5097:5114   */\n  and\n    /* \"#utility.yul\":5087:5114   */\n  swap2\n  pop\n    /* \"#utility.yul\":5043:5124   */\ntag_187:\n    /* \"#utility.yul\":5171:5173   */\n  0x20\n    /* \"#utility.yul\":5163:5169   */\n  dup3\n    /* \"#utility.yul\":5160:5174   */\n  lt\n    /* \"#utility.yul\":5140:5158   */\n  dup2\n    /* \"#utility.yul\":5137:5175   */\n  sub\n    /* \"#utility.yul\":5134:5218   */\n  tag_188\n  jumpi\n    /* \"#utility.yul\":5190:5208   */\n  tag_189\n  tag_99\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":5134:5218   */\ntag_188:\n    /* \"#utility.yul\":4955:5224   */\n  pop\n    /* \"#utility.yul\":4904:5224   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5230:5371   */\ntag_101:\n    /* \"#utility.yul\":5279:5283   */\n  0x00\n    /* \"#utility.yul\":5302:5305   */\n  dup2\n    /* \"#utility.yul\":5294:5305   */\n  swap1\n  pop\n    /* \"#utility.yul\":5325:5328   */\n  dup2\n    /* \"#utility.yul\":5322:5323   */\n  0x00\n    /* \"#utility.yul\":5315:5329   */\n  mstore\n    /* \"#utility.yul\":5359:5363   */\n  0x20\n    /* \"#utility.yul\":5356:5357   */\n  0x00\n    /* \"#utility.yul\":5346:5364   */\n  keccak256\n    /* \"#utility.yul\":5338:5364   */\n  swap1\n  pop\n    /* \"#utility.yul\":5230:5371   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5377:5470   */\ntag_102:\n    /* \"#utility.yul\":5414:5420   */\n  0x00\n    /* \"#utility.yul\":5461:5463   */\n  0x20\n    /* \"#utility.yul\":5456:5458   */\n  0x1f\n    /* \"#utility.yul\":5449:5454   */\n  dup4\n    /* \"#utility.yul\":5445:5459   */\n  add\n    /* \"#utility.yul\":5441:5464   */\n  div\n    /* \"#utility.yul\":5431:5464   */\n  swap1\n  pop\n    /* \"#utility.yul\":5377:5470   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5476:5583   */\ntag_103:\n    /* \"#utility.yul\":5520:5528   */\n  0x00\n    /* \"#utility.yul\":5570:5575   */\n  dup3\n    /* \"#utility.yul\":5564:5568   */\n  dup3\n    /* \"#utility.yul\":5560:5576   */\n  shl\n    /* \"#utility.yul\":5539:5576   */\n  swap1\n  pop\n    /* \"#utility.yul\":5476:5583   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5589:5982   */\ntag_104:\n    /* \"#utility.yul\":5658:5664   */\n  0x00\n    /* \"#utility.yul\":5708:5709   */\n  0x08\n    /* \"#utility.yul\":5696:5706   */\n  dup4\n    /* \"#utility.yul\":5692:5710   */\n  mul\n    /* \"#utility.yul\":5731:5828   */\n  tag_194\n    /* \"#utility.yul\":5761:5827   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5750:5759   */\n  dup3\n    /* \"#utility.yul\":5731:5828   */\n  tag_103\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":5849:5888   */\n  tag_195\n    /* \"#utility.yul\":5879:5887   */\n  dup7\n    /* \"#utility.yul\":5868:5877   */\n  dup4\n    /* \"#utility.yul\":5849:5888   */\n  tag_103\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":5837:5888   */\n  swap6\n  pop\n    /* \"#utility.yul\":5921:5925   */\n  dup1\n    /* \"#utility.yul\":5917:5926   */\n  not\n    /* \"#utility.yul\":5910:5915   */\n  dup5\n    /* \"#utility.yul\":5906:5927   */\n  and\n    /* \"#utility.yul\":5897:5927   */\n  swap4\n  pop\n    /* \"#utility.yul\":5970:5974   */\n  dup1\n    /* \"#utility.yul\":5960:5968   */\n  dup7\n    /* \"#utility.yul\":5956:5975   */\n  and\n    /* \"#utility.yul\":5949:5954   */\n  dup5\n    /* \"#utility.yul\":5946:5976   */\n  or\n    /* \"#utility.yul\":5936:5976   */\n  swap3\n  pop\n    /* \"#utility.yul\":5665:5982   */\n  pop\n  pop\n    /* \"#utility.yul\":5589:5982   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5988:6048   */\ntag_105:\n    /* \"#utility.yul\":6016:6019   */\n  0x00\n    /* \"#utility.yul\":6037:6042   */\n  dup2\n    /* \"#utility.yul\":6030:6042   */\n  swap1\n  pop\n    /* \"#utility.yul\":5988:6048   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6054:6196   */\ntag_106:\n    /* \"#utility.yul\":6104:6113   */\n  0x00\n    /* \"#utility.yul\":6137:6190   */\n  tag_198\n    /* \"#utility.yul\":6155:6189   */\n  tag_199\n    /* \"#utility.yul\":6164:6188   */\n  tag_200\n    /* \"#utility.yul\":6182:6187   */\n  dup5\n    /* \"#utility.yul\":6164:6188   */\n  tag_95\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":6155:6189   */\n  tag_105\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":6137:6190   */\n  tag_95\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":6124:6190   */\n  swap1\n  pop\n    /* \"#utility.yul\":6054:6196   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6202:6277   */\ntag_107:\n    /* \"#utility.yul\":6245:6248   */\n  0x00\n    /* \"#utility.yul\":6266:6271   */\n  dup2\n    /* \"#utility.yul\":6259:6271   */\n  swap1\n  pop\n    /* \"#utility.yul\":6202:6277   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6283:6552   */\ntag_108:\n    /* \"#utility.yul\":6393:6432   */\n  tag_203\n    /* \"#utility.yul\":6424:6431   */\n  dup4\n    /* \"#utility.yul\":6393:6432   */\n  tag_106\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":6454:6545   */\n  tag_204\n    /* \"#utility.yul\":6503:6544   */\n  tag_205\n    /* \"#utility.yul\":6527:6543   */\n  dup3\n    /* \"#utility.yul\":6503:6544   */\n  tag_107\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":6495:6501   */\n  dup5\n    /* \"#utility.yul\":6488:6492   */\n  dup5\n    /* \"#utility.yul\":6482:6493   */\n  sload\n    /* \"#utility.yul\":6454:6545   */\n  tag_104\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":6448:6452   */\n  dup3\n    /* \"#utility.yul\":6441:6546   */\n  sstore\n    /* \"#utility.yul\":6359:6552   */\n  pop\n    /* \"#utility.yul\":6283:6552   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6558:6631   */\ntag_109:\n    /* \"#utility.yul\":6603:6606   */\n  0x00\n    /* \"#utility.yul\":6624:6625   */\n  0x00\n    /* \"#utility.yul\":6617:6625   */\n  swap1\n  pop\n    /* \"#utility.yul\":6558:6631   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6637:6826   */\ntag_110:\n    /* \"#utility.yul\":6714:6746   */\n  tag_208\n  tag_109\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":6755:6820   */\n  tag_209\n    /* \"#utility.yul\":6813:6819   */\n  dup2\n    /* \"#utility.yul\":6805:6811   */\n  dup5\n    /* \"#utility.yul\":6799:6803   */\n  dup5\n    /* \"#utility.yul\":6755:6820   */\n  tag_108\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":6690:6826   */\n  pop\n    /* \"#utility.yul\":6637:6826   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6832:7018   */\ntag_111:\n    /* \"#utility.yul\":6892:7012   */\ntag_211:\n    /* \"#utility.yul\":6909:6912   */\n  dup2\n    /* \"#utility.yul\":6902:6907   */\n  dup2\n    /* \"#utility.yul\":6899:6913   */\n  lt\n    /* \"#utility.yul\":6892:7012   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":6963:7002   */\n  tag_214\n    /* \"#utility.yul\":7000:7001   */\n  0x00\n    /* \"#utility.yul\":6993:6998   */\n  dup3\n    /* \"#utility.yul\":6963:7002   */\n  tag_110\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":6936:6937   */\n  0x01\n    /* \"#utility.yul\":6929:6934   */\n  dup2\n    /* \"#utility.yul\":6925:6938   */\n  add\n    /* \"#utility.yul\":6916:6938   */\n  swap1\n  pop\n    /* \"#utility.yul\":6892:7012   */\n  jump(tag_211)\ntag_213:\n    /* \"#utility.yul\":6832:7018   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7024:7567   */\ntag_112:\n    /* \"#utility.yul\":7125:7127   */\n  0x1f\n    /* \"#utility.yul\":7120:7123   */\n  dup3\n    /* \"#utility.yul\":7117:7128   */\n  gt\n    /* \"#utility.yul\":7114:7560   */\n  iszero\n  tag_216\n  jumpi\n    /* \"#utility.yul\":7159:7197   */\n  tag_217\n    /* \"#utility.yul\":7191:7196   */\n  dup2\n    /* \"#utility.yul\":7159:7197   */\n  tag_101\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":7243:7272   */\n  tag_218\n    /* \"#utility.yul\":7261:7271   */\n  dup5\n    /* \"#utility.yul\":7243:7272   */\n  tag_102\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":7233:7241   */\n  dup2\n    /* \"#utility.yul\":7229:7273   */\n  add\n    /* \"#utility.yul\":7426:7428   */\n  0x20\n    /* \"#utility.yul\":7414:7424   */\n  dup6\n    /* \"#utility.yul\":7411:7429   */\n  lt\n    /* \"#utility.yul\":7408:7457   */\n  iszero\n  tag_219\n  jumpi\n    /* \"#utility.yul\":7447:7455   */\n  dup2\n    /* \"#utility.yul\":7432:7455   */\n  swap1\n  pop\n    /* \"#utility.yul\":7408:7457   */\ntag_219:\n    /* \"#utility.yul\":7470:7550   */\n  tag_220\n    /* \"#utility.yul\":7526:7548   */\n  tag_221\n    /* \"#utility.yul\":7544:7547   */\n  dup6\n    /* \"#utility.yul\":7526:7548   */\n  tag_102\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":7516:7524   */\n  dup4\n    /* \"#utility.yul\":7512:7549   */\n  add\n    /* \"#utility.yul\":7499:7510   */\n  dup3\n    /* \"#utility.yul\":7470:7550   */\n  tag_111\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":7129:7560   */\n  pop\n  pop\n    /* \"#utility.yul\":7114:7560   */\ntag_216:\n    /* \"#utility.yul\":7024:7567   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7573:7690   */\ntag_113:\n    /* \"#utility.yul\":7627:7635   */\n  0x00\n    /* \"#utility.yul\":7677:7682   */\n  dup3\n    /* \"#utility.yul\":7671:7675   */\n  dup3\n    /* \"#utility.yul\":7667:7683   */\n  shr\n    /* \"#utility.yul\":7646:7683   */\n  swap1\n  pop\n    /* \"#utility.yul\":7573:7690   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7696:7865   */\ntag_114:\n    /* \"#utility.yul\":7740:7746   */\n  0x00\n    /* \"#utility.yul\":7773:7824   */\n  tag_224\n    /* \"#utility.yul\":7821:7822   */\n  0x00\n    /* \"#utility.yul\":7817:7823   */\n  not\n    /* \"#utility.yul\":7809:7814   */\n  dup5\n    /* \"#utility.yul\":7806:7807   */\n  0x08\n    /* \"#utility.yul\":7802:7815   */\n  mul\n    /* \"#utility.yul\":7773:7824   */\n  tag_113\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":7769:7825   */\n  not\n    /* \"#utility.yul\":7854:7858   */\n  dup1\n    /* \"#utility.yul\":7848:7852   */\n  dup4\n    /* \"#utility.yul\":7844:7859   */\n  and\n    /* \"#utility.yul\":7834:7859   */\n  swap2\n  pop\n    /* \"#utility.yul\":7747:7865   */\n  pop\n    /* \"#utility.yul\":7696:7865   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7870:8165   */\ntag_115:\n    /* \"#utility.yul\":7946:7950   */\n  0x00\n    /* \"#utility.yul\":8092:8121   */\n  tag_226\n    /* \"#utility.yul\":8117:8120   */\n  dup4\n    /* \"#utility.yul\":8111:8115   */\n  dup4\n    /* \"#utility.yul\":8092:8121   */\n  tag_114\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":8084:8121   */\n  swap2\n  pop\n    /* \"#utility.yul\":8154:8157   */\n  dup3\n    /* \"#utility.yul\":8151:8152   */\n  0x02\n    /* \"#utility.yul\":8147:8158   */\n  mul\n    /* \"#utility.yul\":8141:8145   */\n  dup3\n    /* \"#utility.yul\":8138:8159   */\n  or\n    /* \"#utility.yul\":8130:8159   */\n  swap1\n  pop\n    /* \"#utility.yul\":7870:8165   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8170:9565   */\ntag_9:\n    /* \"#utility.yul\":8287:8324   */\n  tag_228\n    /* \"#utility.yul\":8320:8323   */\n  dup3\n    /* \"#utility.yul\":8287:8324   */\n  tag_98\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":8389:8407   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8381:8387   */\n  dup2\n    /* \"#utility.yul\":8378:8408   */\n  gt\n    /* \"#utility.yul\":8375:8431   */\n  iszero\n  tag_229\n  jumpi\n    /* \"#utility.yul\":8411:8429   */\n  tag_230\n  tag_84\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":8375:8431   */\ntag_229:\n    /* \"#utility.yul\":8455:8493   */\n  tag_231\n    /* \"#utility.yul\":8487:8491   */\n  dup3\n    /* \"#utility.yul\":8481:8492   */\n  sload\n    /* \"#utility.yul\":8455:8493   */\n  tag_100\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":8540:8607   */\n  tag_232\n    /* \"#utility.yul\":8600:8606   */\n  dup3\n    /* \"#utility.yul\":8592:8598   */\n  dup3\n    /* \"#utility.yul\":8586:8590   */\n  dup6\n    /* \"#utility.yul\":8540:8607   */\n  tag_112\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":8634:8635   */\n  0x00\n    /* \"#utility.yul\":8658:8662   */\n  0x20\n    /* \"#utility.yul\":8645:8662   */\n  swap1\n  pop\n    /* \"#utility.yul\":8690:8692   */\n  0x1f\n    /* \"#utility.yul\":8682:8688   */\n  dup4\n    /* \"#utility.yul\":8679:8693   */\n  gt\n    /* \"#utility.yul\":8707:8708   */\n  0x01\n    /* \"#utility.yul\":8702:9320   */\n  dup2\n  eq\n  tag_234\n  jumpi\n    /* \"#utility.yul\":9364:9365   */\n  0x00\n    /* \"#utility.yul\":9381:9387   */\n  dup5\n    /* \"#utility.yul\":9378:9455   */\n  iszero\n  tag_235\n  jumpi\n    /* \"#utility.yul\":9430:9439   */\n  dup3\n    /* \"#utility.yul\":9425:9428   */\n  dup8\n    /* \"#utility.yul\":9421:9440   */\n  add\n    /* \"#utility.yul\":9415:9441   */\n  mload\n    /* \"#utility.yul\":9406:9441   */\n  swap1\n  pop\n    /* \"#utility.yul\":9378:9455   */\ntag_235:\n    /* \"#utility.yul\":9481:9548   */\n  tag_236\n    /* \"#utility.yul\":9541:9547   */\n  dup6\n    /* \"#utility.yul\":9534:9539   */\n  dup3\n    /* \"#utility.yul\":9481:9548   */\n  tag_115\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":9475:9479   */\n  dup7\n    /* \"#utility.yul\":9468:9549   */\n  sstore\n    /* \"#utility.yul\":9337:9559   */\n  pop\n    /* \"#utility.yul\":8672:9559   */\n  jump(tag_233)\n    /* \"#utility.yul\":8702:9320   */\ntag_234:\n    /* \"#utility.yul\":8754:8758   */\n  0x1f\n    /* \"#utility.yul\":8750:8759   */\n  not\n    /* \"#utility.yul\":8742:8748   */\n  dup5\n    /* \"#utility.yul\":8738:8760   */\n  and\n    /* \"#utility.yul\":8788:8825   */\n  tag_237\n    /* \"#utility.yul\":8820:8824   */\n  dup7\n    /* \"#utility.yul\":8788:8825   */\n  tag_101\n  jump\t// in\ntag_237:\n    /* \"#utility.yul\":8847:8848   */\n  0x00\n    /* \"#utility.yul\":8861:9069   */\ntag_238:\n    /* \"#utility.yul\":8875:8882   */\n  dup3\n    /* \"#utility.yul\":8872:8873   */\n  dup2\n    /* \"#utility.yul\":8869:8883   */\n  lt\n    /* \"#utility.yul\":8861:9069   */\n  iszero\n  tag_240\n  jumpi\n    /* \"#utility.yul\":8954:8963   */\n  dup5\n    /* \"#utility.yul\":8949:8952   */\n  dup10\n    /* \"#utility.yul\":8945:8964   */\n  add\n    /* \"#utility.yul\":8939:8965   */\n  mload\n    /* \"#utility.yul\":8931:8937   */\n  dup3\n    /* \"#utility.yul\":8924:8966   */\n  sstore\n    /* \"#utility.yul\":9005:9006   */\n  0x01\n    /* \"#utility.yul\":8997:9003   */\n  dup3\n    /* \"#utility.yul\":8993:9007   */\n  add\n    /* \"#utility.yul\":8983:9007   */\n  swap2\n  pop\n    /* \"#utility.yul\":9052:9054   */\n  0x20\n    /* \"#utility.yul\":9041:9050   */\n  dup6\n    /* \"#utility.yul\":9037:9055   */\n  add\n    /* \"#utility.yul\":9024:9055   */\n  swap5\n  pop\n    /* \"#utility.yul\":8898:8902   */\n  0x20\n    /* \"#utility.yul\":8895:8896   */\n  dup2\n    /* \"#utility.yul\":8891:8903   */\n  add\n    /* \"#utility.yul\":8886:8903   */\n  swap1\n  pop\n    /* \"#utility.yul\":8861:9069   */\n  jump(tag_238)\ntag_240:\n    /* \"#utility.yul\":9097:9103   */\n  dup7\n    /* \"#utility.yul\":9088:9095   */\n  dup4\n    /* \"#utility.yul\":9085:9104   */\n  lt\n    /* \"#utility.yul\":9082:9261   */\n  iszero\n  tag_241\n  jumpi\n    /* \"#utility.yul\":9155:9164   */\n  dup5\n    /* \"#utility.yul\":9150:9153   */\n  dup10\n    /* \"#utility.yul\":9146:9165   */\n  add\n    /* \"#utility.yul\":9140:9166   */\n  mload\n    /* \"#utility.yul\":9198:9246   */\n  tag_242\n    /* \"#utility.yul\":9240:9244   */\n  0x1f\n    /* \"#utility.yul\":9232:9238   */\n  dup10\n    /* \"#utility.yul\":9228:9245   */\n  and\n    /* \"#utility.yul\":9217:9226   */\n  dup3\n    /* \"#utility.yul\":9198:9246   */\n  tag_114\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":9190:9196   */\n  dup4\n    /* \"#utility.yul\":9183:9247   */\n  sstore\n    /* \"#utility.yul\":9105:9261   */\n  pop\n    /* \"#utility.yul\":9082:9261   */\ntag_241:\n    /* \"#utility.yul\":9307:9308   */\n  0x01\n    /* \"#utility.yul\":9303:9304   */\n  0x02\n    /* \"#utility.yul\":9295:9301   */\n  dup9\n    /* \"#utility.yul\":9291:9305   */\n  mul\n    /* \"#utility.yul\":9287:9309   */\n  add\n    /* \"#utility.yul\":9281:9285   */\n  dup9\n    /* \"#utility.yul\":9274:9310   */\n  sstore\n    /* \"#utility.yul\":8709:9320   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8672:9559   */\ntag_233:\n  pop\n    /* \"#utility.yul\":8262:9565   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8170:9565   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9571:9689   */\ntag_116:\n    /* \"#utility.yul\":9658:9682   */\n  tag_244\n    /* \"#utility.yul\":9676:9681   */\n  dup2\n    /* \"#utility.yul\":9658:9682   */\n  tag_92\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":9653:9656   */\n  dup3\n    /* \"#utility.yul\":9646:9683   */\n  mstore\n    /* \"#utility.yul\":9571:9689   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9695:9917   */\ntag_14:\n    /* \"#utility.yul\":9788:9792   */\n  0x00\n    /* \"#utility.yul\":9826:9828   */\n  0x20\n    /* \"#utility.yul\":9815:9824   */\n  dup3\n    /* \"#utility.yul\":9811:9829   */\n  add\n    /* \"#utility.yul\":9803:9829   */\n  swap1\n  pop\n    /* \"#utility.yul\":9839:9910   */\n  tag_246\n    /* \"#utility.yul\":9907:9908   */\n  0x00\n    /* \"#utility.yul\":9896:9905   */\n  dup4\n    /* \"#utility.yul\":9892:9909   */\n  add\n    /* \"#utility.yul\":9883:9889   */\n  dup5\n    /* \"#utility.yul\":9839:9910   */\n  tag_116\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":9695:9917   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9923:10103   */\ntag_117:\n    /* \"#utility.yul\":9971:10048   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9968:9969   */\n  0x00\n    /* \"#utility.yul\":9961:10049   */\n  mstore\n    /* \"#utility.yul\":10068:10072   */\n  0x11\n    /* \"#utility.yul\":10065:10066   */\n  0x04\n    /* \"#utility.yul\":10058:10073   */\n  mstore\n    /* \"#utility.yul\":10092:10096   */\n  0x24\n    /* \"#utility.yul\":10089:10090   */\n  0x00\n    /* \"#utility.yul\":10082:10097   */\n  revert\n    /* \"#utility.yul\":10109:10211   */\ntag_118:\n    /* \"#utility.yul\":10151:10159   */\n  0x00\n    /* \"#utility.yul\":10198:10203   */\n  dup2\n    /* \"#utility.yul\":10195:10196   */\n  0x01\n    /* \"#utility.yul\":10191:10204   */\n  shr\n    /* \"#utility.yul\":10170:10204   */\n  swap1\n  pop\n    /* \"#utility.yul\":10109:10211   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10217:11065   */\ntag_119:\n    /* \"#utility.yul\":10278:10283   */\n  0x00\n    /* \"#utility.yul\":10285:10289   */\n  0x00\n    /* \"#utility.yul\":10309:10315   */\n  dup3\n    /* \"#utility.yul\":10300:10315   */\n  swap2\n  pop\n    /* \"#utility.yul\":10333:10338   */\n  dup4\n    /* \"#utility.yul\":10324:10338   */\n  swap1\n  pop\n    /* \"#utility.yul\":10347:11059   */\ntag_250:\n    /* \"#utility.yul\":10368:10369   */\n  0x01\n    /* \"#utility.yul\":10358:10366   */\n  dup6\n    /* \"#utility.yul\":10355:10370   */\n  gt\n    /* \"#utility.yul\":10347:11059   */\n  iszero\n  tag_252\n  jumpi\n    /* \"#utility.yul\":10463:10467   */\n  dup1\n    /* \"#utility.yul\":10458:10461   */\n  dup7\n    /* \"#utility.yul\":10454:10468   */\n  div\n    /* \"#utility.yul\":10448:10452   */\n  dup2\n    /* \"#utility.yul\":10445:10469   */\n  gt\n    /* \"#utility.yul\":10442:10492   */\n  iszero\n  tag_253\n  jumpi\n    /* \"#utility.yul\":10472:10490   */\n  tag_254\n  tag_117\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":10442:10492   */\ntag_253:\n    /* \"#utility.yul\":10522:10523   */\n  0x01\n    /* \"#utility.yul\":10512:10520   */\n  dup6\n    /* \"#utility.yul\":10508:10524   */\n  and\n    /* \"#utility.yul\":10505:10956   */\n  iszero\n  tag_255\n  jumpi\n    /* \"#utility.yul\":10937:10941   */\n  dup1\n    /* \"#utility.yul\":10930:10935   */\n  dup3\n    /* \"#utility.yul\":10926:10942   */\n  mul\n    /* \"#utility.yul\":10917:10942   */\n  swap2\n  pop\n    /* \"#utility.yul\":10505:10956   */\ntag_255:\n    /* \"#utility.yul\":10987:10991   */\n  dup1\n    /* \"#utility.yul\":10981:10985   */\n  dup2\n    /* \"#utility.yul\":10977:10992   */\n  mul\n    /* \"#utility.yul\":10969:10992   */\n  swap1\n  pop\n    /* \"#utility.yul\":11017:11049   */\n  tag_256\n    /* \"#utility.yul\":11040:11048   */\n  dup6\n    /* \"#utility.yul\":11017:11049   */\n  tag_118\n  jump\t// in\ntag_256:\n    /* \"#utility.yul\":11005:11049   */\n  swap5\n  pop\n    /* \"#utility.yul\":10347:11059   */\n  jump(tag_250)\ntag_252:\n    /* \"#utility.yul\":10217:11065   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11071:12144   */\ntag_120:\n    /* \"#utility.yul\":11125:11130   */\n  0x00\n    /* \"#utility.yul\":11316:11324   */\n  dup3\n    /* \"#utility.yul\":11306:11346   */\n  tag_258\n  jumpi\n    /* \"#utility.yul\":11337:11338   */\n  0x01\n    /* \"#utility.yul\":11328:11338   */\n  swap1\n  pop\n    /* \"#utility.yul\":11339:11344   */\n  jump(tag_257)\n    /* \"#utility.yul\":11306:11346   */\ntag_258:\n    /* \"#utility.yul\":11365:11369   */\n  dup2\n    /* \"#utility.yul\":11355:11391   */\n  tag_259\n  jumpi\n    /* \"#utility.yul\":11382:11383   */\n  0x00\n    /* \"#utility.yul\":11373:11383   */\n  swap1\n  pop\n    /* \"#utility.yul\":11384:11389   */\n  jump(tag_257)\n    /* \"#utility.yul\":11355:11391   */\ntag_259:\n    /* \"#utility.yul\":11451:11455   */\n  dup2\n    /* \"#utility.yul\":11499:11500   */\n  0x01\n    /* \"#utility.yul\":11494:11521   */\n  dup2\n  eq\n  tag_261\n  jumpi\n    /* \"#utility.yul\":11535:11536   */\n  0x02\n    /* \"#utility.yul\":11530:11721   */\n  dup2\n  eq\n  tag_262\n  jumpi\n    /* \"#utility.yul\":11444:11721   */\n  jump(tag_260)\n    /* \"#utility.yul\":11494:11521   */\ntag_261:\n    /* \"#utility.yul\":11512:11513   */\n  0x01\n    /* \"#utility.yul\":11503:11513   */\n  swap2\n  pop\n    /* \"#utility.yul\":11514:11519   */\n  pop\n  jump(tag_257)\n    /* \"#utility.yul\":11530:11721   */\ntag_262:\n    /* \"#utility.yul\":11575:11578   */\n  0xff\n    /* \"#utility.yul\":11565:11573   */\n  dup5\n    /* \"#utility.yul\":11562:11579   */\n  gt\n    /* \"#utility.yul\":11559:11602   */\n  iszero\n  tag_263\n  jumpi\n    /* \"#utility.yul\":11582:11600   */\n  tag_264\n  tag_117\n  jump\t// in\ntag_264:\n    /* \"#utility.yul\":11559:11602   */\ntag_263:\n    /* \"#utility.yul\":11631:11639   */\n  dup4\n    /* \"#utility.yul\":11628:11629   */\n  0x02\n    /* \"#utility.yul\":11624:11640   */\n  exp\n    /* \"#utility.yul\":11615:11640   */\n  swap2\n  pop\n    /* \"#utility.yul\":11666:11669   */\n  dup5\n    /* \"#utility.yul\":11659:11664   */\n  dup3\n    /* \"#utility.yul\":11656:11670   */\n  gt\n    /* \"#utility.yul\":11653:11693   */\n  iszero\n  tag_265\n  jumpi\n    /* \"#utility.yul\":11673:11691   */\n  tag_266\n  tag_117\n  jump\t// in\ntag_266:\n    /* \"#utility.yul\":11653:11693   */\ntag_265:\n    /* \"#utility.yul\":11706:11711   */\n  pop\n  jump(tag_257)\n    /* \"#utility.yul\":11444:11721   */\ntag_260:\n  pop\n    /* \"#utility.yul\":11830:11832   */\n  0x20\n    /* \"#utility.yul\":11820:11828   */\n  dup4\n    /* \"#utility.yul\":11817:11833   */\n  lt\n    /* \"#utility.yul\":11811:11814   */\n  0x0133\n    /* \"#utility.yul\":11805:11809   */\n  dup4\n    /* \"#utility.yul\":11802:11815   */\n  lt\n    /* \"#utility.yul\":11798:11834   */\n  and\n    /* \"#utility.yul\":11780:11782   */\n  0x4e\n    /* \"#utility.yul\":11770:11778   */\n  dup5\n    /* \"#utility.yul\":11767:11783   */\n  lt\n    /* \"#utility.yul\":11762:11764   */\n  0x0b\n    /* \"#utility.yul\":11756:11760   */\n  dup5\n    /* \"#utility.yul\":11753:11765   */\n  lt\n    /* \"#utility.yul\":11749:11784   */\n  and\n    /* \"#utility.yul\":11733:11844   */\n  or\n    /* \"#utility.yul\":11730:11976   */\n  iszero\n  tag_267\n  jumpi\n    /* \"#utility.yul\":11886:11894   */\n  dup3\n    /* \"#utility.yul\":11880:11884   */\n  dup3\n    /* \"#utility.yul\":11876:11895   */\n  exp\n    /* \"#utility.yul\":11867:11895   */\n  swap1\n  pop\n    /* \"#utility.yul\":11921:11924   */\n  dup4\n    /* \"#utility.yul\":11914:11919   */\n  dup2\n    /* \"#utility.yul\":11911:11925   */\n  gt\n    /* \"#utility.yul\":11908:11948   */\n  iszero\n  tag_268\n  jumpi\n    /* \"#utility.yul\":11928:11946   */\n  tag_269\n  tag_117\n  jump\t// in\ntag_269:\n    /* \"#utility.yul\":11908:11948   */\ntag_268:\n    /* \"#utility.yul\":11961:11966   */\n  jump(tag_257)\n    /* \"#utility.yul\":11730:11976   */\ntag_267:\n    /* \"#utility.yul\":12001:12043   */\n  tag_270\n    /* \"#utility.yul\":12039:12042   */\n  dup5\n    /* \"#utility.yul\":12029:12037   */\n  dup5\n    /* \"#utility.yul\":12023:12027   */\n  dup5\n    /* \"#utility.yul\":12020:12021   */\n  0x01\n    /* \"#utility.yul\":12001:12043   */\n  tag_119\n  jump\t// in\ntag_270:\n    /* \"#utility.yul\":11986:12043   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":12075:12079   */\n  dup2\n    /* \"#utility.yul\":12070:12073   */\n  dup5\n    /* \"#utility.yul\":12066:12080   */\n  div\n    /* \"#utility.yul\":12059:12064   */\n  dup2\n    /* \"#utility.yul\":12056:12081   */\n  gt\n    /* \"#utility.yul\":12053:12104   */\n  iszero\n  tag_271\n  jumpi\n    /* \"#utility.yul\":12084:12102   */\n  tag_272\n  tag_117\n  jump\t// in\ntag_272:\n    /* \"#utility.yul\":12053:12104   */\ntag_271:\n    /* \"#utility.yul\":12133:12137   */\n  dup2\n    /* \"#utility.yul\":12126:12131   */\n  dup2\n    /* \"#utility.yul\":12122:12138   */\n  mul\n    /* \"#utility.yul\":12113:12138   */\n  swap1\n  pop\n    /* \"#utility.yul\":11071:12144   */\ntag_257:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12150:12236   */\ntag_121:\n    /* \"#utility.yul\":12185:12192   */\n  0x00\n    /* \"#utility.yul\":12225:12229   */\n  0xff\n    /* \"#utility.yul\":12218:12223   */\n  dup3\n    /* \"#utility.yul\":12214:12230   */\n  and\n    /* \"#utility.yul\":12203:12230   */\n  swap1\n  pop\n    /* \"#utility.yul\":12150:12236   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12242:12523   */\ntag_24:\n    /* \"#utility.yul\":12300:12305   */\n  0x00\n    /* \"#utility.yul\":12324:12347   */\n  tag_275\n    /* \"#utility.yul\":12342:12346   */\n  dup3\n    /* \"#utility.yul\":12324:12347   */\n  tag_95\n  jump\t// in\ntag_275:\n    /* \"#utility.yul\":12316:12347   */\n  swap2\n  pop\n    /* \"#utility.yul\":12368:12393   */\n  tag_276\n    /* \"#utility.yul\":12384:12392   */\n  dup4\n    /* \"#utility.yul\":12368:12393   */\n  tag_121\n  jump\t// in\ntag_276:\n    /* \"#utility.yul\":12356:12393   */\n  swap3\n  pop\n    /* \"#utility.yul\":12412:12516   */\n  tag_277\n    /* \"#utility.yul\":12449:12515   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":12439:12447   */\n  dup5\n    /* \"#utility.yul\":12433:12437   */\n  dup5\n    /* \"#utility.yul\":12412:12516   */\n  tag_120\n  jump\t// in\ntag_277:\n    /* \"#utility.yul\":12403:12516   */\n  swap1\n  pop\n    /* \"#utility.yul\":12242:12523   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12529:12939   */\ntag_26:\n    /* \"#utility.yul\":12569:12576   */\n  0x00\n    /* \"#utility.yul\":12592:12612   */\n  tag_279\n    /* \"#utility.yul\":12610:12611   */\n  dup3\n    /* \"#utility.yul\":12592:12612   */\n  tag_95\n  jump\t// in\ntag_279:\n    /* \"#utility.yul\":12587:12612   */\n  swap2\n  pop\n    /* \"#utility.yul\":12626:12646   */\n  tag_280\n    /* \"#utility.yul\":12644:12645   */\n  dup4\n    /* \"#utility.yul\":12626:12646   */\n  tag_95\n  jump\t// in\ntag_280:\n    /* \"#utility.yul\":12621:12646   */\n  swap3\n  pop\n    /* \"#utility.yul\":12681:12682   */\n  dup3\n    /* \"#utility.yul\":12678:12679   */\n  dup3\n    /* \"#utility.yul\":12674:12683   */\n  mul\n    /* \"#utility.yul\":12703:12733   */\n  tag_281\n    /* \"#utility.yul\":12721:12732   */\n  dup2\n    /* \"#utility.yul\":12703:12733   */\n  tag_95\n  jump\t// in\ntag_281:\n    /* \"#utility.yul\":12692:12733   */\n  swap2\n  pop\n    /* \"#utility.yul\":12882:12883   */\n  dup3\n    /* \"#utility.yul\":12873:12880   */\n  dup3\n    /* \"#utility.yul\":12869:12884   */\n  div\n    /* \"#utility.yul\":12866:12867   */\n  dup5\n    /* \"#utility.yul\":12863:12885   */\n  eq\n    /* \"#utility.yul\":12843:12844   */\n  dup4\n    /* \"#utility.yul\":12836:12845   */\n  iszero\n    /* \"#utility.yul\":12816:12899   */\n  or\n    /* \"#utility.yul\":12793:12932   */\n  tag_282\n  jumpi\n    /* \"#utility.yul\":12912:12930   */\n  tag_283\n  tag_117\n  jump\t// in\ntag_283:\n    /* \"#utility.yul\":12793:12932   */\ntag_282:\n    /* \"#utility.yul\":12577:12939   */\n  pop\n    /* \"#utility.yul\":12529:12939   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12945:13030   */\ntag_122:\n    /* \"#utility.yul\":12990:12997   */\n  0x00\n    /* \"#utility.yul\":13019:13024   */\n  dup2\n    /* \"#utility.yul\":13008:13024   */\n  swap1\n  pop\n    /* \"#utility.yul\":12945:13030   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13036:13194   */\ntag_123:\n    /* \"#utility.yul\":13094:13103   */\n  0x00\n    /* \"#utility.yul\":13127:13188   */\n  tag_286\n    /* \"#utility.yul\":13145:13187   */\n  tag_287\n    /* \"#utility.yul\":13154:13186   */\n  tag_288\n    /* \"#utility.yul\":13180:13185   */\n  dup5\n    /* \"#utility.yul\":13154:13186   */\n  tag_122\n  jump\t// in\ntag_288:\n    /* \"#utility.yul\":13145:13187   */\n  tag_105\n  jump\t// in\ntag_287:\n    /* \"#utility.yul\":13127:13188   */\n  tag_95\n  jump\t// in\ntag_286:\n    /* \"#utility.yul\":13114:13188   */\n  swap1\n  pop\n    /* \"#utility.yul\":13036:13194   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13200:13347   */\ntag_124:\n    /* \"#utility.yul\":13295:13340   */\n  tag_290\n    /* \"#utility.yul\":13334:13339   */\n  dup2\n    /* \"#utility.yul\":13295:13340   */\n  tag_123\n  jump\t// in\ntag_290:\n    /* \"#utility.yul\":13290:13293   */\n  dup3\n    /* \"#utility.yul\":13283:13341   */\n  mstore\n    /* \"#utility.yul\":13200:13347   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13353:13471   */\ntag_125:\n    /* \"#utility.yul\":13440:13464   */\n  tag_292\n    /* \"#utility.yul\":13458:13463   */\n  dup2\n    /* \"#utility.yul\":13440:13464   */\n  tag_95\n  jump\t// in\ntag_292:\n    /* \"#utility.yul\":13435:13438   */\n  dup3\n    /* \"#utility.yul\":13428:13465   */\n  mstore\n    /* \"#utility.yul\":13353:13471   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13477:13825   */\ntag_29:\n    /* \"#utility.yul\":13606:13610   */\n  0x00\n    /* \"#utility.yul\":13644:13646   */\n  0x40\n    /* \"#utility.yul\":13633:13642   */\n  dup3\n    /* \"#utility.yul\":13629:13647   */\n  add\n    /* \"#utility.yul\":13621:13647   */\n  swap1\n  pop\n    /* \"#utility.yul\":13657:13736   */\n  tag_294\n    /* \"#utility.yul\":13733:13734   */\n  0x00\n    /* \"#utility.yul\":13722:13731   */\n  dup4\n    /* \"#utility.yul\":13718:13735   */\n  add\n    /* \"#utility.yul\":13709:13715   */\n  dup6\n    /* \"#utility.yul\":13657:13736   */\n  tag_124\n  jump\t// in\ntag_294:\n    /* \"#utility.yul\":13746:13818   */\n  tag_295\n    /* \"#utility.yul\":13814:13816   */\n  0x20\n    /* \"#utility.yul\":13803:13812   */\n  dup4\n    /* \"#utility.yul\":13799:13817   */\n  add\n    /* \"#utility.yul\":13790:13796   */\n  dup5\n    /* \"#utility.yul\":13746:13818   */\n  tag_125\n  jump\t// in\ntag_295:\n    /* \"#utility.yul\":13477:13825   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13831:13921   */\ntag_126:\n    /* \"#utility.yul\":13865:13872   */\n  0x00\n    /* \"#utility.yul\":13908:13913   */\n  dup2\n    /* \"#utility.yul\":13901:13914   */\n  iszero\n    /* \"#utility.yul\":13894:13915   */\n  iszero\n    /* \"#utility.yul\":13883:13915   */\n  swap1\n  pop\n    /* \"#utility.yul\":13831:13921   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13927:14036   */\ntag_127:\n    /* \"#utility.yul\":14008:14029   */\n  tag_298\n    /* \"#utility.yul\":14023:14028   */\n  dup2\n    /* \"#utility.yul\":14008:14029   */\n  tag_126\n  jump\t// in\ntag_298:\n    /* \"#utility.yul\":14003:14006   */\n  dup3\n    /* \"#utility.yul\":13996:14030   */\n  mstore\n    /* \"#utility.yul\":13927:14036   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14042:14252   */\ntag_31:\n    /* \"#utility.yul\":14129:14133   */\n  0x00\n    /* \"#utility.yul\":14167:14169   */\n  0x20\n    /* \"#utility.yul\":14156:14165   */\n  dup3\n    /* \"#utility.yul\":14152:14170   */\n  add\n    /* \"#utility.yul\":14144:14170   */\n  swap1\n  pop\n    /* \"#utility.yul\":14180:14245   */\n  tag_300\n    /* \"#utility.yul\":14242:14243   */\n  0x00\n    /* \"#utility.yul\":14231:14240   */\n  dup4\n    /* \"#utility.yul\":14227:14244   */\n  add\n    /* \"#utility.yul\":14218:14224   */\n  dup5\n    /* \"#utility.yul\":14180:14245   */\n  tag_127\n  jump\t// in\ntag_300:\n    /* \"#utility.yul\":14042:14252   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14258:14438   */\ntag_128:\n    /* \"#utility.yul\":14306:14383   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":14303:14304   */\n  0x00\n    /* \"#utility.yul\":14296:14384   */\n  mstore\n    /* \"#utility.yul\":14403:14407   */\n  0x12\n    /* \"#utility.yul\":14400:14401   */\n  0x04\n    /* \"#utility.yul\":14393:14408   */\n  mstore\n    /* \"#utility.yul\":14427:14431   */\n  0x24\n    /* \"#utility.yul\":14424:14425   */\n  0x00\n    /* \"#utility.yul\":14417:14432   */\n  revert\n    /* \"#utility.yul\":14444:14629   */\ntag_47:\n    /* \"#utility.yul\":14484:14485   */\n  0x00\n    /* \"#utility.yul\":14501:14521   */\n  tag_303\n    /* \"#utility.yul\":14519:14520   */\n  dup3\n    /* \"#utility.yul\":14501:14521   */\n  tag_95\n  jump\t// in\ntag_303:\n    /* \"#utility.yul\":14496:14521   */\n  swap2\n  pop\n    /* \"#utility.yul\":14535:14555   */\n  tag_304\n    /* \"#utility.yul\":14553:14554   */\n  dup4\n    /* \"#utility.yul\":14535:14555   */\n  tag_95\n  jump\t// in\ntag_304:\n    /* \"#utility.yul\":14530:14555   */\n  swap3\n  pop\n    /* \"#utility.yul\":14574:14575   */\n  dup3\n    /* \"#utility.yul\":14564:14599   */\n  tag_305\n  jumpi\n    /* \"#utility.yul\":14579:14597   */\n  tag_306\n  tag_128\n  jump\t// in\ntag_306:\n    /* \"#utility.yul\":14564:14599   */\ntag_305:\n    /* \"#utility.yul\":14621:14622   */\n  dup3\n    /* \"#utility.yul\":14618:14619   */\n  dup3\n    /* \"#utility.yul\":14614:14623   */\n  div\n    /* \"#utility.yul\":14609:14623   */\n  swap1\n  pop\n    /* \"#utility.yul\":14444:14629   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14635:14829   */\ntag_52:\n    /* \"#utility.yul\":14675:14679   */\n  0x00\n    /* \"#utility.yul\":14695:14715   */\n  tag_308\n    /* \"#utility.yul\":14713:14714   */\n  dup3\n    /* \"#utility.yul\":14695:14715   */\n  tag_95\n  jump\t// in\ntag_308:\n    /* \"#utility.yul\":14690:14715   */\n  swap2\n  pop\n    /* \"#utility.yul\":14729:14749   */\n  tag_309\n    /* \"#utility.yul\":14747:14748   */\n  dup4\n    /* \"#utility.yul\":14729:14749   */\n  tag_95\n  jump\t// in\ntag_309:\n    /* \"#utility.yul\":14724:14749   */\n  swap3\n  pop\n    /* \"#utility.yul\":14773:14774   */\n  dup3\n    /* \"#utility.yul\":14770:14771   */\n  dup3\n    /* \"#utility.yul\":14766:14775   */\n  sub\n    /* \"#utility.yul\":14758:14775   */\n  swap1\n  pop\n    /* \"#utility.yul\":14797:14798   */\n  dup2\n    /* \"#utility.yul\":14791:14795   */\n  dup2\n    /* \"#utility.yul\":14788:14799   */\n  gt\n    /* \"#utility.yul\":14785:14822   */\n  iszero\n  tag_310\n  jumpi\n    /* \"#utility.yul\":14802:14820   */\n  tag_311\n  tag_117\n  jump\t// in\ntag_311:\n    /* \"#utility.yul\":14785:14822   */\ntag_310:\n    /* \"#utility.yul\":14635:14829   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14835:15026   */\ntag_68:\n    /* \"#utility.yul\":14875:14878   */\n  0x00\n    /* \"#utility.yul\":14894:14914   */\n  tag_313\n    /* \"#utility.yul\":14912:14913   */\n  dup3\n    /* \"#utility.yul\":14894:14914   */\n  tag_95\n  jump\t// in\ntag_313:\n    /* \"#utility.yul\":14889:14914   */\n  swap2\n  pop\n    /* \"#utility.yul\":14928:14948   */\n  tag_314\n    /* \"#utility.yul\":14946:14947   */\n  dup4\n    /* \"#utility.yul\":14928:14948   */\n  tag_95\n  jump\t// in\ntag_314:\n    /* \"#utility.yul\":14923:14948   */\n  swap3\n  pop\n    /* \"#utility.yul\":14971:14972   */\n  dup3\n    /* \"#utility.yul\":14968:14969   */\n  dup3\n    /* \"#utility.yul\":14964:14973   */\n  add\n    /* \"#utility.yul\":14957:14973   */\n  swap1\n  pop\n    /* \"#utility.yul\":14992:14995   */\n  dup1\n    /* \"#utility.yul\":14989:14990   */\n  dup3\n    /* \"#utility.yul\":14986:14996   */\n  gt\n    /* \"#utility.yul\":14983:15019   */\n  iszero\n  tag_315\n  jumpi\n    /* \"#utility.yul\":14999:15017   */\n  tag_316\n  tag_117\n  jump\t// in\ntag_316:\n    /* \"#utility.yul\":14983:15019   */\ntag_315:\n    /* \"#utility.yul\":14835:15026   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":15032:15474   */\ntag_72:\n    /* \"#utility.yul\":15181:15185   */\n  0x00\n    /* \"#utility.yul\":15219:15221   */\n  0x60\n    /* \"#utility.yul\":15208:15217   */\n  dup3\n    /* \"#utility.yul\":15204:15222   */\n  add\n    /* \"#utility.yul\":15196:15222   */\n  swap1\n  pop\n    /* \"#utility.yul\":15232:15303   */\n  tag_318\n    /* \"#utility.yul\":15300:15301   */\n  0x00\n    /* \"#utility.yul\":15289:15298   */\n  dup4\n    /* \"#utility.yul\":15285:15302   */\n  add\n    /* \"#utility.yul\":15276:15282   */\n  dup7\n    /* \"#utility.yul\":15232:15303   */\n  tag_116\n  jump\t// in\ntag_318:\n    /* \"#utility.yul\":15313:15385   */\n  tag_319\n    /* \"#utility.yul\":15381:15383   */\n  0x20\n    /* \"#utility.yul\":15370:15379   */\n  dup4\n    /* \"#utility.yul\":15366:15384   */\n  add\n    /* \"#utility.yul\":15357:15363   */\n  dup6\n    /* \"#utility.yul\":15313:15385   */\n  tag_125\n  jump\t// in\ntag_319:\n    /* \"#utility.yul\":15395:15467   */\n  tag_320\n    /* \"#utility.yul\":15463:15465   */\n  0x40\n    /* \"#utility.yul\":15452:15461   */\n  dup4\n    /* \"#utility.yul\":15448:15466   */\n  add\n    /* \"#utility.yul\":15439:15445   */\n  dup5\n    /* \"#utility.yul\":15395:15467   */\n  tag_125\n  jump\t// in\ntag_320:\n    /* \"#utility.yul\":15032:15474   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":15480:15702   */\ntag_76:\n    /* \"#utility.yul\":15573:15577   */\n  0x00\n    /* \"#utility.yul\":15611:15613   */\n  0x20\n    /* \"#utility.yul\":15600:15609   */\n  dup3\n    /* \"#utility.yul\":15596:15614   */\n  add\n    /* \"#utility.yul\":15588:15614   */\n  swap1\n  pop\n    /* \"#utility.yul\":15624:15695   */\n  tag_322\n    /* \"#utility.yul\":15692:15693   */\n  0x00\n    /* \"#utility.yul\":15681:15690   */\n  dup4\n    /* \"#utility.yul\":15677:15694   */\n  add\n    /* \"#utility.yul\":15668:15674   */\n  dup5\n    /* \"#utility.yul\":15624:15695   */\n  tag_125\n  jump\t// in\ntag_322:\n    /* \"#utility.yul\":15480:15702   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Monica.sol\":414:5404  contract Monica is ERC20, ERC20Pausable, Ownable {... */\ntag_33:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Monica.sol\":414:5404  contract Monica is ERC20, ERC20Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x751fd179\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa071dcf4\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xc4081a4c\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xc4081a4c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf0f44260\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xa071dcf4\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xbc063e1a\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x751fd179\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x92828671\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x99f3bc9a\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x3f4ba83a\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x483a9310\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4218e0\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Monica.sol\":3882:4136  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Monica.sol\":725:768  mapping(address => bool) public isFeeExempt */\n    tag_8:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Monica.sol\":3478:3541  function unpause() public onlyOwner {... */\n    tag_9:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      stop\n        /* \"Monica.sol\":4666:4787  function calculateTax(uint256 amount) external view returns (uint256) {... */\n    tag_10:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_11:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Monica.sol\":493:516  address public treasury */\n    tag_12:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      stop\n        /* \"Monica.sol\":3230:3407  function setFeeExemption(address _account, bool _exempt) external onlyOwner {... */\n    tag_15:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"Monica.sol\":3413:3472  function pause() public onlyOwner {... */\n    tag_16:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      stop\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Monica.sol\":4214:4298  function getMaxFee() external pure returns (uint256) {... */\n    tag_18:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Monica.sol\":4398:4491  function getTaxFeePercentage() external view returns (uint256) {... */\n    tag_20:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Monica.sol\":522:543  uint256 public taxFee */\n    tag_21:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Monica.sol\":3614:3801  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Monica.sol\":632:669  uint256 public constant MAX_FEE = 200 */\n    tag_23:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Monica.sol\":2804:3041  function setTaxFee(uint256 _newFee) external onlyOwner {... */\n    tag_24:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_25:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Monica.sol\":2173:2696  function setTreasury(address _newTreasury) external onlyOwner {... */\n    tag_26:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      stop\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      stop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_125\n      swap1\n      tag_124\n      jump\t// in\n    tag_125:\n      dup1\n      iszero\n      tag_126\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_127\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_126)\n    tag_127:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_128:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_128\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_130\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_132\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_133\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Monica.sol\":3882:4136  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_49:\n        /* \"Monica.sol\":3979:3983  bool */\n      0x00\n        /* \"Monica.sol\":3995:4010  address spender */\n      0x00\n        /* \"Monica.sol\":4013:4025  _msgSender() */\n      tag_136\n        /* \"Monica.sol\":4013:4023  _msgSender */\n      tag_131\n        /* \"Monica.sol\":4013:4025  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"Monica.sol\":3995:4025  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"Monica.sol\":4035:4073  _spendAllowance(from, spender, amount) */\n      tag_137\n        /* \"Monica.sol\":4051:4055  from */\n      dup6\n        /* \"Monica.sol\":4057:4064  spender */\n      dup3\n        /* \"Monica.sol\":4066:4072  amount */\n      dup6\n        /* \"Monica.sol\":4035:4050  _spendAllowance */\n      tag_138\n        /* \"Monica.sol\":4035:4073  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_137:\n        /* \"Monica.sol\":4083:4108  _update(from, to, amount) */\n      tag_139\n        /* \"Monica.sol\":4091:4095  from */\n      dup6\n        /* \"Monica.sol\":4097:4099  to */\n      dup6\n        /* \"Monica.sol\":4101:4107  amount */\n      dup6\n        /* \"Monica.sol\":4083:4090  _update */\n      tag_140\n        /* \"Monica.sol\":4083:4108  _update(from, to, amount) */\n      jump\t// in\n    tag_139:\n        /* \"Monica.sol\":4125:4129  true */\n      0x01\n        /* \"Monica.sol\":4118:4129  return true */\n      swap2\n      pop\n      pop\n        /* \"Monica.sol\":3882:4136  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Monica.sol\":725:768  mapping(address => bool) public isFeeExempt */\n    tag_58:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Monica.sol\":3478:3541  function unpause() public onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"Monica.sol\":3524:3534  _unpause() */\n      tag_146\n        /* \"Monica.sol\":3524:3532  _unpause */\n      tag_147\n        /* \"Monica.sol\":3524:3534  _unpause() */\n      jump\t// in\n    tag_146:\n        /* \"Monica.sol\":3478:3541  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"Monica.sol\":4666:4787  function calculateTax(uint256 amount) external view returns (uint256) {... */\n    tag_65:\n        /* \"Monica.sol\":4727:4734  uint256 */\n      0x00\n        /* \"Monica.sol\":666:669  200 */\n      0xc8\n        /* \"Monica.sol\":4763:4769  taxFee */\n      sload(0x07)\n        /* \"Monica.sol\":4754:4760  amount */\n      dup4\n        /* \"Monica.sol\":4754:4769  amount * taxFee */\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"Monica.sol\":4753:4780  (amount * taxFee) / MAX_FEE */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"Monica.sol\":4746:4780  return (amount * taxFee) / MAX_FEE */\n      swap1\n      pop\n        /* \"Monica.sol\":4666:4787  function calculateTax(uint256 amount) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1773:1777  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1796:1803  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1789:1803  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Monica.sol\":493:516  address public treasury */\n    tag_71:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_156\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_158\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_159\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Monica.sol\":3230:3407  function setFeeExemption(address _account, bool _exempt) external onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_161\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_161:\n        /* \"Monica.sol\":3340:3347  _exempt */\n      dup1\n        /* \"Monica.sol\":3316:3327  isFeeExempt */\n      0x08\n        /* \"Monica.sol\":3316:3337  isFeeExempt[_account] */\n      0x00\n        /* \"Monica.sol\":3328:3336  _account */\n      dup5\n        /* \"Monica.sol\":3316:3337  isFeeExempt[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Monica.sol\":3316:3347  isFeeExempt[_account] = _exempt */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Monica.sol\":3382:3390  _account */\n      dup2\n        /* \"Monica.sol\":3362:3400  FeeExemptionUpdated(_account, _exempt) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f\n        /* \"Monica.sol\":3392:3399  _exempt */\n      dup3\n        /* \"Monica.sol\":3362:3400  FeeExemptionUpdated(_account, _exempt) */\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Monica.sol\":3230:3407  function setFeeExemption(address _account, bool _exempt) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Monica.sol\":3413:3472  function pause() public onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_165\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_165:\n        /* \"Monica.sol\":3457:3465  _pause() */\n      tag_167\n        /* \"Monica.sol\":3457:3463  _pause */\n      tag_168\n        /* \"Monica.sol\":3457:3465  _pause() */\n      jump\t// in\n    tag_167:\n        /* \"Monica.sol\":3413:3472  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Monica.sol\":4214:4298  function getMaxFee() external pure returns (uint256) {... */\n    tag_90:\n        /* \"Monica.sol\":4258:4265  uint256 */\n      0x00\n        /* \"Monica.sol\":666:669  200 */\n      0xc8\n        /* \"Monica.sol\":4277:4291  return MAX_FEE */\n      swap1\n      pop\n        /* \"Monica.sol\":4214:4298  function getMaxFee() external pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_172\n      swap1\n      tag_124\n      jump\t// in\n    tag_172:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_173\n      swap1\n      tag_124\n      jump\t// in\n    tag_173:\n      dup1\n      iszero\n      tag_174\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_175\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_174)\n    tag_175:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_176:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_176\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Monica.sol\":4398:4491  function getTaxFeePercentage() external view returns (uint256) {... */\n    tag_96:\n        /* \"Monica.sol\":4452:4459  uint256 */\n      0x00\n        /* \"Monica.sol\":4478:4484  taxFee */\n      sload(0x07)\n        /* \"Monica.sol\":4471:4484  return taxFee */\n      swap1\n      pop\n        /* \"Monica.sol\":4398:4491  function getTaxFeePercentage() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Monica.sol\":522:543  uint256 public taxFee */\n    tag_99:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"Monica.sol\":3614:3801  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_103:\n        /* \"Monica.sol\":3693:3697  bool */\n      0x00\n        /* \"Monica.sol\":3709:3722  address owner */\n      0x00\n        /* \"Monica.sol\":3725:3737  _msgSender() */\n      tag_179\n        /* \"Monica.sol\":3725:3735  _msgSender */\n      tag_131\n        /* \"Monica.sol\":3725:3737  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"Monica.sol\":3709:3737  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"Monica.sol\":3747:3773  _update(owner, to, amount) */\n      tag_180\n        /* \"Monica.sol\":3755:3760  owner */\n      dup2\n        /* \"Monica.sol\":3762:3764  to */\n      dup6\n        /* \"Monica.sol\":3766:3772  amount */\n      dup6\n        /* \"Monica.sol\":3747:3754  _update */\n      tag_140\n        /* \"Monica.sol\":3747:3773  _update(owner, to, amount) */\n      jump\t// in\n    tag_180:\n        /* \"Monica.sol\":3790:3794  true */\n      0x01\n        /* \"Monica.sol\":3783:3794  return true */\n      swap2\n      pop\n      pop\n        /* \"Monica.sol\":3614:3801  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Monica.sol\":632:669  uint256 public constant MAX_FEE = 200 */\n    tag_106:\n        /* \"Monica.sol\":666:669  200 */\n      0xc8\n        /* \"Monica.sol\":632:669  uint256 public constant MAX_FEE = 200 */\n      dup2\n      jump\t// out\n        /* \"Monica.sol\":2804:3041  function setTaxFee(uint256 _newFee) external onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_182\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_182:\n        /* \"Monica.sol\":2883:2888  10000 */\n      0x2710\n        /* \"Monica.sol\":2873:2880  _newFee */\n      dup2\n        /* \"Monica.sol\":2873:2888  _newFee > 10000 */\n      gt\n        /* \"Monica.sol\":2869:2912  if (_newFee > 10000) revert InvalidTaxFee() */\n      iszero\n      tag_184\n      jumpi\n        /* \"Monica.sol\":2897:2912  InvalidTaxFee() */\n      mload(0x40)\n      0x5ba09ae000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Monica.sol\":2869:2912  if (_newFee > 10000) revert InvalidTaxFee() */\n    tag_184:\n        /* \"Monica.sol\":2931:2945  uint256 oldFee */\n      0x00\n        /* \"Monica.sol\":2948:2954  taxFee */\n      sload(0x07)\n        /* \"Monica.sol\":2931:2954  uint256 oldFee = taxFee */\n      swap1\n      pop\n        /* \"Monica.sol\":2973:2980  _newFee */\n      dup2\n        /* \"Monica.sol\":2964:2970  taxFee */\n      0x07\n        /* \"Monica.sol\":2964:2980  taxFee = _newFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Monica.sol\":3004:3034  TaxFeeUpdated(oldFee, _newFee) */\n      0x2211abb4bbc4d80b7505c31b54d01d15ac6e33a42c59540d309d89daf759063a\n        /* \"Monica.sol\":3018:3024  oldFee */\n      dup2\n        /* \"Monica.sol\":3026:3033  _newFee */\n      dup4\n        /* \"Monica.sol\":3004:3034  TaxFeeUpdated(oldFee, _newFee) */\n      mload(0x40)\n      tag_185\n      swap3\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Monica.sol\":2859:3041  {... */\n      pop\n        /* \"Monica.sol\":2804:3041  function setTaxFee(uint256 _newFee) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Monica.sol\":2173:2696  function setTreasury(address _newTreasury) external onlyOwner {... */\n    tag_118:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"Monica.sol\":2273:2274  0 */\n      0x00\n        /* \"Monica.sol\":2249:2275  _newTreasury == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Monica.sol\":2249:2261  _newTreasury */\n      dup2\n        /* \"Monica.sol\":2249:2275  _newTreasury == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Monica.sol\":2245:2308  if (_newTreasury == address(0)) revert InvalidTreasuryAddress() */\n      tag_191\n      jumpi\n        /* \"Monica.sol\":2284:2308  InvalidTreasuryAddress() */\n      mload(0x40)\n      0xcfe2ea6300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Monica.sol\":2245:2308  if (_newTreasury == address(0)) revert InvalidTreasuryAddress() */\n    tag_191:\n        /* \"Monica.sol\":2327:2346  address oldTreasury */\n      0x00\n        /* \"Monica.sol\":2349:2357  treasury */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Monica.sol\":2327:2357  address oldTreasury = treasury */\n      swap1\n      pop\n        /* \"Monica.sol\":2378:2390  _newTreasury */\n      dup2\n        /* \"Monica.sol\":2367:2375  treasury */\n      0x06\n      0x00\n        /* \"Monica.sol\":2367:2390  treasury = _newTreasury */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Monica.sol\":2468:2473  false */\n      0x00\n        /* \"Monica.sol\":2441:2452  isFeeExempt */\n      0x08\n        /* \"Monica.sol\":2441:2465  isFeeExempt[oldTreasury] */\n      0x00\n        /* \"Monica.sol\":2453:2464  oldTreasury */\n      dup4\n        /* \"Monica.sol\":2441:2465  isFeeExempt[oldTreasury] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Monica.sol\":2441:2473  isFeeExempt[oldTreasury] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Monica.sol\":2511:2515  true */\n      0x01\n        /* \"Monica.sol\":2483:2494  isFeeExempt */\n      0x08\n        /* \"Monica.sol\":2483:2508  isFeeExempt[_newTreasury] */\n      0x00\n        /* \"Monica.sol\":2495:2507  _newTreasury */\n      dup5\n        /* \"Monica.sol\":2483:2508  isFeeExempt[_newTreasury] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Monica.sol\":2483:2515  isFeeExempt[_newTreasury] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Monica.sol\":2568:2580  _newTreasury */\n      dup2\n        /* \"Monica.sol\":2539:2581  TreasuryUpdated(oldTreasury, _newTreasury) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Monica.sol\":2555:2566  oldTreasury */\n      dup2\n        /* \"Monica.sol\":2539:2581  TreasuryUpdated(oldTreasury, _newTreasury) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Monica.sol\":2616:2627  oldTreasury */\n      dup1\n        /* \"Monica.sol\":2596:2635  FeeExemptionUpdated(oldTreasury, false) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f\n        /* \"Monica.sol\":2629:2634  false */\n      0x00\n        /* \"Monica.sol\":2596:2635  FeeExemptionUpdated(oldTreasury, false) */\n      mload(0x40)\n      tag_192\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Monica.sol\":2670:2682  _newTreasury */\n      dup2\n        /* \"Monica.sol\":2650:2689  FeeExemptionUpdated(_newTreasury, true) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f\n        /* \"Monica.sol\":2684:2688  true */\n      0x01\n        /* \"Monica.sol\":2650:2689  FeeExemptionUpdated(_newTreasury, true) */\n      mload(0x40)\n      tag_193\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Monica.sol\":2235:2696  {... */\n      pop\n        /* \"Monica.sol\":2173:2696  function setTreasury(address _newTreasury) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_121:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_195\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_144\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_199\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_159\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts@5.4.0/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.4.0/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_133:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_202\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_203\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_138:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_205\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_114\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_210\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_203\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Monica.sol\":4861:5402  function _update(address from, address to, uint256 amount) internal override(ERC20, ERC20Pausable) {... */\n    tag_140:\n        /* \"Monica.sol\":4990:4991  0 */\n      0x00\n        /* \"Monica.sol\":4974:4992  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Monica.sol\":4974:4978  from */\n      dup4\n        /* \"Monica.sol\":4974:4992  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Monica.sol\":4974:5012  from != address(0) && to != address(0) */\n      dup1\n      iszero\n      tag_212\n      jumpi\n      pop\n        /* \"Monica.sol\":5010:5011  0 */\n      0x00\n        /* \"Monica.sol\":4996:5012  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Monica.sol\":4996:4998  to */\n      dup3\n        /* \"Monica.sol\":4996:5012  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Monica.sol\":4974:5012  from != address(0) && to != address(0) */\n    tag_212:\n        /* \"Monica.sol\":4970:5355  if (from != address(0) && to != address(0)) {... */\n      iszero\n      tag_213\n      jumpi\n        /* \"Monica.sol\":5041:5042  0 */\n      0x00\n        /* \"Monica.sol\":5032:5038  taxFee */\n      sload(0x07)\n        /* \"Monica.sol\":5032:5042  taxFee > 0 */\n      gt\n        /* \"Monica.sol\":5028:5345  if (taxFee > 0) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"Monica.sol\":5062:5073  uint256 fee */\n      0x00\n        /* \"Monica.sol\":5096:5099  100 */\n      0x64\n        /* \"Monica.sol\":5086:5092  taxFee */\n      sload(0x07)\n        /* \"Monica.sol\":5077:5083  amount */\n      dup4\n        /* \"Monica.sol\":5077:5092  amount * taxFee */\n      tag_215\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_215:\n        /* \"Monica.sol\":5076:5099  (amount * taxFee) / 100 */\n      tag_216\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_216:\n        /* \"Monica.sol\":5062:5099  uint256 fee = (amount * taxFee) / 100 */\n      swap1\n      pop\n        /* \"Monica.sol\":5127:5128  0 */\n      0x00\n        /* \"Monica.sol\":5121:5124  fee */\n      dup2\n        /* \"Monica.sol\":5121:5128  fee > 0 */\n      gt\n        /* \"Monica.sol\":5117:5331  if (fee > 0) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"Monica.sol\":5152:5186  super._update(from, treasury, fee) */\n      tag_218\n        /* \"Monica.sol\":5166:5170  from */\n      dup5\n        /* \"Monica.sol\":5172:5180  treasury */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Monica.sol\":5182:5185  fee */\n      dup4\n        /* \"Monica.sol\":5152:5165  super._update */\n      tag_219\n        /* \"Monica.sol\":5152:5186  super._update(from, treasury, fee) */\n      jump\t// in\n    tag_218:\n        /* \"Monica.sol\":5208:5219  uint256 net */\n      0x00\n        /* \"Monica.sol\":5231:5234  fee */\n      dup2\n        /* \"Monica.sol\":5222:5228  amount */\n      dup4\n        /* \"Monica.sol\":5222:5234  amount - fee */\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"Monica.sol\":5208:5234  uint256 net = amount - fee */\n      swap1\n      pop\n        /* \"Monica.sol\":5256:5284  super._update(from, to, net) */\n      tag_222\n        /* \"Monica.sol\":5270:5274  from */\n      dup6\n        /* \"Monica.sol\":5276:5278  to */\n      dup6\n        /* \"Monica.sol\":5280:5283  net */\n      dup4\n        /* \"Monica.sol\":5256:5269  super._update */\n      tag_219\n        /* \"Monica.sol\":5256:5284  super._update(from, to, net) */\n      jump\t// in\n    tag_222:\n        /* \"Monica.sol\":5306:5313  return; */\n      pop\n      pop\n      jump(tag_211)\n        /* \"Monica.sol\":5117:5331  if (fee > 0) {... */\n    tag_217:\n        /* \"Monica.sol\":5044:5345  {... */\n      pop\n        /* \"Monica.sol\":5028:5345  if (taxFee > 0) {... */\n    tag_214:\n        /* \"Monica.sol\":4970:5355  if (from != address(0) && to != address(0)) {... */\n    tag_213:\n        /* \"Monica.sol\":5364:5395  super._update(from, to, amount) */\n      tag_223\n        /* \"Monica.sol\":5378:5382  from */\n      dup4\n        /* \"Monica.sol\":5384:5386  to */\n      dup4\n        /* \"Monica.sol\":5388:5394  amount */\n      dup4\n        /* \"Monica.sol\":5364:5377  super._update */\n      tag_219\n        /* \"Monica.sol\":5364:5395  super._update(from, to, amount) */\n      jump\t// in\n    tag_223:\n        /* \"Monica.sol\":4861:5402  function _update(address from, address to, uint256 amount) internal override(ERC20, ERC20Pausable) {... */\n    tag_211:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_144:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_225\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1855:1862  owner() */\n      tag_226\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1855:1860  owner */\n      tag_87\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_228\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2586:2703  function _unpause() internal virtual whenPaused {... */\n    tag_147:\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1597:1613  _requirePaused() */\n      tag_231\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1597:1611  _requirePaused */\n      tag_232\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1597:1613  _requirePaused() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2654:2659  false */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2644:2651  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2644:2659  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2683:2695  _msgSender() */\n      tag_234\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2683:2693  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2683:2695  _msgSender() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_235\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2586:2703  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_159:\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x01\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2339:2454  function _pause() internal virtual whenNotPaused {... */\n    tag_168:\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_238\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_239\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2408:2412  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2398:2405  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2398:2412  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2427:2447  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2434:2446  _msgSender() */\n      tag_241\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2434:2444  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2434:2446  _msgSender() */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2427:2447  Paused(_msgSender()) */\n      mload(0x40)\n      tag_242\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2339:2454  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_203:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_249\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":1113:1258  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n    tag_219:\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_251\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_239\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":1221:1251  super._update(from, to, value) */\n      tag_253\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":1235:1239  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":1241:1243  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":1245:1250  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":1221:1234  super._update */\n      tag_254\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":1221:1251  super._update(from, to, value) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":1113:1258  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2078:2204  function _requirePaused() internal view virtual {... */\n    tag_232:\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2141:2149  paused() */\n      tag_256\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2141:2147  paused */\n      tag_68\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2141:2149  paused() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2136:2198  if (!paused()) {... */\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2172:2187  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2136:2198  if (!paused()) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":2078:2204  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n    tag_239:\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1943:1951  paused() */\n      tag_259\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1943:1949  paused */\n      tag_68\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1943:1951  paused() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n      iszero\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1974:1989  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_254:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_263\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_265)\n    tag_262:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_269)\n    tag_268:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_270\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_271:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_272:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_273:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_274:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_275:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_303\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_271\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":711:782   */\n      tag_304\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_272\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_305\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_273\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":881:910   */\n      tag_306\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_274\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_35:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_308\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_275\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_277:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_279:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_280:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_314\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_279\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_281:\n        /* \"#utility.yul\":1876:1900   */\n      tag_316\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_280\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_317:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_282:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_319\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_281\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_283:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_284:\n        /* \"#utility.yul\":2232:2256   */\n      tag_322\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_283\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_323:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_285:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_325\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_284\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_38:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_328\n      tag_277\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2525:2644   */\n    tag_327:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_329\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_282\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_330\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_285\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_286:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_287:\n        /* \"#utility.yul\":3089:3110   */\n      tag_333\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_286\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_41:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_335\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_287\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_288:\n        /* \"#utility.yul\":3426:3450   */\n      tag_337\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_283\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_45:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_339\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_288\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_48:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_342\n      tag_277\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":3801:3920   */\n    tag_341:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_343\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_282\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_344\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_282\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_345\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_285\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_289:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_290:\n        /* \"#utility.yul\":4491:4513   */\n      tag_348\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_289\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_54:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_350\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_290\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_57:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_353\n      tag_277\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4822:4941   */\n    tag_352:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_354\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_282\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_64:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_357\n      tag_277\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5157:5276   */\n    tag_356:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_358\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_285\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_291:\n        /* \"#utility.yul\":5503:5527   */\n      tag_360\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_280\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_73:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_362\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_291\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:5884   */\n    tag_292:\n        /* \"#utility.yul\":5838:5859   */\n      tag_364\n        /* \"#utility.yul\":5853:5858   */\n      dup2\n        /* \"#utility.yul\":5838:5859   */\n      tag_286\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5831:5836   */\n      dup2\n        /* \"#utility.yul\":5828:5860   */\n      eq\n        /* \"#utility.yul\":5818:5878   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":5874:5875   */\n      0x00\n        /* \"#utility.yul\":5871:5872   */\n      0x00\n        /* \"#utility.yul\":5864:5876   */\n      revert\n        /* \"#utility.yul\":5818:5878   */\n    tag_365:\n        /* \"#utility.yul\":5768:5884   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5890:6023   */\n    tag_293:\n        /* \"#utility.yul\":5933:5938   */\n      0x00\n        /* \"#utility.yul\":5971:5977   */\n      dup2\n        /* \"#utility.yul\":5958:5978   */\n      calldataload\n        /* \"#utility.yul\":5949:5978   */\n      swap1\n      pop\n        /* \"#utility.yul\":5987:6017   */\n      tag_367\n        /* \"#utility.yul\":6011:6016   */\n      dup2\n        /* \"#utility.yul\":5987:6017   */\n      tag_292\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":5890:6023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6029:6497   */\n    tag_82:\n        /* \"#utility.yul\":6094:6100   */\n      0x00\n        /* \"#utility.yul\":6102:6108   */\n      0x00\n        /* \"#utility.yul\":6151:6153   */\n      0x40\n        /* \"#utility.yul\":6139:6148   */\n      dup4\n        /* \"#utility.yul\":6130:6137   */\n      dup6\n        /* \"#utility.yul\":6126:6149   */\n      sub\n        /* \"#utility.yul\":6122:6154   */\n      slt\n        /* \"#utility.yul\":6119:6238   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":6157:6236   */\n      tag_370\n      tag_277\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":6119:6238   */\n    tag_369:\n        /* \"#utility.yul\":6277:6278   */\n      0x00\n        /* \"#utility.yul\":6302:6355   */\n      tag_371\n        /* \"#utility.yul\":6347:6354   */\n      dup6\n        /* \"#utility.yul\":6338:6344   */\n      dup3\n        /* \"#utility.yul\":6327:6336   */\n      dup7\n        /* \"#utility.yul\":6323:6345   */\n      add\n        /* \"#utility.yul\":6302:6355   */\n      tag_282\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6292:6355   */\n      swap3\n      pop\n        /* \"#utility.yul\":6248:6365   */\n      pop\n        /* \"#utility.yul\":6404:6406   */\n      0x20\n        /* \"#utility.yul\":6430:6480   */\n      tag_372\n        /* \"#utility.yul\":6472:6479   */\n      dup6\n        /* \"#utility.yul\":6463:6469   */\n      dup3\n        /* \"#utility.yul\":6452:6461   */\n      dup7\n        /* \"#utility.yul\":6448:6470   */\n      add\n        /* \"#utility.yul\":6430:6480   */\n      tag_293\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6420:6480   */\n      swap2\n      pop\n        /* \"#utility.yul\":6375:6490   */\n      pop\n        /* \"#utility.yul\":6029:6497   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6503:6977   */\n    tag_113:\n        /* \"#utility.yul\":6571:6577   */\n      0x00\n        /* \"#utility.yul\":6579:6585   */\n      0x00\n        /* \"#utility.yul\":6628:6630   */\n      0x40\n        /* \"#utility.yul\":6616:6625   */\n      dup4\n        /* \"#utility.yul\":6607:6614   */\n      dup6\n        /* \"#utility.yul\":6603:6626   */\n      sub\n        /* \"#utility.yul\":6599:6631   */\n      slt\n        /* \"#utility.yul\":6596:6715   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":6634:6713   */\n      tag_375\n      tag_277\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6596:6715   */\n    tag_374:\n        /* \"#utility.yul\":6754:6755   */\n      0x00\n        /* \"#utility.yul\":6779:6832   */\n      tag_376\n        /* \"#utility.yul\":6824:6831   */\n      dup6\n        /* \"#utility.yul\":6815:6821   */\n      dup3\n        /* \"#utility.yul\":6804:6813   */\n      dup7\n        /* \"#utility.yul\":6800:6822   */\n      add\n        /* \"#utility.yul\":6779:6832   */\n      tag_282\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":6769:6832   */\n      swap3\n      pop\n        /* \"#utility.yul\":6725:6842   */\n      pop\n        /* \"#utility.yul\":6881:6883   */\n      0x20\n        /* \"#utility.yul\":6907:6960   */\n      tag_377\n        /* \"#utility.yul\":6952:6959   */\n      dup6\n        /* \"#utility.yul\":6943:6949   */\n      dup3\n        /* \"#utility.yul\":6932:6941   */\n      dup7\n        /* \"#utility.yul\":6928:6950   */\n      add\n        /* \"#utility.yul\":6907:6960   */\n      tag_282\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6897:6960   */\n      swap2\n      pop\n        /* \"#utility.yul\":6852:6970   */\n      pop\n        /* \"#utility.yul\":6503:6977   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6983:7163   */\n    tag_294:\n        /* \"#utility.yul\":7031:7108   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7028:7029   */\n      0x00\n        /* \"#utility.yul\":7021:7109   */\n      mstore\n        /* \"#utility.yul\":7128:7132   */\n      0x22\n        /* \"#utility.yul\":7125:7126   */\n      0x04\n        /* \"#utility.yul\":7118:7133   */\n      mstore\n        /* \"#utility.yul\":7152:7156   */\n      0x24\n        /* \"#utility.yul\":7149:7150   */\n      0x00\n        /* \"#utility.yul\":7142:7157   */\n      revert\n        /* \"#utility.yul\":7169:7489   */\n    tag_124:\n        /* \"#utility.yul\":7213:7219   */\n      0x00\n        /* \"#utility.yul\":7250:7251   */\n      0x02\n        /* \"#utility.yul\":7244:7248   */\n      dup3\n        /* \"#utility.yul\":7240:7252   */\n      div\n        /* \"#utility.yul\":7230:7252   */\n      swap1\n      pop\n        /* \"#utility.yul\":7297:7298   */\n      0x01\n        /* \"#utility.yul\":7291:7295   */\n      dup3\n        /* \"#utility.yul\":7287:7299   */\n      and\n        /* \"#utility.yul\":7318:7336   */\n      dup1\n        /* \"#utility.yul\":7308:7389   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":7374:7378   */\n      0x7f\n        /* \"#utility.yul\":7366:7372   */\n      dup3\n        /* \"#utility.yul\":7362:7379   */\n      and\n        /* \"#utility.yul\":7352:7379   */\n      swap2\n      pop\n        /* \"#utility.yul\":7308:7389   */\n    tag_380:\n        /* \"#utility.yul\":7436:7438   */\n      0x20\n        /* \"#utility.yul\":7428:7434   */\n      dup3\n        /* \"#utility.yul\":7425:7439   */\n      lt\n        /* \"#utility.yul\":7405:7423   */\n      dup2\n        /* \"#utility.yul\":7402:7440   */\n      sub\n        /* \"#utility.yul\":7399:7483   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":7455:7473   */\n      tag_382\n      tag_294\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":7399:7483   */\n    tag_381:\n        /* \"#utility.yul\":7220:7489   */\n      pop\n        /* \"#utility.yul\":7169:7489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7495:7675   */\n    tag_295:\n        /* \"#utility.yul\":7543:7620   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7540:7541   */\n      0x00\n        /* \"#utility.yul\":7533:7621   */\n      mstore\n        /* \"#utility.yul\":7640:7644   */\n      0x11\n        /* \"#utility.yul\":7637:7638   */\n      0x04\n        /* \"#utility.yul\":7630:7645   */\n      mstore\n        /* \"#utility.yul\":7664:7668   */\n      0x24\n        /* \"#utility.yul\":7661:7662   */\n      0x00\n        /* \"#utility.yul\":7654:7669   */\n      revert\n        /* \"#utility.yul\":7681:8091   */\n    tag_150:\n        /* \"#utility.yul\":7721:7728   */\n      0x00\n        /* \"#utility.yul\":7744:7764   */\n      tag_385\n        /* \"#utility.yul\":7762:7763   */\n      dup3\n        /* \"#utility.yul\":7744:7764   */\n      tag_283\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7739:7764   */\n      swap2\n      pop\n        /* \"#utility.yul\":7778:7798   */\n      tag_386\n        /* \"#utility.yul\":7796:7797   */\n      dup4\n        /* \"#utility.yul\":7778:7798   */\n      tag_283\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":7773:7798   */\n      swap3\n      pop\n        /* \"#utility.yul\":7833:7834   */\n      dup3\n        /* \"#utility.yul\":7830:7831   */\n      dup3\n        /* \"#utility.yul\":7826:7835   */\n      mul\n        /* \"#utility.yul\":7855:7885   */\n      tag_387\n        /* \"#utility.yul\":7873:7884   */\n      dup2\n        /* \"#utility.yul\":7855:7885   */\n      tag_283\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":7844:7885   */\n      swap2\n      pop\n        /* \"#utility.yul\":8034:8035   */\n      dup3\n        /* \"#utility.yul\":8025:8032   */\n      dup3\n        /* \"#utility.yul\":8021:8036   */\n      div\n        /* \"#utility.yul\":8018:8019   */\n      dup5\n        /* \"#utility.yul\":8015:8037   */\n      eq\n        /* \"#utility.yul\":7995:7996   */\n      dup4\n        /* \"#utility.yul\":7988:7997   */\n      iszero\n        /* \"#utility.yul\":7968:8051   */\n      or\n        /* \"#utility.yul\":7945:8084   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":8064:8082   */\n      tag_389\n      tag_295\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":7945:8084   */\n    tag_388:\n        /* \"#utility.yul\":7729:8091   */\n      pop\n        /* \"#utility.yul\":7681:8091   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8097:8277   */\n    tag_296:\n        /* \"#utility.yul\":8145:8222   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8142:8143   */\n      0x00\n        /* \"#utility.yul\":8135:8223   */\n      mstore\n        /* \"#utility.yul\":8242:8246   */\n      0x12\n        /* \"#utility.yul\":8239:8240   */\n      0x04\n        /* \"#utility.yul\":8232:8247   */\n      mstore\n        /* \"#utility.yul\":8266:8270   */\n      0x24\n        /* \"#utility.yul\":8263:8264   */\n      0x00\n        /* \"#utility.yul\":8256:8271   */\n      revert\n        /* \"#utility.yul\":8283:8468   */\n    tag_152:\n        /* \"#utility.yul\":8323:8324   */\n      0x00\n        /* \"#utility.yul\":8340:8360   */\n      tag_392\n        /* \"#utility.yul\":8358:8359   */\n      dup3\n        /* \"#utility.yul\":8340:8360   */\n      tag_283\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":8335:8360   */\n      swap2\n      pop\n        /* \"#utility.yul\":8374:8394   */\n      tag_393\n        /* \"#utility.yul\":8392:8393   */\n      dup4\n        /* \"#utility.yul\":8374:8394   */\n      tag_283\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8369:8394   */\n      swap3\n      pop\n        /* \"#utility.yul\":8413:8414   */\n      dup3\n        /* \"#utility.yul\":8403:8438   */\n      tag_394\n      jumpi\n        /* \"#utility.yul\":8418:8436   */\n      tag_395\n      tag_296\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":8403:8438   */\n    tag_394:\n        /* \"#utility.yul\":8460:8461   */\n      dup3\n        /* \"#utility.yul\":8457:8458   */\n      dup3\n        /* \"#utility.yul\":8453:8462   */\n      div\n        /* \"#utility.yul\":8448:8462   */\n      swap1\n      pop\n        /* \"#utility.yul\":8283:8468   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8474:8806   */\n    tag_186:\n        /* \"#utility.yul\":8595:8599   */\n      0x00\n        /* \"#utility.yul\":8633:8635   */\n      0x40\n        /* \"#utility.yul\":8622:8631   */\n      dup3\n        /* \"#utility.yul\":8618:8636   */\n      add\n        /* \"#utility.yul\":8610:8636   */\n      swap1\n      pop\n        /* \"#utility.yul\":8646:8717   */\n      tag_397\n        /* \"#utility.yul\":8714:8715   */\n      0x00\n        /* \"#utility.yul\":8703:8712   */\n      dup4\n        /* \"#utility.yul\":8699:8716   */\n      add\n        /* \"#utility.yul\":8690:8696   */\n      dup6\n        /* \"#utility.yul\":8646:8717   */\n      tag_288\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8727:8799   */\n      tag_398\n        /* \"#utility.yul\":8795:8797   */\n      0x20\n        /* \"#utility.yul\":8784:8793   */\n      dup4\n        /* \"#utility.yul\":8780:8798   */\n      add\n        /* \"#utility.yul\":8771:8777   */\n      dup5\n        /* \"#utility.yul\":8727:8799   */\n      tag_288\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":8474:8806   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8812:9254   */\n    tag_209:\n        /* \"#utility.yul\":8961:8965   */\n      0x00\n        /* \"#utility.yul\":8999:9001   */\n      0x60\n        /* \"#utility.yul\":8988:8997   */\n      dup3\n        /* \"#utility.yul\":8984:9002   */\n      add\n        /* \"#utility.yul\":8976:9002   */\n      swap1\n      pop\n        /* \"#utility.yul\":9012:9083   */\n      tag_400\n        /* \"#utility.yul\":9080:9081   */\n      0x00\n        /* \"#utility.yul\":9069:9078   */\n      dup4\n        /* \"#utility.yul\":9065:9082   */\n      add\n        /* \"#utility.yul\":9056:9062   */\n      dup7\n        /* \"#utility.yul\":9012:9083   */\n      tag_291\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9093:9165   */\n      tag_401\n        /* \"#utility.yul\":9161:9163   */\n      0x20\n        /* \"#utility.yul\":9150:9159   */\n      dup4\n        /* \"#utility.yul\":9146:9164   */\n      add\n        /* \"#utility.yul\":9137:9143   */\n      dup6\n        /* \"#utility.yul\":9093:9165   */\n      tag_288\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9175:9247   */\n      tag_402\n        /* \"#utility.yul\":9243:9245   */\n      0x40\n        /* \"#utility.yul\":9232:9241   */\n      dup4\n        /* \"#utility.yul\":9228:9246   */\n      add\n        /* \"#utility.yul\":9219:9225   */\n      dup5\n        /* \"#utility.yul\":9175:9247   */\n      tag_288\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":8812:9254   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9260:9454   */\n    tag_221:\n        /* \"#utility.yul\":9300:9304   */\n      0x00\n        /* \"#utility.yul\":9320:9340   */\n      tag_404\n        /* \"#utility.yul\":9338:9339   */\n      dup3\n        /* \"#utility.yul\":9320:9340   */\n      tag_283\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":9315:9340   */\n      swap2\n      pop\n        /* \"#utility.yul\":9354:9374   */\n      tag_405\n        /* \"#utility.yul\":9372:9373   */\n      dup4\n        /* \"#utility.yul\":9354:9374   */\n      tag_283\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9349:9374   */\n      swap3\n      pop\n        /* \"#utility.yul\":9398:9399   */\n      dup3\n        /* \"#utility.yul\":9395:9396   */\n      dup3\n        /* \"#utility.yul\":9391:9400   */\n      sub\n        /* \"#utility.yul\":9383:9400   */\n      swap1\n      pop\n        /* \"#utility.yul\":9422:9423   */\n      dup2\n        /* \"#utility.yul\":9416:9420   */\n      dup2\n        /* \"#utility.yul\":9413:9424   */\n      gt\n        /* \"#utility.yul\":9410:9447   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":9427:9445   */\n      tag_407\n      tag_295\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":9410:9447   */\n    tag_406:\n        /* \"#utility.yul\":9260:9454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9460:9651   */\n    tag_264:\n        /* \"#utility.yul\":9500:9503   */\n      0x00\n        /* \"#utility.yul\":9519:9539   */\n      tag_409\n        /* \"#utility.yul\":9537:9538   */\n      dup3\n        /* \"#utility.yul\":9519:9539   */\n      tag_283\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9514:9539   */\n      swap2\n      pop\n        /* \"#utility.yul\":9553:9573   */\n      tag_410\n        /* \"#utility.yul\":9571:9572   */\n      dup4\n        /* \"#utility.yul\":9553:9573   */\n      tag_283\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":9548:9573   */\n      swap3\n      pop\n        /* \"#utility.yul\":9596:9597   */\n      dup3\n        /* \"#utility.yul\":9593:9594   */\n      dup3\n        /* \"#utility.yul\":9589:9598   */\n      add\n        /* \"#utility.yul\":9582:9598   */\n      swap1\n      pop\n        /* \"#utility.yul\":9617:9620   */\n      dup1\n        /* \"#utility.yul\":9614:9615   */\n      dup3\n        /* \"#utility.yul\":9611:9621   */\n      gt\n        /* \"#utility.yul\":9608:9644   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":9624:9642   */\n      tag_412\n      tag_295\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":9608:9644   */\n    tag_411:\n        /* \"#utility.yul\":9460:9651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ce3efa2bb519c0daf5a6b7beb365e06dc3c093a9fa7b1babc1b5000f6fb2787264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1228": {
									"entryPoint": null,
									"id": 1228,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1189,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireNotPaused_1029": {
									"entryPoint": 1629,
									"id": 1029,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 984,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1521": {
									"entryPoint": 1322,
									"id": 1521,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1700,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_910": {
									"entryPoint": 1593,
									"id": 910,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1181,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_1017": {
									"entryPoint": 2237,
									"id": 1017,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 2546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256_fromMemory": {
									"entryPoint": 2732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 4195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4510,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4225,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2258,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 2419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 3711,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 4014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3793,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 3270,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 4153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 3236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 4162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 3126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2467,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 3009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 3117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3654,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4315,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2898,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 3159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2275,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2279,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2271,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2267,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 3699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 3340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 3212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 3036,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 3168,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 3205,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15705:9",
										"nodeType": "YulBlock",
										"src": "0:15705:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "423:28:9",
													"nodeType": "YulBlock",
													"src": "423:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:9",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:9",
																		"nodeType": "YulLiteral",
																		"src": "443:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nativeSrc": "433:12:9",
																"nodeType": "YulFunctionCall",
																"src": "433:12:9"
															},
															"nativeSrc": "433:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:9"
											},
											{
												"body": {
													"nativeSrc": "546:28:9",
													"nodeType": "YulBlock",
													"src": "546:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:9",
																		"nodeType": "YulLiteral",
																		"src": "563:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:9",
																		"nodeType": "YulLiteral",
																		"src": "566:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:9"
																},
																"nativeSrc": "556:12:9",
																"nodeType": "YulFunctionCall",
																"src": "556:12:9"
															},
															"nativeSrc": "556:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:9"
											},
											{
												"body": {
													"nativeSrc": "628:54:9",
													"nodeType": "YulBlock",
													"src": "628:54:9",
													"statements": [
														{
															"nativeSrc": "638:38:9",
															"nodeType": "YulAssignment",
															"src": "638:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:9",
																				"nodeType": "YulLiteral",
																				"src": "663:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:9"
																		},
																		"nativeSrc": "652:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:9",
																				"nodeType": "YulLiteral",
																				"src": "672:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:9"
																		},
																		"nativeSrc": "668:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:9"
																},
																"nativeSrc": "648:28:9",
																"nodeType": "YulFunctionCall",
																"src": "648:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:9",
														"nodeType": "YulTypedName",
														"src": "611:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:9",
														"nodeType": "YulTypedName",
														"src": "621:6:9",
														"type": ""
													}
												],
												"src": "580:102:9"
											},
											{
												"body": {
													"nativeSrc": "716:152:9",
													"nodeType": "YulBlock",
													"src": "716:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:9",
																		"nodeType": "YulLiteral",
																		"src": "733:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:9",
																		"nodeType": "YulLiteral",
																		"src": "736:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nativeSrc": "726:88:9",
																"nodeType": "YulFunctionCall",
																"src": "726:88:9"
															},
															"nativeSrc": "726:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:9",
																		"nodeType": "YulLiteral",
																		"src": "830:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:9",
																		"nodeType": "YulLiteral",
																		"src": "833:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:9"
																},
																"nativeSrc": "823:15:9",
																"nodeType": "YulFunctionCall",
																"src": "823:15:9"
															},
															"nativeSrc": "823:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:9",
																		"nodeType": "YulLiteral",
																		"src": "854:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:9",
																		"nodeType": "YulLiteral",
																		"src": "857:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:9"
																},
																"nativeSrc": "847:15:9",
																"nodeType": "YulFunctionCall",
																"src": "847:15:9"
															},
															"nativeSrc": "847:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:9"
											},
											{
												"body": {
													"nativeSrc": "917:238:9",
													"nodeType": "YulBlock",
													"src": "917:238:9",
													"statements": [
														{
															"nativeSrc": "927:58:9",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:9"
																		},
																		"nativeSrc": "957:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:9"
																},
																"nativeSrc": "945:40:9",
																"nodeType": "YulFunctionCall",
																"src": "945:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:9",
																	"nodeType": "YulTypedName",
																	"src": "931:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:9",
																"nodeType": "YulBlock",
																"src": "1096:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:9"
																			},
																			"nativeSrc": "1098:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:9"
																		},
																		"nativeSrc": "1098:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:9",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:9"
																		},
																		"nativeSrc": "1036:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:9"
																		},
																		"nativeSrc": "1072:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:9"
																},
																"nativeSrc": "1033:62:9",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:9"
															},
															"nativeSrc": "1030:88:9",
															"nodeType": "YulIf",
															"src": "1030:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:9"
																},
																"nativeSrc": "1127:22:9",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:9"
															},
															"nativeSrc": "1127:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:9",
														"nodeType": "YulTypedName",
														"src": "903:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:9",
														"nodeType": "YulTypedName",
														"src": "911:4:9",
														"type": ""
													}
												],
												"src": "874:281:9"
											},
											{
												"body": {
													"nativeSrc": "1202:88:9",
													"nodeType": "YulBlock",
													"src": "1202:88:9",
													"statements": [
														{
															"nativeSrc": "1212:30:9",
															"nodeType": "YulAssignment",
															"src": "1212:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:9"
																},
																"nativeSrc": "1222:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:9"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:9",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:9"
																},
																"nativeSrc": "1251:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:9"
															},
															"nativeSrc": "1251:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:9",
														"nodeType": "YulTypedName",
														"src": "1186:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:9",
														"nodeType": "YulTypedName",
														"src": "1195:6:9",
														"type": ""
													}
												],
												"src": "1161:129:9"
											},
											{
												"body": {
													"nativeSrc": "1363:241:9",
													"nodeType": "YulBlock",
													"src": "1363:241:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:9",
																"nodeType": "YulBlock",
																"src": "1468:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:9"
																			},
																			"nativeSrc": "1470:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:9"
																		},
																		"nativeSrc": "1470:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:9",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:9"
																},
																"nativeSrc": "1437:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:9"
															},
															"nativeSrc": "1434:56:9",
															"nodeType": "YulIf",
															"src": "1434:56:9"
														},
														{
															"nativeSrc": "1500:37:9",
															"nodeType": "YulAssignment",
															"src": "1500:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:9",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:9"
																},
																"nativeSrc": "1508:29:9",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:9"
																}
															]
														},
														{
															"nativeSrc": "1574:23:9",
															"nodeType": "YulAssignment",
															"src": "1574:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:9"
																},
																"nativeSrc": "1582:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:9",
														"nodeType": "YulTypedName",
														"src": "1347:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:9",
														"nodeType": "YulTypedName",
														"src": "1358:4:9",
														"type": ""
													}
												],
												"src": "1296:308:9"
											},
											{
												"body": {
													"nativeSrc": "1672:77:9",
													"nodeType": "YulBlock",
													"src": "1672:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:9"
																},
																"nativeSrc": "1683:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:9"
															},
															"nativeSrc": "1683:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:9"
																		},
																		"nativeSrc": "1722:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:9"
																},
																"nativeSrc": "1715:27:9",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:9"
															},
															"nativeSrc": "1715:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:9",
														"nodeType": "YulTypedName",
														"src": "1654:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:9",
														"nodeType": "YulTypedName",
														"src": "1659:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:9",
														"nodeType": "YulTypedName",
														"src": "1664:6:9",
														"type": ""
													}
												],
												"src": "1610:139:9"
											},
											{
												"body": {
													"nativeSrc": "1850:339:9",
													"nodeType": "YulBlock",
													"src": "1850:339:9",
													"statements": [
														{
															"nativeSrc": "1860:75:9",
															"nodeType": "YulAssignment",
															"src": "1860:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:9"
																		},
																		"nativeSrc": "1885:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:9"
																},
																"nativeSrc": "1869:66:9",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:9"
																},
																"nativeSrc": "1944:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:9"
															},
															"nativeSrc": "1944:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:9"
														},
														{
															"nativeSrc": "1974:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:9"
																},
																"nativeSrc": "1985:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:9",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:9",
																"nodeType": "YulBlock",
																"src": "2039:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:9"
																			},
																			"nativeSrc": "2041:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:9"
																		},
																		"nativeSrc": "2041:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:9"
																		},
																		"nativeSrc": "2016:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:9"
																},
																"nativeSrc": "2013:25:9",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:9"
															},
															"nativeSrc": "2010:112:9",
															"nodeType": "YulIf",
															"src": "2010:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:9"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:9"
																},
																"nativeSrc": "2131:52:9",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:9"
															},
															"nativeSrc": "2131:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:9",
														"nodeType": "YulTypedName",
														"src": "1823:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:9",
														"nodeType": "YulTypedName",
														"src": "1828:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:9",
														"nodeType": "YulTypedName",
														"src": "1836:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:9",
														"nodeType": "YulTypedName",
														"src": "1844:5:9",
														"type": ""
													}
												],
												"src": "1755:434:9"
											},
											{
												"body": {
													"nativeSrc": "2282:282:9",
													"nodeType": "YulBlock",
													"src": "2282:282:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:9",
																"nodeType": "YulBlock",
																"src": "2331:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:9"
																			},
																			"nativeSrc": "2333:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:9"
																		},
																		"nativeSrc": "2333:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:9"
																				},
																				"nativeSrc": "2306:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:9"
																		},
																		"nativeSrc": "2302:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:9"
																},
																"nativeSrc": "2295:35:9",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:9"
															},
															"nativeSrc": "2292:122:9",
															"nodeType": "YulIf",
															"src": "2292:122:9"
														},
														{
															"nativeSrc": "2423:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:9"
																},
																"nativeSrc": "2437:13:9",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:9",
															"nodeType": "YulAssignment",
															"src": "2459:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:9"
																		},
																		"nativeSrc": "2527:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:9"
																},
																"nativeSrc": "2468:90:9",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:9",
														"nodeType": "YulTypedName",
														"src": "2260:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:9",
														"nodeType": "YulTypedName",
														"src": "2268:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:9",
														"nodeType": "YulTypedName",
														"src": "2276:5:9",
														"type": ""
													}
												],
												"src": "2209:355:9"
											},
											{
												"body": {
													"nativeSrc": "2615:81:9",
													"nodeType": "YulBlock",
													"src": "2615:81:9",
													"statements": [
														{
															"nativeSrc": "2625:65:9",
															"nodeType": "YulAssignment",
															"src": "2625:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2640:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2640:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2647:42:9",
																		"nodeType": "YulLiteral",
																		"src": "2647:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2636:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:9"
																},
																"nativeSrc": "2636:54:9",
																"nodeType": "YulFunctionCall",
																"src": "2636:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2570:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:9",
														"nodeType": "YulTypedName",
														"src": "2597:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:9",
														"nodeType": "YulTypedName",
														"src": "2607:7:9",
														"type": ""
													}
												],
												"src": "2570:126:9"
											},
											{
												"body": {
													"nativeSrc": "2747:51:9",
													"nodeType": "YulBlock",
													"src": "2747:51:9",
													"statements": [
														{
															"nativeSrc": "2757:35:9",
															"nodeType": "YulAssignment",
															"src": "2757:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2786:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2786:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2768:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2768:17:9"
																},
																"nativeSrc": "2768:24:9",
																"nodeType": "YulFunctionCall",
																"src": "2768:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2757:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2757:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2702:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2729:5:9",
														"nodeType": "YulTypedName",
														"src": "2729:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2739:7:9",
														"nodeType": "YulTypedName",
														"src": "2739:7:9",
														"type": ""
													}
												],
												"src": "2702:96:9"
											},
											{
												"body": {
													"nativeSrc": "2847:79:9",
													"nodeType": "YulBlock",
													"src": "2847:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2904:16:9",
																"nodeType": "YulBlock",
																"src": "2904:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2913:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2913:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2916:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2916:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2906:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2906:6:9"
																			},
																			"nativeSrc": "2906:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2906:12:9"
																		},
																		"nativeSrc": "2906:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2906:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2870:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2870:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2895:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2895:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2877:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2877:17:9"
																				},
																				"nativeSrc": "2877:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2877:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2867:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2867:2:9"
																		},
																		"nativeSrc": "2867:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2860:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:9"
																},
																"nativeSrc": "2860:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2860:43:9"
															},
															"nativeSrc": "2857:63:9",
															"nodeType": "YulIf",
															"src": "2857:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2804:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2840:5:9",
														"nodeType": "YulTypedName",
														"src": "2840:5:9",
														"type": ""
													}
												],
												"src": "2804:122:9"
											},
											{
												"body": {
													"nativeSrc": "2995:80:9",
													"nodeType": "YulBlock",
													"src": "2995:80:9",
													"statements": [
														{
															"nativeSrc": "3005:22:9",
															"nodeType": "YulAssignment",
															"src": "3005:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3020:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3020:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3014:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3014:5:9"
																},
																"nativeSrc": "3014:13:9",
																"nodeType": "YulFunctionCall",
																"src": "3014:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3005:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3005:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3063:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3063:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3036:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3036:26:9"
																},
																"nativeSrc": "3036:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3036:33:9"
															},
															"nativeSrc": "3036:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3036:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2932:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2973:6:9",
														"nodeType": "YulTypedName",
														"src": "2973:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2981:3:9",
														"nodeType": "YulTypedName",
														"src": "2981:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2989:5:9",
														"nodeType": "YulTypedName",
														"src": "2989:5:9",
														"type": ""
													}
												],
												"src": "2932:143:9"
											},
											{
												"body": {
													"nativeSrc": "3126:32:9",
													"nodeType": "YulBlock",
													"src": "3126:32:9",
													"statements": [
														{
															"nativeSrc": "3136:16:9",
															"nodeType": "YulAssignment",
															"src": "3136:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "3147:5:9",
																"nodeType": "YulIdentifier",
																"src": "3147:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3136:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3136:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3081:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3108:5:9",
														"nodeType": "YulTypedName",
														"src": "3108:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3118:7:9",
														"nodeType": "YulTypedName",
														"src": "3118:7:9",
														"type": ""
													}
												],
												"src": "3081:77:9"
											},
											{
												"body": {
													"nativeSrc": "3207:79:9",
													"nodeType": "YulBlock",
													"src": "3207:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3264:16:9",
																"nodeType": "YulBlock",
																"src": "3264:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3273:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3273:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3276:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3276:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3266:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3266:6:9"
																			},
																			"nativeSrc": "3266:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3266:12:9"
																		},
																		"nativeSrc": "3266:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3266:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3230:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3230:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3255:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3255:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3237:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3237:17:9"
																				},
																				"nativeSrc": "3237:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3237:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3227:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3227:2:9"
																		},
																		"nativeSrc": "3227:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3227:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3220:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3220:6:9"
																},
																"nativeSrc": "3220:43:9",
																"nodeType": "YulFunctionCall",
																"src": "3220:43:9"
															},
															"nativeSrc": "3217:63:9",
															"nodeType": "YulIf",
															"src": "3217:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3164:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3200:5:9",
														"nodeType": "YulTypedName",
														"src": "3200:5:9",
														"type": ""
													}
												],
												"src": "3164:122:9"
											},
											{
												"body": {
													"nativeSrc": "3355:80:9",
													"nodeType": "YulBlock",
													"src": "3355:80:9",
													"statements": [
														{
															"nativeSrc": "3365:22:9",
															"nodeType": "YulAssignment",
															"src": "3365:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3380:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3380:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3374:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3374:5:9"
																},
																"nativeSrc": "3374:13:9",
																"nodeType": "YulFunctionCall",
																"src": "3374:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3365:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3365:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3423:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3423:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3396:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3396:26:9"
																},
																"nativeSrc": "3396:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3396:33:9"
															},
															"nativeSrc": "3396:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3396:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3292:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3333:6:9",
														"nodeType": "YulTypedName",
														"src": "3333:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3341:3:9",
														"nodeType": "YulTypedName",
														"src": "3341:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3349:5:9",
														"nodeType": "YulTypedName",
														"src": "3349:5:9",
														"type": ""
													}
												],
												"src": "3292:143:9"
											},
											{
												"body": {
													"nativeSrc": "3589:1018:9",
													"nodeType": "YulBlock",
													"src": "3589:1018:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3636:83:9",
																"nodeType": "YulBlock",
																"src": "3636:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3638:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3638:77:9"
																			},
																			"nativeSrc": "3638:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3638:79:9"
																		},
																		"nativeSrc": "3638:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3638:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3610:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3610:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3619:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3619:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3606:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3606:3:9"
																		},
																		"nativeSrc": "3606:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3606:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3631:3:9",
																		"nodeType": "YulLiteral",
																		"src": "3631:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3602:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3602:3:9"
																},
																"nativeSrc": "3602:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3602:33:9"
															},
															"nativeSrc": "3599:120:9",
															"nodeType": "YulIf",
															"src": "3599:120:9"
														},
														{
															"nativeSrc": "3729:291:9",
															"nodeType": "YulBlock",
															"src": "3729:291:9",
															"statements": [
																{
																	"nativeSrc": "3744:38:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3744:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3768:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3768:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3779:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3779:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3764:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3764:3:9"
																				},
																				"nativeSrc": "3764:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3764:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3758:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "3758:5:9"
																		},
																		"nativeSrc": "3758:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3758:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3748:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3748:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3829:83:9",
																		"nodeType": "YulBlock",
																		"src": "3829:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3831:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "3831:77:9"
																					},
																					"nativeSrc": "3831:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3831:79:9"
																				},
																				"nativeSrc": "3831:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "3831:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3801:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3801:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3809:18:9",
																				"nodeType": "YulLiteral",
																				"src": "3809:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3798:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3798:2:9"
																		},
																		"nativeSrc": "3798:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3798:30:9"
																	},
																	"nativeSrc": "3795:117:9",
																	"nodeType": "YulIf",
																	"src": "3795:117:9"
																},
																{
																	"nativeSrc": "3926:84:9",
																	"nodeType": "YulAssignment",
																	"src": "3926:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3982:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3982:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3993:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3993:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3978:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3978:3:9"
																				},
																				"nativeSrc": "3978:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3978:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4002:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4002:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3936:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "3936:41:9"
																		},
																		"nativeSrc": "3936:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3936:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3926:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3926:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4030:292:9",
															"nodeType": "YulBlock",
															"src": "4030:292:9",
															"statements": [
																{
																	"nativeSrc": "4045:39:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4045:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4069:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4069:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4080:2:9",
																						"nodeType": "YulLiteral",
																						"src": "4080:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4065:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4065:3:9"
																				},
																				"nativeSrc": "4065:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4065:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4059:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4059:5:9"
																		},
																		"nativeSrc": "4059:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4059:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4049:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4049:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4131:83:9",
																		"nodeType": "YulBlock",
																		"src": "4131:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4133:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "4133:77:9"
																					},
																					"nativeSrc": "4133:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4133:79:9"
																				},
																				"nativeSrc": "4133:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "4133:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4103:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4103:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4111:18:9",
																				"nodeType": "YulLiteral",
																				"src": "4111:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4100:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4100:2:9"
																		},
																		"nativeSrc": "4100:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4100:30:9"
																	},
																	"nativeSrc": "4097:117:9",
																	"nodeType": "YulIf",
																	"src": "4097:117:9"
																},
																{
																	"nativeSrc": "4228:84:9",
																	"nodeType": "YulAssignment",
																	"src": "4228:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4284:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4284:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4295:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4295:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4280:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4280:3:9"
																				},
																				"nativeSrc": "4280:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4280:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4304:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4304:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4238:41:9",
																			"nodeType": "YulIdentifier",
																			"src": "4238:41:9"
																		},
																		"nativeSrc": "4238:74:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4238:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4228:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4228:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4332:129:9",
															"nodeType": "YulBlock",
															"src": "4332:129:9",
															"statements": [
																{
																	"nativeSrc": "4347:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4347:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4361:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4361:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4351:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4351:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4377:74:9",
																	"nodeType": "YulAssignment",
																	"src": "4377:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4423:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4423:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4434:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4434:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4419:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4419:3:9"
																				},
																				"nativeSrc": "4419:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4419:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4443:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4443:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4387:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "4387:31:9"
																		},
																		"nativeSrc": "4387:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4387:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4377:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4377:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4471:129:9",
															"nodeType": "YulBlock",
															"src": "4471:129:9",
															"statements": [
																{
																	"nativeSrc": "4486:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4486:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4500:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4500:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4490:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4490:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4516:74:9",
																	"nodeType": "YulAssignment",
																	"src": "4516:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4562:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4562:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4573:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4573:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4558:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4558:3:9"
																				},
																				"nativeSrc": "4558:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4558:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4582:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4582:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4526:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "4526:31:9"
																		},
																		"nativeSrc": "4526:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4526:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4516:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4516:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256_fromMemory",
												"nativeSrc": "3441:1166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3535:9:9",
														"nodeType": "YulTypedName",
														"src": "3535:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3546:7:9",
														"nodeType": "YulTypedName",
														"src": "3546:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3558:6:9",
														"nodeType": "YulTypedName",
														"src": "3558:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3566:6:9",
														"nodeType": "YulTypedName",
														"src": "3566:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3574:6:9",
														"nodeType": "YulTypedName",
														"src": "3574:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3582:6:9",
														"nodeType": "YulTypedName",
														"src": "3582:6:9",
														"type": ""
													}
												],
												"src": "3441:1166:9"
											},
											{
												"body": {
													"nativeSrc": "4672:40:9",
													"nodeType": "YulBlock",
													"src": "4672:40:9",
													"statements": [
														{
															"nativeSrc": "4683:22:9",
															"nodeType": "YulAssignment",
															"src": "4683:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4699:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4699:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4693:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "4693:5:9"
																},
																"nativeSrc": "4693:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4693:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4683:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4683:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4613:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4655:5:9",
														"nodeType": "YulTypedName",
														"src": "4655:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4665:6:9",
														"nodeType": "YulTypedName",
														"src": "4665:6:9",
														"type": ""
													}
												],
												"src": "4613:99:9"
											},
											{
												"body": {
													"nativeSrc": "4746:152:9",
													"nodeType": "YulBlock",
													"src": "4746:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4763:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4763:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4766:77:9",
																		"nodeType": "YulLiteral",
																		"src": "4766:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4756:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4756:6:9"
																},
																"nativeSrc": "4756:88:9",
																"nodeType": "YulFunctionCall",
																"src": "4756:88:9"
															},
															"nativeSrc": "4756:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "4756:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4860:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4860:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4863:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4863:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4853:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4853:6:9"
																},
																"nativeSrc": "4853:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4853:15:9"
															},
															"nativeSrc": "4853:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "4853:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4884:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4884:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4887:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4887:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4877:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4877:6:9"
																},
																"nativeSrc": "4877:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4877:15:9"
															},
															"nativeSrc": "4877:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "4877:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4718:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "4718:180:9"
											},
											{
												"body": {
													"nativeSrc": "4955:269:9",
													"nodeType": "YulBlock",
													"src": "4955:269:9",
													"statements": [
														{
															"nativeSrc": "4965:22:9",
															"nodeType": "YulAssignment",
															"src": "4965:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4979:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4979:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4985:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4985:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4975:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4975:3:9"
																},
																"nativeSrc": "4975:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4975:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4965:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:9"
																}
															]
														},
														{
															"nativeSrc": "4996:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4996:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5026:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5026:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5032:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5022:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5022:3:9"
																},
																"nativeSrc": "5022:12:9",
																"nodeType": "YulFunctionCall",
																"src": "5022:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5000:18:9",
																	"nodeType": "YulTypedName",
																	"src": "5000:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5073:51:9",
																"nodeType": "YulBlock",
																"src": "5073:51:9",
																"statements": [
																	{
																		"nativeSrc": "5087:27:9",
																		"nodeType": "YulAssignment",
																		"src": "5087:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5101:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "5101:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5109:4:9",
																					"nodeType": "YulLiteral",
																					"src": "5109:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5097:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5097:3:9"
																			},
																			"nativeSrc": "5097:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5097:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5087:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5087:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5053:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "5053:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5046:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5046:6:9"
																},
																"nativeSrc": "5046:26:9",
																"nodeType": "YulFunctionCall",
																"src": "5046:26:9"
															},
															"nativeSrc": "5043:81:9",
															"nodeType": "YulIf",
															"src": "5043:81:9"
														},
														{
															"body": {
																"nativeSrc": "5176:42:9",
																"nodeType": "YulBlock",
																"src": "5176:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5190:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "5190:16:9"
																			},
																			"nativeSrc": "5190:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5190:18:9"
																		},
																		"nativeSrc": "5190:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5190:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5140:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "5140:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5163:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5163:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5171:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5171:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5160:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "5160:2:9"
																		},
																		"nativeSrc": "5160:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5160:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5137:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5137:2:9"
																},
																"nativeSrc": "5137:38:9",
																"nodeType": "YulFunctionCall",
																"src": "5137:38:9"
															},
															"nativeSrc": "5134:84:9",
															"nodeType": "YulIf",
															"src": "5134:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4904:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4939:4:9",
														"nodeType": "YulTypedName",
														"src": "4939:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4948:6:9",
														"nodeType": "YulTypedName",
														"src": "4948:6:9",
														"type": ""
													}
												],
												"src": "4904:320:9"
											},
											{
												"body": {
													"nativeSrc": "5284:87:9",
													"nodeType": "YulBlock",
													"src": "5284:87:9",
													"statements": [
														{
															"nativeSrc": "5294:11:9",
															"nodeType": "YulAssignment",
															"src": "5294:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "5302:3:9",
																"nodeType": "YulIdentifier",
																"src": "5302:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5294:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5294:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5322:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5322:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5325:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5325:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5315:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5315:6:9"
																},
																"nativeSrc": "5315:14:9",
																"nodeType": "YulFunctionCall",
																"src": "5315:14:9"
															},
															"nativeSrc": "5315:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "5315:14:9"
														},
														{
															"nativeSrc": "5338:26:9",
															"nodeType": "YulAssignment",
															"src": "5338:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5356:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5356:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5359:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5359:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5346:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5346:9:9"
																},
																"nativeSrc": "5346:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5346:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5338:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5338:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5230:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5271:3:9",
														"nodeType": "YulTypedName",
														"src": "5271:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5279:4:9",
														"nodeType": "YulTypedName",
														"src": "5279:4:9",
														"type": ""
													}
												],
												"src": "5230:141:9"
											},
											{
												"body": {
													"nativeSrc": "5421:49:9",
													"nodeType": "YulBlock",
													"src": "5421:49:9",
													"statements": [
														{
															"nativeSrc": "5431:33:9",
															"nodeType": "YulAssignment",
															"src": "5431:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5449:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5449:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5456:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5456:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5445:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5445:3:9"
																		},
																		"nativeSrc": "5445:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5445:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5461:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5461:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5441:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5441:3:9"
																},
																"nativeSrc": "5441:23:9",
																"nodeType": "YulFunctionCall",
																"src": "5441:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5431:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5431:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5377:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5404:5:9",
														"nodeType": "YulTypedName",
														"src": "5404:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5414:6:9",
														"nodeType": "YulTypedName",
														"src": "5414:6:9",
														"type": ""
													}
												],
												"src": "5377:93:9"
											},
											{
												"body": {
													"nativeSrc": "5529:54:9",
													"nodeType": "YulBlock",
													"src": "5529:54:9",
													"statements": [
														{
															"nativeSrc": "5539:37:9",
															"nodeType": "YulAssignment",
															"src": "5539:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5564:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5564:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5570:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5570:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5560:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5560:3:9"
																},
																"nativeSrc": "5560:16:9",
																"nodeType": "YulFunctionCall",
																"src": "5560:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5539:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "5539:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5476:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5504:4:9",
														"nodeType": "YulTypedName",
														"src": "5504:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5510:5:9",
														"nodeType": "YulTypedName",
														"src": "5510:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5520:8:9",
														"nodeType": "YulTypedName",
														"src": "5520:8:9",
														"type": ""
													}
												],
												"src": "5476:107:9"
											},
											{
												"body": {
													"nativeSrc": "5665:317:9",
													"nodeType": "YulBlock",
													"src": "5665:317:9",
													"statements": [
														{
															"nativeSrc": "5675:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5675:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5696:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "5696:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5708:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5708:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5692:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5692:3:9"
																},
																"nativeSrc": "5692:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5692:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5679:9:9",
																	"nodeType": "YulTypedName",
																	"src": "5679:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5719:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5719:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5750:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5750:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5761:66:9",
																		"nodeType": "YulLiteral",
																		"src": "5761:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5731:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "5731:18:9"
																},
																"nativeSrc": "5731:97:9",
																"nodeType": "YulFunctionCall",
																"src": "5731:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5723:4:9",
																	"nodeType": "YulTypedName",
																	"src": "5723:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5837:51:9",
															"nodeType": "YulAssignment",
															"src": "5837:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5868:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5868:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5879:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "5879:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5849:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "5849:18:9"
																},
																"nativeSrc": "5849:39:9",
																"nodeType": "YulFunctionCall",
																"src": "5849:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5837:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "5837:8:9"
																}
															]
														},
														{
															"nativeSrc": "5897:30:9",
															"nodeType": "YulAssignment",
															"src": "5897:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5910:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5910:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5921:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5921:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5917:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5917:3:9"
																		},
																		"nativeSrc": "5917:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5917:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5906:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5906:3:9"
																},
																"nativeSrc": "5906:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5906:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5897:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "5897:5:9"
																}
															]
														},
														{
															"nativeSrc": "5936:40:9",
															"nodeType": "YulAssignment",
															"src": "5936:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5949:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5949:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5960:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "5960:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5970:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5970:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5956:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5956:3:9"
																		},
																		"nativeSrc": "5956:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5956:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5946:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5946:2:9"
																},
																"nativeSrc": "5946:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5946:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5936:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5936:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5589:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5626:5:9",
														"nodeType": "YulTypedName",
														"src": "5626:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5633:10:9",
														"nodeType": "YulTypedName",
														"src": "5633:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5645:8:9",
														"nodeType": "YulTypedName",
														"src": "5645:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5658:6:9",
														"nodeType": "YulTypedName",
														"src": "5658:6:9",
														"type": ""
													}
												],
												"src": "5589:393:9"
											},
											{
												"body": {
													"nativeSrc": "6020:28:9",
													"nodeType": "YulBlock",
													"src": "6020:28:9",
													"statements": [
														{
															"nativeSrc": "6030:12:9",
															"nodeType": "YulAssignment",
															"src": "6030:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "6037:5:9",
																"nodeType": "YulIdentifier",
																"src": "6037:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6030:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6030:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5988:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6006:5:9",
														"nodeType": "YulTypedName",
														"src": "6006:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6016:3:9",
														"nodeType": "YulTypedName",
														"src": "6016:3:9",
														"type": ""
													}
												],
												"src": "5988:60:9"
											},
											{
												"body": {
													"nativeSrc": "6114:82:9",
													"nodeType": "YulBlock",
													"src": "6114:82:9",
													"statements": [
														{
															"nativeSrc": "6124:66:9",
															"nodeType": "YulAssignment",
															"src": "6124:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6182:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6182:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6164:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "6164:17:9"
																				},
																				"nativeSrc": "6164:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6164:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6155:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "6155:8:9"
																		},
																		"nativeSrc": "6155:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6137:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "6137:17:9"
																},
																"nativeSrc": "6137:53:9",
																"nodeType": "YulFunctionCall",
																"src": "6137:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6124:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "6124:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6054:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6094:5:9",
														"nodeType": "YulTypedName",
														"src": "6094:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6104:9:9",
														"nodeType": "YulTypedName",
														"src": "6104:9:9",
														"type": ""
													}
												],
												"src": "6054:142:9"
											},
											{
												"body": {
													"nativeSrc": "6249:28:9",
													"nodeType": "YulBlock",
													"src": "6249:28:9",
													"statements": [
														{
															"nativeSrc": "6259:12:9",
															"nodeType": "YulAssignment",
															"src": "6259:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "6266:5:9",
																"nodeType": "YulIdentifier",
																"src": "6266:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6259:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6259:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6202:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:9",
														"nodeType": "YulTypedName",
														"src": "6235:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6245:3:9",
														"nodeType": "YulTypedName",
														"src": "6245:3:9",
														"type": ""
													}
												],
												"src": "6202:75:9"
											},
											{
												"body": {
													"nativeSrc": "6359:193:9",
													"nodeType": "YulBlock",
													"src": "6359:193:9",
													"statements": [
														{
															"nativeSrc": "6369:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6369:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6424:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "6424:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6393:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "6393:30:9"
																},
																"nativeSrc": "6393:39:9",
																"nodeType": "YulFunctionCall",
																"src": "6393:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6373:16:9",
																	"nodeType": "YulTypedName",
																	"src": "6373:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6448:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6448:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6488:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "6488:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6482:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "6482:5:9"
																				},
																				"nativeSrc": "6482:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6482:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6495:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6495:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6527:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "6527:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6503:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "6503:23:9"
																				},
																				"nativeSrc": "6503:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6503:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6454:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "6454:27:9"
																		},
																		"nativeSrc": "6454:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6454:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6441:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6441:6:9"
																},
																"nativeSrc": "6441:105:9",
																"nodeType": "YulFunctionCall",
																"src": "6441:105:9"
															},
															"nativeSrc": "6441:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "6441:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6283:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6336:4:9",
														"nodeType": "YulTypedName",
														"src": "6336:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6342:6:9",
														"nodeType": "YulTypedName",
														"src": "6342:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6350:7:9",
														"nodeType": "YulTypedName",
														"src": "6350:7:9",
														"type": ""
													}
												],
												"src": "6283:269:9"
											},
											{
												"body": {
													"nativeSrc": "6607:24:9",
													"nodeType": "YulBlock",
													"src": "6607:24:9",
													"statements": [
														{
															"nativeSrc": "6617:8:9",
															"nodeType": "YulAssignment",
															"src": "6617:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "6624:1:9",
																"nodeType": "YulLiteral",
																"src": "6624:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6617:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6617:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6558:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6603:3:9",
														"nodeType": "YulTypedName",
														"src": "6603:3:9",
														"type": ""
													}
												],
												"src": "6558:73:9"
											},
											{
												"body": {
													"nativeSrc": "6690:136:9",
													"nodeType": "YulBlock",
													"src": "6690:136:9",
													"statements": [
														{
															"nativeSrc": "6700:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6700:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6714:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "6714:30:9"
																},
																"nativeSrc": "6714:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6714:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6704:6:9",
																	"nodeType": "YulTypedName",
																	"src": "6704:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6799:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6799:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6805:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6805:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6813:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6813:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6755:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6755:43:9"
																},
																"nativeSrc": "6755:65:9",
																"nodeType": "YulFunctionCall",
																"src": "6755:65:9"
															},
															"nativeSrc": "6755:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "6755:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6637:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6676:4:9",
														"nodeType": "YulTypedName",
														"src": "6676:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6682:6:9",
														"nodeType": "YulTypedName",
														"src": "6682:6:9",
														"type": ""
													}
												],
												"src": "6637:189:9"
											},
											{
												"body": {
													"nativeSrc": "6882:136:9",
													"nodeType": "YulBlock",
													"src": "6882:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6949:63:9",
																"nodeType": "YulBlock",
																"src": "6949:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6993:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "6993:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7000:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7000:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6963:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "6963:29:9"
																			},
																			"nativeSrc": "6963:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6963:39:9"
																		},
																		"nativeSrc": "6963:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6963:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6902:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6902:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6909:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6909:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6899:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6899:2:9"
																},
																"nativeSrc": "6899:14:9",
																"nodeType": "YulFunctionCall",
																"src": "6899:14:9"
															},
															"nativeSrc": "6892:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6914:26:9",
																"nodeType": "YulBlock",
																"src": "6914:26:9",
																"statements": [
																	{
																		"nativeSrc": "6916:22:9",
																		"nodeType": "YulAssignment",
																		"src": "6916:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6929:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "6929:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6936:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6936:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6925:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6925:3:9"
																			},
																			"nativeSrc": "6925:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6925:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6916:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6916:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6896:2:9",
																"nodeType": "YulBlock",
																"src": "6896:2:9",
																"statements": []
															},
															"src": "6892:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6832:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6870:5:9",
														"nodeType": "YulTypedName",
														"src": "6870:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6877:3:9",
														"nodeType": "YulTypedName",
														"src": "6877:3:9",
														"type": ""
													}
												],
												"src": "6832:186:9"
											},
											{
												"body": {
													"nativeSrc": "7103:464:9",
													"nodeType": "YulBlock",
													"src": "7103:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7129:431:9",
																"nodeType": "YulBlock",
																"src": "7129:431:9",
																"statements": [
																	{
																		"nativeSrc": "7143:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7143:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7191:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "7191:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7159:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "7159:31:9"
																			},
																			"nativeSrc": "7159:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7159:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7147:8:9",
																				"nodeType": "YulTypedName",
																				"src": "7147:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7210:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7210:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7233:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "7233:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7261:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "7261:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7243:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "7243:17:9"
																					},
																					"nativeSrc": "7243:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7243:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7229:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7229:3:9"
																			},
																			"nativeSrc": "7229:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7229:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7214:11:9",
																				"nodeType": "YulTypedName",
																				"src": "7214:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7430:27:9",
																			"nodeType": "YulBlock",
																			"src": "7430:27:9",
																			"statements": [
																				{
																					"nativeSrc": "7432:23:9",
																					"nodeType": "YulAssignment",
																					"src": "7432:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7447:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "7447:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7432:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "7432:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7414:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "7414:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7426:2:9",
																					"nodeType": "YulLiteral",
																					"src": "7426:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7411:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "7411:2:9"
																			},
																			"nativeSrc": "7411:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7411:18:9"
																		},
																		"nativeSrc": "7408:49:9",
																		"nodeType": "YulIf",
																		"src": "7408:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7499:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "7499:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7516:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "7516:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7544:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "7544:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7526:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "7526:17:9"
																							},
																							"nativeSrc": "7526:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "7526:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7512:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "7512:3:9"
																					},
																					"nativeSrc": "7512:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7512:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7470:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "7470:28:9"
																			},
																			"nativeSrc": "7470:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7470:80:9"
																		},
																		"nativeSrc": "7470:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7120:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7120:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7125:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7125:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7117:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7117:2:9"
																},
																"nativeSrc": "7117:11:9",
																"nodeType": "YulFunctionCall",
																"src": "7117:11:9"
															},
															"nativeSrc": "7114:446:9",
															"nodeType": "YulIf",
															"src": "7114:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7024:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7079:5:9",
														"nodeType": "YulTypedName",
														"src": "7079:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7086:3:9",
														"nodeType": "YulTypedName",
														"src": "7086:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7091:10:9",
														"nodeType": "YulTypedName",
														"src": "7091:10:9",
														"type": ""
													}
												],
												"src": "7024:543:9"
											},
											{
												"body": {
													"nativeSrc": "7636:54:9",
													"nodeType": "YulBlock",
													"src": "7636:54:9",
													"statements": [
														{
															"nativeSrc": "7646:37:9",
															"nodeType": "YulAssignment",
															"src": "7646:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7671:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7671:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7677:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7677:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7667:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7667:3:9"
																},
																"nativeSrc": "7667:16:9",
																"nodeType": "YulFunctionCall",
																"src": "7667:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7646:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "7646:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7573:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7611:4:9",
														"nodeType": "YulTypedName",
														"src": "7611:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7617:5:9",
														"nodeType": "YulTypedName",
														"src": "7617:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7627:8:9",
														"nodeType": "YulTypedName",
														"src": "7627:8:9",
														"type": ""
													}
												],
												"src": "7573:117:9"
											},
											{
												"body": {
													"nativeSrc": "7747:118:9",
													"nodeType": "YulBlock",
													"src": "7747:118:9",
													"statements": [
														{
															"nativeSrc": "7757:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7757:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7806:1:9",
																						"nodeType": "YulLiteral",
																						"src": "7806:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7809:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "7809:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7802:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7802:3:9"
																				},
																				"nativeSrc": "7802:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7802:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7821:1:9",
																						"nodeType": "YulLiteral",
																						"src": "7821:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7817:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7817:3:9"
																				},
																				"nativeSrc": "7817:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7817:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7773:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "7773:28:9"
																		},
																		"nativeSrc": "7773:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7773:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7769:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7769:3:9"
																},
																"nativeSrc": "7769:56:9",
																"nodeType": "YulFunctionCall",
																"src": "7769:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7761:4:9",
																	"nodeType": "YulTypedName",
																	"src": "7761:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7834:25:9",
															"nodeType": "YulAssignment",
															"src": "7834:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7848:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7848:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7854:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7854:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7844:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7844:3:9"
																},
																"nativeSrc": "7844:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7844:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7834:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7834:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7696:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7724:4:9",
														"nodeType": "YulTypedName",
														"src": "7724:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7730:5:9",
														"nodeType": "YulTypedName",
														"src": "7730:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7740:6:9",
														"nodeType": "YulTypedName",
														"src": "7740:6:9",
														"type": ""
													}
												],
												"src": "7696:169:9"
											},
											{
												"body": {
													"nativeSrc": "7951:214:9",
													"nodeType": "YulBlock",
													"src": "7951:214:9",
													"statements": [
														{
															"nativeSrc": "8084:37:9",
															"nodeType": "YulAssignment",
															"src": "8084:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8111:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8111:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8117:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8117:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8092:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "8092:18:9"
																},
																"nativeSrc": "8092:29:9",
																"nodeType": "YulFunctionCall",
																"src": "8092:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8084:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8084:4:9"
																}
															]
														},
														{
															"nativeSrc": "8130:29:9",
															"nodeType": "YulAssignment",
															"src": "8130:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8141:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8141:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8151:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8151:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8154:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8154:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8147:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8147:3:9"
																		},
																		"nativeSrc": "8147:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8147:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8138:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8138:2:9"
																},
																"nativeSrc": "8138:21:9",
																"nodeType": "YulFunctionCall",
																"src": "8138:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8130:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8130:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7870:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7932:4:9",
														"nodeType": "YulTypedName",
														"src": "7932:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7938:3:9",
														"nodeType": "YulTypedName",
														"src": "7938:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7946:4:9",
														"nodeType": "YulTypedName",
														"src": "7946:4:9",
														"type": ""
													}
												],
												"src": "7870:295:9"
											},
											{
												"body": {
													"nativeSrc": "8262:1303:9",
													"nodeType": "YulBlock",
													"src": "8262:1303:9",
													"statements": [
														{
															"nativeSrc": "8273:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8273:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8320:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8320:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8287:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "8287:32:9"
																},
																"nativeSrc": "8287:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8287:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8277:6:9",
																	"nodeType": "YulTypedName",
																	"src": "8277:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8409:22:9",
																"nodeType": "YulBlock",
																"src": "8409:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8411:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8411:16:9"
																			},
																			"nativeSrc": "8411:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8411:18:9"
																		},
																		"nativeSrc": "8411:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8411:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8381:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8381:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8389:18:9",
																		"nodeType": "YulLiteral",
																		"src": "8389:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8378:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8378:2:9"
																},
																"nativeSrc": "8378:30:9",
																"nodeType": "YulFunctionCall",
																"src": "8378:30:9"
															},
															"nativeSrc": "8375:56:9",
															"nodeType": "YulIf",
															"src": "8375:56:9"
														},
														{
															"nativeSrc": "8441:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8441:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8487:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8487:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8481:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "8481:5:9"
																		},
																		"nativeSrc": "8481:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8481:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8455:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "8455:25:9"
																},
																"nativeSrc": "8455:38:9",
																"nodeType": "YulFunctionCall",
																"src": "8455:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8445:6:9",
																	"nodeType": "YulTypedName",
																	"src": "8445:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8586:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8586:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8592:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8592:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8600:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8600:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8540:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "8540:45:9"
																},
																"nativeSrc": "8540:67:9",
																"nodeType": "YulFunctionCall",
																"src": "8540:67:9"
															},
															"nativeSrc": "8540:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "8540:67:9"
														},
														{
															"nativeSrc": "8617:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "8617:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "8634:1:9",
																"nodeType": "YulLiteral",
																"src": "8634:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8621:9:9",
																	"nodeType": "YulTypedName",
																	"src": "8621:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8645:17:9",
															"nodeType": "YulAssignment",
															"src": "8645:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "8658:4:9",
																"nodeType": "YulLiteral",
																"src": "8658:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8645:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "8645:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8709:611:9",
																		"nodeType": "YulBlock",
																		"src": "8709:611:9",
																		"statements": [
																			{
																				"nativeSrc": "8723:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8723:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8742:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "8742:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8754:4:9",
																									"nodeType": "YulLiteral",
																									"src": "8754:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8750:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "8750:3:9"
																							},
																							"nativeSrc": "8750:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "8750:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8738:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8738:3:9"
																					},
																					"nativeSrc": "8738:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8738:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8727:7:9",
																						"nodeType": "YulTypedName",
																						"src": "8727:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8774:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8774:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8820:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "8820:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8788:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "8788:31:9"
																					},
																					"nativeSrc": "8788:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8788:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8778:6:9",
																						"nodeType": "YulTypedName",
																						"src": "8778:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8838:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8838:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8847:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8847:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8842:1:9",
																						"nodeType": "YulTypedName",
																						"src": "8842:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8906:163:9",
																					"nodeType": "YulBlock",
																					"src": "8906:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8931:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "8931:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8949:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "8949:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8954:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "8954:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8945:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "8945:3:9"
																												},
																												"nativeSrc": "8945:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "8945:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8939:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "8939:5:9"
																										},
																										"nativeSrc": "8939:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "8939:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8924:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "8924:6:9"
																								},
																								"nativeSrc": "8924:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8924:42:9"
																							},
																							"nativeSrc": "8924:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "8924:42:9"
																						},
																						{
																							"nativeSrc": "8983:24:9",
																							"nodeType": "YulAssignment",
																							"src": "8983:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8997:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "8997:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9005:1:9",
																										"nodeType": "YulLiteral",
																										"src": "9005:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8993:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "8993:3:9"
																								},
																								"nativeSrc": "8993:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8993:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8983:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "8983:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9024:31:9",
																							"nodeType": "YulAssignment",
																							"src": "9024:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9041:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "9041:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9052:2:9",
																										"nodeType": "YulLiteral",
																										"src": "9052:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9037:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "9037:3:9"
																								},
																								"nativeSrc": "9037:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9037:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9024:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "9024:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8872:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "8872:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8875:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "8875:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8869:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "8869:2:9"
																					},
																					"nativeSrc": "8869:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8869:14:9"
																				},
																				"nativeSrc": "8861:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8884:21:9",
																					"nodeType": "YulBlock",
																					"src": "8884:21:9",
																					"statements": [
																						{
																							"nativeSrc": "8886:17:9",
																							"nodeType": "YulAssignment",
																							"src": "8886:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8895:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "8895:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8898:4:9",
																										"nodeType": "YulLiteral",
																										"src": "8898:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8891:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "8891:3:9"
																								},
																								"nativeSrc": "8891:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "8891:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8886:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "8886:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8865:3:9",
																					"nodeType": "YulBlock",
																					"src": "8865:3:9",
																					"statements": []
																				},
																				"src": "8861:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "9105:156:9",
																					"nodeType": "YulBlock",
																					"src": "9105:156:9",
																					"statements": [
																						{
																							"nativeSrc": "9123:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9123:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9150:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "9150:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9155:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "9155:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9146:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "9146:3:9"
																										},
																										"nativeSrc": "9146:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "9146:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9140:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "9140:5:9"
																								},
																								"nativeSrc": "9140:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9140:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9127:9:9",
																									"nodeType": "YulTypedName",
																									"src": "9127:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9190:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "9190:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9217:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "9217:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9232:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "9232:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9240:4:9",
																														"nodeType": "YulLiteral",
																														"src": "9240:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9228:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "9228:3:9"
																												},
																												"nativeSrc": "9228:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "9228:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9198:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "9198:18:9"
																										},
																										"nativeSrc": "9198:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "9198:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9183:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "9183:6:9"
																								},
																								"nativeSrc": "9183:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9183:64:9"
																							},
																							"nativeSrc": "9183:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "9183:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9088:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "9088:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9097:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "9097:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9085:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "9085:2:9"
																					},
																					"nativeSrc": "9085:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9085:19:9"
																				},
																				"nativeSrc": "9082:179:9",
																				"nodeType": "YulIf",
																				"src": "9082:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9281:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "9281:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9295:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "9295:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9303:1:9",
																											"nodeType": "YulLiteral",
																											"src": "9303:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9291:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "9291:3:9"
																									},
																									"nativeSrc": "9291:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "9291:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9307:1:9",
																									"nodeType": "YulLiteral",
																									"src": "9307:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9287:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "9287:3:9"
																							},
																							"nativeSrc": "9287:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "9287:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9274:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9274:6:9"
																					},
																					"nativeSrc": "9274:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9274:36:9"
																				},
																				"nativeSrc": "9274:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "9274:36:9"
																			}
																		]
																	},
																	"nativeSrc": "8702:618:9",
																	"nodeType": "YulCase",
																	"src": "8702:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8707:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8707:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9337:222:9",
																		"nodeType": "YulBlock",
																		"src": "9337:222:9",
																		"statements": [
																			{
																				"nativeSrc": "9351:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9351:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9364:1:9",
																					"nodeType": "YulLiteral",
																					"src": "9364:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9355:5:9",
																						"nodeType": "YulTypedName",
																						"src": "9355:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9388:67:9",
																					"nodeType": "YulBlock",
																					"src": "9388:67:9",
																					"statements": [
																						{
																							"nativeSrc": "9406:35:9",
																							"nodeType": "YulAssignment",
																							"src": "9406:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9425:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "9425:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9430:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "9430:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9421:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "9421:3:9"
																										},
																										"nativeSrc": "9421:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "9421:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9415:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "9415:5:9"
																								},
																								"nativeSrc": "9415:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "9415:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9406:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "9406:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9381:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "9381:6:9"
																				},
																				"nativeSrc": "9378:77:9",
																				"nodeType": "YulIf",
																				"src": "9378:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9475:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "9475:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9534:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "9534:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9541:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "9541:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9481:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "9481:52:9"
																							},
																							"nativeSrc": "9481:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "9481:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9468:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9468:6:9"
																					},
																					"nativeSrc": "9468:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "9468:81:9"
																				},
																				"nativeSrc": "9468:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "9468:81:9"
																			}
																		]
																	},
																	"nativeSrc": "9329:230:9",
																	"nodeType": "YulCase",
																	"src": "9329:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8682:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8682:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8690:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8690:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8679:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8679:2:9"
																},
																"nativeSrc": "8679:14:9",
																"nodeType": "YulFunctionCall",
																"src": "8679:14:9"
															},
															"nativeSrc": "8672:887:9",
															"nodeType": "YulSwitch",
															"src": "8672:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8170:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8251:4:9",
														"nodeType": "YulTypedName",
														"src": "8251:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8257:3:9",
														"nodeType": "YulTypedName",
														"src": "8257:3:9",
														"type": ""
													}
												],
												"src": "8170:1395:9"
											},
											{
												"body": {
													"nativeSrc": "9636:53:9",
													"nodeType": "YulBlock",
													"src": "9636:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9653:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9653:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9676:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9676:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9658:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "9658:17:9"
																		},
																		"nativeSrc": "9658:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9658:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9646:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9646:6:9"
																},
																"nativeSrc": "9646:37:9",
																"nodeType": "YulFunctionCall",
																"src": "9646:37:9"
															},
															"nativeSrc": "9646:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "9646:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9571:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9624:5:9",
														"nodeType": "YulTypedName",
														"src": "9624:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9631:3:9",
														"nodeType": "YulTypedName",
														"src": "9631:3:9",
														"type": ""
													}
												],
												"src": "9571:118:9"
											},
											{
												"body": {
													"nativeSrc": "9793:124:9",
													"nodeType": "YulBlock",
													"src": "9793:124:9",
													"statements": [
														{
															"nativeSrc": "9803:26:9",
															"nodeType": "YulAssignment",
															"src": "9803:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9815:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9815:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9826:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9826:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9811:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9811:3:9"
																},
																"nativeSrc": "9811:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9811:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9803:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9803:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9883:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9883:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9896:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9896:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9907:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9907:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9892:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9892:3:9"
																		},
																		"nativeSrc": "9892:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9892:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9839:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9839:43:9"
																},
																"nativeSrc": "9839:71:9",
																"nodeType": "YulFunctionCall",
																"src": "9839:71:9"
															},
															"nativeSrc": "9839:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "9839:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9695:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9765:9:9",
														"nodeType": "YulTypedName",
														"src": "9765:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9777:6:9",
														"nodeType": "YulTypedName",
														"src": "9777:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9788:4:9",
														"nodeType": "YulTypedName",
														"src": "9788:4:9",
														"type": ""
													}
												],
												"src": "9695:222:9"
											},
											{
												"body": {
													"nativeSrc": "9951:152:9",
													"nodeType": "YulBlock",
													"src": "9951:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9968:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9968:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9971:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9971:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9961:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9961:6:9"
																},
																"nativeSrc": "9961:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9961:88:9"
															},
															"nativeSrc": "9961:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9961:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10065:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10065:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10068:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10068:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10058:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10058:6:9"
																},
																"nativeSrc": "10058:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10058:15:9"
															},
															"nativeSrc": "10058:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10058:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10089:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10089:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10092:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10092:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10082:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10082:6:9"
																},
																"nativeSrc": "10082:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10082:15:9"
															},
															"nativeSrc": "10082:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10082:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9923:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9923:180:9"
											},
											{
												"body": {
													"nativeSrc": "10160:51:9",
													"nodeType": "YulBlock",
													"src": "10160:51:9",
													"statements": [
														{
															"nativeSrc": "10170:34:9",
															"nodeType": "YulAssignment",
															"src": "10170:34:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10195:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10195:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "10198:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10198:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "10191:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10191:3:9"
																},
																"nativeSrc": "10191:13:9",
																"nodeType": "YulFunctionCall",
																"src": "10191:13:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "10170:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "10170:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "10109:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10141:5:9",
														"nodeType": "YulTypedName",
														"src": "10141:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "10151:8:9",
														"nodeType": "YulTypedName",
														"src": "10151:8:9",
														"type": ""
													}
												],
												"src": "10109:102:9"
											},
											{
												"body": {
													"nativeSrc": "10290:775:9",
													"nodeType": "YulBlock",
													"src": "10290:775:9",
													"statements": [
														{
															"nativeSrc": "10300:15:9",
															"nodeType": "YulAssignment",
															"src": "10300:15:9",
															"value": {
																"name": "_power",
																"nativeSrc": "10309:6:9",
																"nodeType": "YulIdentifier",
																"src": "10309:6:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10300:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "10300:5:9"
																}
															]
														},
														{
															"nativeSrc": "10324:14:9",
															"nodeType": "YulAssignment",
															"src": "10324:14:9",
															"value": {
																"name": "_base",
																"nativeSrc": "10333:5:9",
																"nodeType": "YulIdentifier",
																"src": "10333:5:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10324:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10324:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10382:677:9",
																"nodeType": "YulBlock",
																"src": "10382:677:9",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "10470:22:9",
																			"nodeType": "YulBlock",
																			"src": "10470:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "10472:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "10472:16:9"
																						},
																						"nativeSrc": "10472:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "10472:18:9"
																					},
																					"nativeSrc": "10472:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "10472:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10448:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "10448:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "10458:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "10458:3:9"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "10463:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "10463:4:9"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "10454:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "10454:3:9"
																					},
																					"nativeSrc": "10454:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "10454:14:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10445:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "10445:2:9"
																			},
																			"nativeSrc": "10445:24:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10445:24:9"
																		},
																		"nativeSrc": "10442:50:9",
																		"nodeType": "YulIf",
																		"src": "10442:50:9"
																	},
																	{
																		"body": {
																			"nativeSrc": "10537:419:9",
																			"nodeType": "YulBlock",
																			"src": "10537:419:9",
																			"statements": [
																				{
																					"nativeSrc": "10917:25:9",
																					"nodeType": "YulAssignment",
																					"src": "10917:25:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "10930:5:9",
																								"nodeType": "YulIdentifier",
																								"src": "10930:5:9"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "10937:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "10937:4:9"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "10926:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "10926:3:9"
																						},
																						"nativeSrc": "10926:16:9",
																						"nodeType": "YulFunctionCall",
																						"src": "10926:16:9"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "10917:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "10917:5:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10512:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "10512:8:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10522:1:9",
																					"nodeType": "YulLiteral",
																					"src": "10522:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10508:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "10508:3:9"
																			},
																			"nativeSrc": "10508:16:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10508:16:9"
																		},
																		"nativeSrc": "10505:451:9",
																		"nodeType": "YulIf",
																		"src": "10505:451:9"
																	},
																	{
																		"nativeSrc": "10969:23:9",
																		"nodeType": "YulAssignment",
																		"src": "10969:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10981:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "10981:4:9"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "10987:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "10987:4:9"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "10977:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "10977:3:9"
																			},
																			"nativeSrc": "10977:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10977:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "10969:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10969:4:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11005:44:9",
																		"nodeType": "YulAssignment",
																		"src": "11005:44:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "11040:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "11040:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "11017:22:9",
																				"nodeType": "YulIdentifier",
																				"src": "11017:22:9"
																			},
																			"nativeSrc": "11017:32:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11017:32:9"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "11005:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "11005:8:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10358:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "10358:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10368:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10368:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10355:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10355:2:9"
																},
																"nativeSrc": "10355:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10355:15:9"
															},
															"nativeSrc": "10347:712:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10371:2:9",
																"nodeType": "YulBlock",
																"src": "10371:2:9",
																"statements": []
															},
															"pre": {
																"nativeSrc": "10351:3:9",
																"nodeType": "YulBlock",
																"src": "10351:3:9",
																"statements": []
															},
															"src": "10347:712:9"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "10217:848:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "10245:6:9",
														"nodeType": "YulTypedName",
														"src": "10245:6:9",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "10253:5:9",
														"nodeType": "YulTypedName",
														"src": "10253:5:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10260:8:9",
														"nodeType": "YulTypedName",
														"src": "10260:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10270:3:9",
														"nodeType": "YulTypedName",
														"src": "10270:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10278:5:9",
														"nodeType": "YulTypedName",
														"src": "10278:5:9",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "10285:4:9",
														"nodeType": "YulTypedName",
														"src": "10285:4:9",
														"type": ""
													}
												],
												"src": "10217:848:9"
											},
											{
												"body": {
													"nativeSrc": "11131:1013:9",
													"nodeType": "YulBlock",
													"src": "11131:1013:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "11326:20:9",
																"nodeType": "YulBlock",
																"src": "11326:20:9",
																"statements": [
																	{
																		"nativeSrc": "11328:10:9",
																		"nodeType": "YulAssignment",
																		"src": "11328:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11337:1:9",
																			"nodeType": "YulLiteral",
																			"src": "11337:1:9",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11328:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "11328:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11339:5:9",
																		"nodeType": "YulLeave",
																		"src": "11339:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11316:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "11316:8:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11309:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11309:6:9"
																},
																"nativeSrc": "11309:16:9",
																"nodeType": "YulFunctionCall",
																"src": "11309:16:9"
															},
															"nativeSrc": "11306:40:9",
															"nodeType": "YulIf",
															"src": "11306:40:9"
														},
														{
															"body": {
																"nativeSrc": "11371:20:9",
																"nodeType": "YulBlock",
																"src": "11371:20:9",
																"statements": [
																	{
																		"nativeSrc": "11373:10:9",
																		"nodeType": "YulAssignment",
																		"src": "11373:10:9",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11382:1:9",
																			"nodeType": "YulLiteral",
																			"src": "11382:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11373:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "11373:5:9"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11384:5:9",
																		"nodeType": "YulLeave",
																		"src": "11384:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11365:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11365:4:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11358:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11358:6:9"
																},
																"nativeSrc": "11358:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11358:12:9"
															},
															"nativeSrc": "11355:36:9",
															"nodeType": "YulIf",
															"src": "11355:36:9"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "11501:20:9",
																		"nodeType": "YulBlock",
																		"src": "11501:20:9",
																		"statements": [
																			{
																				"nativeSrc": "11503:10:9",
																				"nodeType": "YulAssignment",
																				"src": "11503:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11512:1:9",
																					"nodeType": "YulLiteral",
																					"src": "11512:1:9",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11503:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "11503:5:9"
																					}
																				]
																			},
																			{
																				"nativeSrc": "11514:5:9",
																				"nodeType": "YulLeave",
																				"src": "11514:5:9"
																			}
																		]
																	},
																	"nativeSrc": "11494:27:9",
																	"nodeType": "YulCase",
																	"src": "11494:27:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11499:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11499:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "11545:176:9",
																		"nodeType": "YulBlock",
																		"src": "11545:176:9",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "11580:22:9",
																					"nodeType": "YulBlock",
																					"src": "11580:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11582:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "11582:16:9"
																								},
																								"nativeSrc": "11582:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "11582:18:9"
																							},
																							"nativeSrc": "11582:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "11582:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "11565:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "11565:8:9"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11575:3:9",
																							"nodeType": "YulLiteral",
																							"src": "11575:3:9",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11562:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "11562:2:9"
																					},
																					"nativeSrc": "11562:17:9",
																					"nodeType": "YulFunctionCall",
																					"src": "11562:17:9"
																				},
																				"nativeSrc": "11559:43:9",
																				"nodeType": "YulIf",
																				"src": "11559:43:9"
																			},
																			{
																				"nativeSrc": "11615:25:9",
																				"nodeType": "YulAssignment",
																				"src": "11615:25:9",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11628:1:9",
																							"nodeType": "YulLiteral",
																							"src": "11628:1:9",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "11631:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "11631:8:9"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "11624:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "11624:3:9"
																					},
																					"nativeSrc": "11624:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "11624:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "11615:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "11615:5:9"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11671:22:9",
																					"nodeType": "YulBlock",
																					"src": "11671:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "11673:16:9",
																									"nodeType": "YulIdentifier",
																									"src": "11673:16:9"
																								},
																								"nativeSrc": "11673:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "11673:18:9"
																							},
																							"nativeSrc": "11673:18:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "11673:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "11659:5:9",
																							"nodeType": "YulIdentifier",
																							"src": "11659:5:9"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "11666:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "11666:3:9"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "11656:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "11656:2:9"
																					},
																					"nativeSrc": "11656:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "11656:14:9"
																				},
																				"nativeSrc": "11653:40:9",
																				"nodeType": "YulIf",
																				"src": "11653:40:9"
																			},
																			{
																				"nativeSrc": "11706:5:9",
																				"nodeType": "YulLeave",
																				"src": "11706:5:9"
																			}
																		]
																	},
																	"nativeSrc": "11530:191:9",
																	"nodeType": "YulCase",
																	"src": "11530:191:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11535:1:9",
																		"nodeType": "YulLiteral",
																		"src": "11535:1:9",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "11451:4:9",
																"nodeType": "YulIdentifier",
																"src": "11451:4:9"
															},
															"nativeSrc": "11444:277:9",
															"nodeType": "YulSwitch",
															"src": "11444:277:9"
														},
														{
															"body": {
																"nativeSrc": "11853:123:9",
																"nodeType": "YulBlock",
																"src": "11853:123:9",
																"statements": [
																	{
																		"nativeSrc": "11867:28:9",
																		"nodeType": "YulAssignment",
																		"src": "11867:28:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11880:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "11880:4:9"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "11886:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "11886:8:9"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "11876:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "11876:3:9"
																			},
																			"nativeSrc": "11876:19:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11876:19:9"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11867:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "11867:5:9"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11926:22:9",
																			"nodeType": "YulBlock",
																			"src": "11926:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11928:16:9",
																							"nodeType": "YulIdentifier",
																							"src": "11928:16:9"
																						},
																						"nativeSrc": "11928:18:9",
																						"nodeType": "YulFunctionCall",
																						"src": "11928:18:9"
																					},
																					"nativeSrc": "11928:18:9",
																					"nodeType": "YulExpressionStatement",
																					"src": "11928:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "11914:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "11914:5:9"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "11921:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "11921:3:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11911:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "11911:2:9"
																			},
																			"nativeSrc": "11911:14:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11911:14:9"
																		},
																		"nativeSrc": "11908:40:9",
																		"nodeType": "YulIf",
																		"src": "11908:40:9"
																	},
																	{
																		"nativeSrc": "11961:5:9",
																		"nodeType": "YulLeave",
																		"src": "11961:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11756:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "11756:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11762:2:9",
																						"nodeType": "YulLiteral",
																						"src": "11762:2:9",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11753:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "11753:2:9"
																				},
																				"nativeSrc": "11753:12:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11753:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11770:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "11770:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11780:2:9",
																						"nodeType": "YulLiteral",
																						"src": "11780:2:9",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11767:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "11767:2:9"
																				},
																				"nativeSrc": "11767:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11767:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11749:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11749:3:9"
																		},
																		"nativeSrc": "11749:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11749:35:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11805:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "11805:4:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11811:3:9",
																						"nodeType": "YulLiteral",
																						"src": "11811:3:9",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11802:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "11802:2:9"
																				},
																				"nativeSrc": "11802:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11802:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11820:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "11820:8:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11830:2:9",
																						"nodeType": "YulLiteral",
																						"src": "11830:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11817:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "11817:2:9"
																				},
																				"nativeSrc": "11817:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "11817:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11798:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11798:3:9"
																		},
																		"nativeSrc": "11798:36:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11798:36:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11733:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11733:2:9"
																},
																"nativeSrc": "11733:111:9",
																"nodeType": "YulFunctionCall",
																"src": "11733:111:9"
															},
															"nativeSrc": "11730:246:9",
															"nodeType": "YulIf",
															"src": "11730:246:9"
														},
														{
															"nativeSrc": "11986:57:9",
															"nodeType": "YulAssignment",
															"src": "11986:57:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12020:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12020:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "12023:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12023:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "12029:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "12029:8:9"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "12039:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12039:3:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "12001:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "12001:18:9"
																},
																"nativeSrc": "12001:42:9",
																"nodeType": "YulFunctionCall",
																"src": "12001:42:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11986:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11986:5:9"
																},
																{
																	"name": "base",
																	"nativeSrc": "11993:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11993:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12082:22:9",
																"nodeType": "YulBlock",
																"src": "12082:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12084:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "12084:16:9"
																			},
																			"nativeSrc": "12084:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12084:18:9"
																		},
																		"nativeSrc": "12084:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12084:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "12059:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12059:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "12070:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "12070:3:9"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "12075:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12075:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "12066:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12066:3:9"
																		},
																		"nativeSrc": "12066:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12066:14:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12056:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "12056:2:9"
																},
																"nativeSrc": "12056:25:9",
																"nodeType": "YulFunctionCall",
																"src": "12056:25:9"
															},
															"nativeSrc": "12053:51:9",
															"nodeType": "YulIf",
															"src": "12053:51:9"
														},
														{
															"nativeSrc": "12113:25:9",
															"nodeType": "YulAssignment",
															"src": "12113:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "12126:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12126:5:9"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "12133:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12133:4:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12122:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12122:3:9"
																},
																"nativeSrc": "12122:16:9",
																"nodeType": "YulFunctionCall",
																"src": "12122:16:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "12113:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12113:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "11071:1073:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "11101:4:9",
														"nodeType": "YulTypedName",
														"src": "11101:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11107:8:9",
														"nodeType": "YulTypedName",
														"src": "11107:8:9",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "11117:3:9",
														"nodeType": "YulTypedName",
														"src": "11117:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11125:5:9",
														"nodeType": "YulTypedName",
														"src": "11125:5:9",
														"type": ""
													}
												],
												"src": "11071:1073:9"
											},
											{
												"body": {
													"nativeSrc": "12193:43:9",
													"nodeType": "YulBlock",
													"src": "12193:43:9",
													"statements": [
														{
															"nativeSrc": "12203:27:9",
															"nodeType": "YulAssignment",
															"src": "12203:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12218:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12218:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12225:4:9",
																		"nodeType": "YulLiteral",
																		"src": "12225:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12214:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12214:3:9"
																},
																"nativeSrc": "12214:16:9",
																"nodeType": "YulFunctionCall",
																"src": "12214:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12203:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "12203:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "12150:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12175:5:9",
														"nodeType": "YulTypedName",
														"src": "12175:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12185:7:9",
														"nodeType": "YulTypedName",
														"src": "12185:7:9",
														"type": ""
													}
												],
												"src": "12150:86:9"
											},
											{
												"body": {
													"nativeSrc": "12306:217:9",
													"nodeType": "YulBlock",
													"src": "12306:217:9",
													"statements": [
														{
															"nativeSrc": "12316:31:9",
															"nodeType": "YulAssignment",
															"src": "12316:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12342:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12342:4:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12324:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12324:17:9"
																},
																"nativeSrc": "12324:23:9",
																"nodeType": "YulFunctionCall",
																"src": "12324:23:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "12316:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12316:4:9"
																}
															]
														},
														{
															"nativeSrc": "12356:37:9",
															"nodeType": "YulAssignment",
															"src": "12356:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "12384:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "12384:8:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "12368:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "12368:15:9"
																},
																"nativeSrc": "12368:25:9",
																"nodeType": "YulFunctionCall",
																"src": "12368:25:9"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "12356:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "12356:8:9"
																}
															]
														},
														{
															"nativeSrc": "12403:113:9",
															"nodeType": "YulAssignment",
															"src": "12403:113:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12433:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12433:4:9"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "12439:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "12439:8:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12449:66:9",
																		"nodeType": "YulLiteral",
																		"src": "12449:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "12412:20:9",
																	"nodeType": "YulIdentifier",
																	"src": "12412:20:9"
																},
																"nativeSrc": "12412:104:9",
																"nodeType": "YulFunctionCall",
																"src": "12412:104:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "12403:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12403:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "12242:281:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "12281:4:9",
														"nodeType": "YulTypedName",
														"src": "12281:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "12287:8:9",
														"nodeType": "YulTypedName",
														"src": "12287:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "12300:5:9",
														"nodeType": "YulTypedName",
														"src": "12300:5:9",
														"type": ""
													}
												],
												"src": "12242:281:9"
											},
											{
												"body": {
													"nativeSrc": "12577:362:9",
													"nodeType": "YulBlock",
													"src": "12577:362:9",
													"statements": [
														{
															"nativeSrc": "12587:25:9",
															"nodeType": "YulAssignment",
															"src": "12587:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12610:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12610:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12592:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12592:17:9"
																},
																"nativeSrc": "12592:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12592:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12587:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12587:1:9"
																}
															]
														},
														{
															"nativeSrc": "12621:25:9",
															"nodeType": "YulAssignment",
															"src": "12621:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12644:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12644:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12626:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12626:17:9"
																},
																"nativeSrc": "12626:20:9",
																"nodeType": "YulFunctionCall",
																"src": "12626:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12621:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "12621:1:9"
																}
															]
														},
														{
															"nativeSrc": "12655:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "12655:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12678:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12678:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12681:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "12681:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12674:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12674:3:9"
																},
																"nativeSrc": "12674:9:9",
																"nodeType": "YulFunctionCall",
																"src": "12674:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12659:11:9",
																	"nodeType": "YulTypedName",
																	"src": "12659:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12692:41:9",
															"nodeType": "YulAssignment",
															"src": "12692:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12721:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "12721:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12703:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "12703:17:9"
																},
																"nativeSrc": "12703:30:9",
																"nodeType": "YulFunctionCall",
																"src": "12703:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12692:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "12692:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12910:22:9",
																"nodeType": "YulBlock",
																"src": "12910:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12912:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "12912:16:9"
																			},
																			"nativeSrc": "12912:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12912:18:9"
																		},
																		"nativeSrc": "12912:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12912:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12843:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "12843:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12836:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "12836:6:9"
																				},
																				"nativeSrc": "12836:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12836:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12866:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "12866:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12873:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "12873:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12882:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "12882:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12869:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "12869:3:9"
																						},
																						"nativeSrc": "12869:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "12869:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12863:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "12863:2:9"
																				},
																				"nativeSrc": "12863:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12863:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12816:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "12816:2:9"
																		},
																		"nativeSrc": "12816:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12816:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12796:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12796:6:9"
																},
																"nativeSrc": "12796:113:9",
																"nodeType": "YulFunctionCall",
																"src": "12796:113:9"
															},
															"nativeSrc": "12793:139:9",
															"nodeType": "YulIf",
															"src": "12793:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12529:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12560:1:9",
														"nodeType": "YulTypedName",
														"src": "12560:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12563:1:9",
														"nodeType": "YulTypedName",
														"src": "12563:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12569:7:9",
														"nodeType": "YulTypedName",
														"src": "12569:7:9",
														"type": ""
													}
												],
												"src": "12529:410:9"
											},
											{
												"body": {
													"nativeSrc": "12998:32:9",
													"nodeType": "YulBlock",
													"src": "12998:32:9",
													"statements": [
														{
															"nativeSrc": "13008:16:9",
															"nodeType": "YulAssignment",
															"src": "13008:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "13019:5:9",
																"nodeType": "YulIdentifier",
																"src": "13019:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13008:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "13008:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "12945:85:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12980:5:9",
														"nodeType": "YulTypedName",
														"src": "12980:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12990:7:9",
														"nodeType": "YulTypedName",
														"src": "12990:7:9",
														"type": ""
													}
												],
												"src": "12945:85:9"
											},
											{
												"body": {
													"nativeSrc": "13104:90:9",
													"nodeType": "YulBlock",
													"src": "13104:90:9",
													"statements": [
														{
															"nativeSrc": "13114:74:9",
															"nodeType": "YulAssignment",
															"src": "13114:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13180:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "13180:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "13154:25:9",
																					"nodeType": "YulIdentifier",
																					"src": "13154:25:9"
																				},
																				"nativeSrc": "13154:32:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13154:32:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "13145:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "13145:8:9"
																		},
																		"nativeSrc": "13145:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13145:42:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13127:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "13127:17:9"
																},
																"nativeSrc": "13127:61:9",
																"nodeType": "YulFunctionCall",
																"src": "13127:61:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "13114:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "13114:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "13036:158:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13084:5:9",
														"nodeType": "YulTypedName",
														"src": "13084:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "13094:9:9",
														"nodeType": "YulTypedName",
														"src": "13094:9:9",
														"type": ""
													}
												],
												"src": "13036:158:9"
											},
											{
												"body": {
													"nativeSrc": "13273:74:9",
													"nodeType": "YulBlock",
													"src": "13273:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13290:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13290:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13334:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "13334:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "13295:38:9",
																			"nodeType": "YulIdentifier",
																			"src": "13295:38:9"
																		},
																		"nativeSrc": "13295:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13295:45:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13283:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13283:6:9"
																},
																"nativeSrc": "13283:58:9",
																"nodeType": "YulFunctionCall",
																"src": "13283:58:9"
															},
															"nativeSrc": "13283:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "13283:58:9"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "13200:147:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13261:5:9",
														"nodeType": "YulTypedName",
														"src": "13261:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13268:3:9",
														"nodeType": "YulTypedName",
														"src": "13268:3:9",
														"type": ""
													}
												],
												"src": "13200:147:9"
											},
											{
												"body": {
													"nativeSrc": "13418:53:9",
													"nodeType": "YulBlock",
													"src": "13418:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13435:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13435:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13458:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "13458:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "13440:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "13440:17:9"
																		},
																		"nativeSrc": "13440:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13440:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13428:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13428:6:9"
																},
																"nativeSrc": "13428:37:9",
																"nodeType": "YulFunctionCall",
																"src": "13428:37:9"
															},
															"nativeSrc": "13428:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "13428:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "13353:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13406:5:9",
														"nodeType": "YulTypedName",
														"src": "13406:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13413:3:9",
														"nodeType": "YulTypedName",
														"src": "13413:3:9",
														"type": ""
													}
												],
												"src": "13353:118:9"
											},
											{
												"body": {
													"nativeSrc": "13611:214:9",
													"nodeType": "YulBlock",
													"src": "13611:214:9",
													"statements": [
														{
															"nativeSrc": "13621:26:9",
															"nodeType": "YulAssignment",
															"src": "13621:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13633:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13633:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13644:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13644:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13629:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13629:3:9"
																},
																"nativeSrc": "13629:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13629:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13621:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13621:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13709:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13709:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13722:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13722:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13733:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13733:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13718:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13718:3:9"
																		},
																		"nativeSrc": "13718:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13718:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "13657:51:9",
																	"nodeType": "YulIdentifier",
																	"src": "13657:51:9"
																},
																"nativeSrc": "13657:79:9",
																"nodeType": "YulFunctionCall",
																"src": "13657:79:9"
															},
															"nativeSrc": "13657:79:9",
															"nodeType": "YulExpressionStatement",
															"src": "13657:79:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13790:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13790:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13803:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13803:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13814:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13814:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13799:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13799:3:9"
																		},
																		"nativeSrc": "13799:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13799:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13746:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "13746:43:9"
																},
																"nativeSrc": "13746:72:9",
																"nodeType": "YulFunctionCall",
																"src": "13746:72:9"
															},
															"nativeSrc": "13746:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "13746:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13477:348:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13575:9:9",
														"nodeType": "YulTypedName",
														"src": "13575:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13587:6:9",
														"nodeType": "YulTypedName",
														"src": "13587:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13595:6:9",
														"nodeType": "YulTypedName",
														"src": "13595:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13606:4:9",
														"nodeType": "YulTypedName",
														"src": "13606:4:9",
														"type": ""
													}
												],
												"src": "13477:348:9"
											},
											{
												"body": {
													"nativeSrc": "13873:48:9",
													"nodeType": "YulBlock",
													"src": "13873:48:9",
													"statements": [
														{
															"nativeSrc": "13883:32:9",
															"nodeType": "YulAssignment",
															"src": "13883:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13908:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "13908:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "13901:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "13901:6:9"
																		},
																		"nativeSrc": "13901:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13901:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13894:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13894:6:9"
																},
																"nativeSrc": "13894:21:9",
																"nodeType": "YulFunctionCall",
																"src": "13894:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13883:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "13883:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "13831:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13855:5:9",
														"nodeType": "YulTypedName",
														"src": "13855:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13865:7:9",
														"nodeType": "YulTypedName",
														"src": "13865:7:9",
														"type": ""
													}
												],
												"src": "13831:90:9"
											},
											{
												"body": {
													"nativeSrc": "13986:50:9",
													"nodeType": "YulBlock",
													"src": "13986:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14003:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14003:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14023:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "14023:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "14008:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "14008:14:9"
																		},
																		"nativeSrc": "14008:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14008:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13996:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13996:6:9"
																},
																"nativeSrc": "13996:34:9",
																"nodeType": "YulFunctionCall",
																"src": "13996:34:9"
															},
															"nativeSrc": "13996:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "13996:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "13927:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13974:5:9",
														"nodeType": "YulTypedName",
														"src": "13974:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13981:3:9",
														"nodeType": "YulTypedName",
														"src": "13981:3:9",
														"type": ""
													}
												],
												"src": "13927:109:9"
											},
											{
												"body": {
													"nativeSrc": "14134:118:9",
													"nodeType": "YulBlock",
													"src": "14134:118:9",
													"statements": [
														{
															"nativeSrc": "14144:26:9",
															"nodeType": "YulAssignment",
															"src": "14144:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14156:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14156:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14167:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14167:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14152:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14152:3:9"
																},
																"nativeSrc": "14152:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14152:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14144:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14144:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14218:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14218:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14231:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14231:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14242:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14242:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14227:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14227:3:9"
																		},
																		"nativeSrc": "14227:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14227:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "14180:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "14180:37:9"
																},
																"nativeSrc": "14180:65:9",
																"nodeType": "YulFunctionCall",
																"src": "14180:65:9"
															},
															"nativeSrc": "14180:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "14180:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "14042:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14106:9:9",
														"nodeType": "YulTypedName",
														"src": "14106:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14118:6:9",
														"nodeType": "YulTypedName",
														"src": "14118:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14129:4:9",
														"nodeType": "YulTypedName",
														"src": "14129:4:9",
														"type": ""
													}
												],
												"src": "14042:210:9"
											},
											{
												"body": {
													"nativeSrc": "14286:152:9",
													"nodeType": "YulBlock",
													"src": "14286:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14303:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14303:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14306:77:9",
																		"nodeType": "YulLiteral",
																		"src": "14306:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14296:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14296:6:9"
																},
																"nativeSrc": "14296:88:9",
																"nodeType": "YulFunctionCall",
																"src": "14296:88:9"
															},
															"nativeSrc": "14296:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "14296:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14400:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14400:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14403:4:9",
																		"nodeType": "YulLiteral",
																		"src": "14403:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14393:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14393:6:9"
																},
																"nativeSrc": "14393:15:9",
																"nodeType": "YulFunctionCall",
																"src": "14393:15:9"
															},
															"nativeSrc": "14393:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "14393:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14424:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14424:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14427:4:9",
																		"nodeType": "YulLiteral",
																		"src": "14427:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14417:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14417:6:9"
																},
																"nativeSrc": "14417:15:9",
																"nodeType": "YulFunctionCall",
																"src": "14417:15:9"
															},
															"nativeSrc": "14417:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "14417:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14258:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "14258:180:9"
											},
											{
												"body": {
													"nativeSrc": "14486:143:9",
													"nodeType": "YulBlock",
													"src": "14486:143:9",
													"statements": [
														{
															"nativeSrc": "14496:25:9",
															"nodeType": "YulAssignment",
															"src": "14496:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14519:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14519:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14501:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14501:17:9"
																},
																"nativeSrc": "14501:20:9",
																"nodeType": "YulFunctionCall",
																"src": "14501:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14496:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14496:1:9"
																}
															]
														},
														{
															"nativeSrc": "14530:25:9",
															"nodeType": "YulAssignment",
															"src": "14530:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14553:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14553:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14535:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14535:17:9"
																},
																"nativeSrc": "14535:20:9",
																"nodeType": "YulFunctionCall",
																"src": "14535:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14530:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14530:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14577:22:9",
																"nodeType": "YulBlock",
																"src": "14577:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14579:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "14579:16:9"
																			},
																			"nativeSrc": "14579:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14579:18:9"
																		},
																		"nativeSrc": "14579:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14579:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14574:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14574:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14567:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14567:6:9"
																},
																"nativeSrc": "14567:9:9",
																"nodeType": "YulFunctionCall",
																"src": "14567:9:9"
															},
															"nativeSrc": "14564:35:9",
															"nodeType": "YulIf",
															"src": "14564:35:9"
														},
														{
															"nativeSrc": "14609:14:9",
															"nodeType": "YulAssignment",
															"src": "14609:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14618:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14618:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14621:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14621:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14614:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14614:3:9"
																},
																"nativeSrc": "14614:9:9",
																"nodeType": "YulFunctionCall",
																"src": "14614:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14609:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14609:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14444:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14475:1:9",
														"nodeType": "YulTypedName",
														"src": "14475:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14478:1:9",
														"nodeType": "YulTypedName",
														"src": "14478:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14484:1:9",
														"nodeType": "YulTypedName",
														"src": "14484:1:9",
														"type": ""
													}
												],
												"src": "14444:185:9"
											},
											{
												"body": {
													"nativeSrc": "14680:149:9",
													"nodeType": "YulBlock",
													"src": "14680:149:9",
													"statements": [
														{
															"nativeSrc": "14690:25:9",
															"nodeType": "YulAssignment",
															"src": "14690:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14713:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14713:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14695:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14695:17:9"
																},
																"nativeSrc": "14695:20:9",
																"nodeType": "YulFunctionCall",
																"src": "14695:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14690:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14690:1:9"
																}
															]
														},
														{
															"nativeSrc": "14724:25:9",
															"nodeType": "YulAssignment",
															"src": "14724:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14747:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14747:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14729:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14729:17:9"
																},
																"nativeSrc": "14729:20:9",
																"nodeType": "YulFunctionCall",
																"src": "14729:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14724:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14724:1:9"
																}
															]
														},
														{
															"nativeSrc": "14758:17:9",
															"nodeType": "YulAssignment",
															"src": "14758:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14770:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14770:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14773:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14773:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14766:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14766:3:9"
																},
																"nativeSrc": "14766:9:9",
																"nodeType": "YulFunctionCall",
																"src": "14766:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14758:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14758:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14800:22:9",
																"nodeType": "YulBlock",
																"src": "14800:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14802:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "14802:16:9"
																			},
																			"nativeSrc": "14802:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14802:18:9"
																		},
																		"nativeSrc": "14802:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14802:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14791:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14791:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14797:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14797:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14788:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "14788:2:9"
																},
																"nativeSrc": "14788:11:9",
																"nodeType": "YulFunctionCall",
																"src": "14788:11:9"
															},
															"nativeSrc": "14785:37:9",
															"nodeType": "YulIf",
															"src": "14785:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14635:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14666:1:9",
														"nodeType": "YulTypedName",
														"src": "14666:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14669:1:9",
														"nodeType": "YulTypedName",
														"src": "14669:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14675:4:9",
														"nodeType": "YulTypedName",
														"src": "14675:4:9",
														"type": ""
													}
												],
												"src": "14635:194:9"
											},
											{
												"body": {
													"nativeSrc": "14879:147:9",
													"nodeType": "YulBlock",
													"src": "14879:147:9",
													"statements": [
														{
															"nativeSrc": "14889:25:9",
															"nodeType": "YulAssignment",
															"src": "14889:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14912:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14912:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14894:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14894:17:9"
																},
																"nativeSrc": "14894:20:9",
																"nodeType": "YulFunctionCall",
																"src": "14894:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14889:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14889:1:9"
																}
															]
														},
														{
															"nativeSrc": "14923:25:9",
															"nodeType": "YulAssignment",
															"src": "14923:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14946:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14946:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14928:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "14928:17:9"
																},
																"nativeSrc": "14928:20:9",
																"nodeType": "YulFunctionCall",
																"src": "14928:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14923:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14923:1:9"
																}
															]
														},
														{
															"nativeSrc": "14957:16:9",
															"nodeType": "YulAssignment",
															"src": "14957:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14968:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14968:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14971:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14971:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14964:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14964:3:9"
																},
																"nativeSrc": "14964:9:9",
																"nodeType": "YulFunctionCall",
																"src": "14964:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14957:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14957:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14997:22:9",
																"nodeType": "YulBlock",
																"src": "14997:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14999:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "14999:16:9"
																			},
																			"nativeSrc": "14999:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14999:18:9"
																		},
																		"nativeSrc": "14999:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14999:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14989:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14989:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14992:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14992:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14986:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "14986:2:9"
																},
																"nativeSrc": "14986:10:9",
																"nodeType": "YulFunctionCall",
																"src": "14986:10:9"
															},
															"nativeSrc": "14983:36:9",
															"nodeType": "YulIf",
															"src": "14983:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14835:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14866:1:9",
														"nodeType": "YulTypedName",
														"src": "14866:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14869:1:9",
														"nodeType": "YulTypedName",
														"src": "14869:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14875:3:9",
														"nodeType": "YulTypedName",
														"src": "14875:3:9",
														"type": ""
													}
												],
												"src": "14835:191:9"
											},
											{
												"body": {
													"nativeSrc": "15186:288:9",
													"nodeType": "YulBlock",
													"src": "15186:288:9",
													"statements": [
														{
															"nativeSrc": "15196:26:9",
															"nodeType": "YulAssignment",
															"src": "15196:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15208:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15208:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15219:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15219:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15204:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15204:3:9"
																},
																"nativeSrc": "15204:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15204:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15196:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15196:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15276:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15276:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15289:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15289:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15300:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15300:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15285:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15285:3:9"
																		},
																		"nativeSrc": "15285:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15285:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15232:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "15232:43:9"
																},
																"nativeSrc": "15232:71:9",
																"nodeType": "YulFunctionCall",
																"src": "15232:71:9"
															},
															"nativeSrc": "15232:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "15232:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15357:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15357:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15370:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15370:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15381:2:9",
																				"nodeType": "YulLiteral",
																				"src": "15381:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15366:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15366:3:9"
																		},
																		"nativeSrc": "15366:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15366:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15313:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "15313:43:9"
																},
																"nativeSrc": "15313:72:9",
																"nodeType": "YulFunctionCall",
																"src": "15313:72:9"
															},
															"nativeSrc": "15313:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "15313:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15439:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15439:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15452:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15452:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15463:2:9",
																				"nodeType": "YulLiteral",
																				"src": "15463:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15448:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15448:3:9"
																		},
																		"nativeSrc": "15448:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15448:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15395:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "15395:43:9"
																},
																"nativeSrc": "15395:72:9",
																"nodeType": "YulFunctionCall",
																"src": "15395:72:9"
															},
															"nativeSrc": "15395:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "15395:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15032:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15142:9:9",
														"nodeType": "YulTypedName",
														"src": "15142:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15154:6:9",
														"nodeType": "YulTypedName",
														"src": "15154:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15162:6:9",
														"nodeType": "YulTypedName",
														"src": "15162:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15170:6:9",
														"nodeType": "YulTypedName",
														"src": "15170:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15181:4:9",
														"nodeType": "YulTypedName",
														"src": "15181:4:9",
														"type": ""
													}
												],
												"src": "15032:442:9"
											},
											{
												"body": {
													"nativeSrc": "15578:124:9",
													"nodeType": "YulBlock",
													"src": "15578:124:9",
													"statements": [
														{
															"nativeSrc": "15588:26:9",
															"nodeType": "YulAssignment",
															"src": "15588:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15600:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15600:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15611:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15611:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15596:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15596:3:9"
																},
																"nativeSrc": "15596:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15596:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15588:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15588:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15668:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "15668:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15681:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15681:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15692:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15692:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15677:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15677:3:9"
																		},
																		"nativeSrc": "15677:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15677:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15624:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "15624:43:9"
																},
																"nativeSrc": "15624:71:9",
																"nodeType": "YulFunctionCall",
																"src": "15624:71:9"
															},
															"nativeSrc": "15624:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "15624:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "15480:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15550:9:9",
														"nodeType": "YulTypedName",
														"src": "15550:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15562:6:9",
														"nodeType": "YulTypedName",
														"src": "15562:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15573:4:9",
														"nodeType": "YulTypedName",
														"src": "15573:4:9",
														"type": ""
													}
												],
												"src": "15480:222:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051612be6380380612be683398181016040528101906100319190610aac565b33848481600390816100439190610d4f565b5080600490816100539190610d4f565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100bd9190610e2d565b60405180910390fd5b6100d5816103d860201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361013b576040517fcfe2ea6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60c8811115610176576040517f5ba09ae000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600781905550600160085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061029e3361027961049d60201b60201c565b600a6102859190610fae565b620f42406102939190610ff8565b6104a560201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a60405160405180910390a37f2211abb4bbc4d80b7505c31b54d01d15ac6e33a42c59540d309d89daf759063a5f82604051610329929190611081565b60405180910390a13373ffffffffffffffffffffffffffffffffffffffff167f69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f600160405161037891906110c2565b60405180910390a28173ffffffffffffffffffffffffffffffffffffffff167f69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f60016040516103c791906110c2565b60405180910390a2505050506111ec565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610515575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161050c9190610e2d565b60405180910390fd5b6105265f838361052a60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561059257505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15610622575f6007541115610621575f6064600754836105b29190610ff8565b6105bc9190611108565b90505f81111561061f576105f88460065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361063960201b60201c565b5f81836106059190611138565b905061061885858361063960201b60201c565b5050610634565b505b5b61063383838361063960201b60201c565b5b505050565b61064761065d60201b60201c565b6106588383836106a460201b60201c565b505050565b61066b6108bd60201b60201c565b156106a2576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106f4578060025f8282546106e8919061116b565b925050819055506107c2565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561077d578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016107749392919061119e565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610809578060025f8282540392505081905550610853565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108b091906111d3565b60405180910390a3505050565b5f60055f9054906101000a900460ff16905090565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610931826108eb565b810181811067ffffffffffffffff821117156109505761094f6108fb565b5b80604052505050565b5f6109626108d2565b905061096e8282610928565b919050565b5f67ffffffffffffffff82111561098d5761098c6108fb565b5b610996826108eb565b9050602081019050919050565b8281835e5f83830152505050565b5f6109c36109be84610973565b610959565b9050828152602081018484840111156109df576109de6108e7565b5b6109ea8482856109a3565b509392505050565b5f82601f830112610a0657610a056108e3565b5b8151610a168482602086016109b1565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a4882610a1f565b9050919050565b610a5881610a3e565b8114610a62575f5ffd5b50565b5f81519050610a7381610a4f565b92915050565b5f819050919050565b610a8b81610a79565b8114610a95575f5ffd5b50565b5f81519050610aa681610a82565b92915050565b5f5f5f5f60808587031215610ac457610ac36108db565b5b5f85015167ffffffffffffffff811115610ae157610ae06108df565b5b610aed878288016109f2565b945050602085015167ffffffffffffffff811115610b0e57610b0d6108df565b5b610b1a878288016109f2565b9350506040610b2b87828801610a65565b9250506060610b3c87828801610a98565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610b9657607f821691505b602082108103610ba957610ba8610b52565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610c0b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610bd0565b610c158683610bd0565b95508019841693508086168417925050509392505050565b5f819050919050565b5f610c50610c4b610c4684610a79565b610c2d565b610a79565b9050919050565b5f819050919050565b610c6983610c36565b610c7d610c7582610c57565b848454610bdc565b825550505050565b5f5f905090565b610c94610c85565b610c9f818484610c60565b505050565b5b81811015610cc257610cb75f82610c8c565b600181019050610ca5565b5050565b601f821115610d0757610cd881610baf565b610ce184610bc1565b81016020851015610cf0578190505b610d04610cfc85610bc1565b830182610ca4565b50505b505050565b5f82821c905092915050565b5f610d275f1984600802610d0c565b1980831691505092915050565b5f610d3f8383610d18565b9150826002028217905092915050565b610d5882610b48565b67ffffffffffffffff811115610d7157610d706108fb565b5b610d7b8254610b7f565b610d86828285610cc6565b5f60209050601f831160018114610db7575f8415610da5578287015190505b610daf8582610d34565b865550610e16565b601f198416610dc586610baf565b5f5b82811015610dec57848901518255600182019150602085019450602081019050610dc7565b86831015610e095784890151610e05601f891682610d18565b8355505b6001600288020188555050505b505050505050565b610e2781610a3e565b82525050565b5f602082019050610e405f830184610e1e565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610ec857808604811115610ea457610ea3610e46565b5b6001851615610eb35780820291505b8081029050610ec185610e73565b9450610e88565b94509492505050565b5f82610ee05760019050610f9b565b81610eed575f9050610f9b565b8160018114610f035760028114610f0d57610f3c565b6001915050610f9b565b60ff841115610f1f57610f1e610e46565b5b8360020a915084821115610f3657610f35610e46565b5b50610f9b565b5060208310610133831016604e8410600b8410161715610f715782820a905083811115610f6c57610f6b610e46565b5b610f9b565b610f7e8484846001610e7f565b92509050818404811115610f9557610f94610e46565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610fb882610a79565b9150610fc383610fa2565b9250610ff07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610ed1565b905092915050565b5f61100282610a79565b915061100d83610a79565b925082820261101b81610a79565b9150828204841483151761103257611031610e46565b5b5092915050565b5f819050919050565b5f61105c61105761105284611039565b610c2d565b610a79565b9050919050565b61106c81611042565b82525050565b61107b81610a79565b82525050565b5f6040820190506110945f830185611063565b6110a16020830184611072565b9392505050565b5f8115159050919050565b6110bc816110a8565b82525050565b5f6020820190506110d55f8301846110b3565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61111282610a79565b915061111d83610a79565b92508261112d5761112c6110db565b5b828204905092915050565b5f61114282610a79565b915061114d83610a79565b925082820390508181111561116557611164610e46565b5b92915050565b5f61117582610a79565b915061118083610a79565b925082820190508082111561119857611197610e46565b5b92915050565b5f6060820190506111b15f830186610e1e565b6111be6020830185611072565b6111cb6040830184611072565b949350505050565b5f6020820190506111e65f830184611072565b92915050565b6119ed806111f95f395ff3fe608060405234801561000f575f5ffd5b5060043610610171575f3560e01c8063751fd179116100dc578063a071dcf411610095578063c4081a4c1161006f578063c4081a4c14610419578063dd62ed3e14610435578063f0f4426014610465578063f2fde38b1461048157610171565b8063a071dcf4146103ad578063a9059cbb146103cb578063bc063e1a146103fb57610171565b8063751fd1791461030f5780638456cb591461032b5780638da5cb5b14610335578063928286711461035357806395d89b411461037157806399f3bc9a1461038f57610171565b80633f4ba83a1161012e5780633f4ba83a1461025f578063483a9310146102695780635c975abb1461029957806361d027b3146102b757806370a08231146102d5578063715018a61461030557610171565b806306fdde0314610175578063095ea7b31461019357806318160ddd146101c357806323b872dd146101e1578063313ce567146102115780633f4218e01461022f575b5f5ffd5b61017d61049d565b60405161018a91906114db565b60405180910390f35b6101ad60048036038101906101a8919061158c565b61052d565b6040516101ba91906115e4565b60405180910390f35b6101cb61054f565b6040516101d8919061160c565b60405180910390f35b6101fb60048036038101906101f69190611625565b610558565b60405161020891906115e4565b60405180910390f35b610219610586565b6040516102269190611690565b60405180910390f35b610249600480360381019061024491906116a9565b61058e565b60405161025691906115e4565b60405180910390f35b6102676105ab565b005b610283600480360381019061027e91906116d4565b6105bd565b604051610290919061160c565b60405180910390f35b6102a16105df565b6040516102ae91906115e4565b60405180910390f35b6102bf6105f4565b6040516102cc919061170e565b60405180910390f35b6102ef60048036038101906102ea91906116a9565b610619565b6040516102fc919061160c565b60405180910390f35b61030d61065e565b005b61032960048036038101906103249190611751565b610671565b005b61033361071f565b005b61033d610731565b60405161034a919061170e565b60405180910390f35b61035b61075a565b604051610368919061160c565b60405180910390f35b610379610762565b60405161038691906114db565b60405180910390f35b6103976107f2565b6040516103a4919061160c565b60405180910390f35b6103b56107fb565b6040516103c2919061160c565b60405180910390f35b6103e560048036038101906103e0919061158c565b610801565b6040516103f291906115e4565b60405180910390f35b610403610823565b604051610410919061160c565b60405180910390f35b610433600480360381019061042e91906116d4565b610828565b005b61044f600480360381019061044a919061178f565b6108b6565b60405161045c919061160c565b60405180910390f35b61047f600480360381019061047a91906116a9565b610938565b005b61049b600480360381019061049691906116a9565b610bae565b005b6060600380546104ac906117fa565b80601f01602080910402602001604051908101604052809291908181526020018280546104d8906117fa565b80156105235780601f106104fa57610100808354040283529160200191610523565b820191905f5260205f20905b81548152906001019060200180831161050657829003601f168201915b5050505050905090565b5f5f610537610c32565b9050610544818585610c39565b600191505092915050565b5f600254905090565b5f5f610562610c32565b905061056f858285610c4b565b61057a858585610cde565b60019150509392505050565b5f6012905090565b6008602052805f5260405f205f915054906101000a900460ff1681565b6105b3610ddb565b6105bb610e62565b565b5f60c8600754836105ce9190611857565b6105d891906118c5565b9050919050565b5f60055f9054906101000a900460ff16905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610666610ddb565b61066f5f610ec3565b565b610679610ddb565b8060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f8260405161071391906115e4565b60405180910390a25050565b610727610ddb565b61072f610f88565b565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60c8905090565b606060048054610771906117fa565b80601f016020809104026020016040519081016040528092919081815260200182805461079d906117fa565b80156107e85780601f106107bf576101008083540402835291602001916107e8565b820191905f5260205f20905b8154815290600101906020018083116107cb57829003601f168201915b5050505050905090565b5f600754905090565b60075481565b5f5f61080b610c32565b9050610818818585610cde565b600191505092915050565b60c881565b610830610ddb565b61271081111561086c576040517f5ba09ae000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6007549050816007819055507f2211abb4bbc4d80b7505c31b54d01d15ac6e33a42c59540d309d89daf759063a81836040516108aa9291906118f5565b60405180910390a15050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610940610ddb565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109a5576040517fcfe2ea6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a60405160405180910390a38073ffffffffffffffffffffffffffffffffffffffff167f69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f5f604051610b5391906115e4565b60405180910390a28173ffffffffffffffffffffffffffffffffffffffff167f69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f6001604051610ba291906115e4565b60405180910390a25050565b610bb6610ddb565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c26575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c1d919061170e565b60405180910390fd5b610c2f81610ec3565b50565b5f33905090565b610c468383836001610fea565b505050565b5f610c5684846108b6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610cd85781811015610cc9578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610cc09392919061191c565b60405180910390fd5b610cd784848484035f610fea565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610d4657505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15610dca575f6007541115610dc9575f606460075483610d669190611857565b610d7091906118c5565b90505f811115610dc757610da68460065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836111b9565b5f8183610db39190611951565b9050610dc08585836111b9565b5050610dd6565b505b5b610dd58383836111b9565b5b505050565b610de3610c32565b73ffffffffffffffffffffffffffffffffffffffff16610e01610731565b73ffffffffffffffffffffffffffffffffffffffff1614610e6057610e24610c32565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e57919061170e565b60405180910390fd5b565b610e6a6111d1565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610eac610c32565b604051610eb9919061170e565b60405180910390a1565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f90611211565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fd3610c32565b604051610fe0919061170e565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361105a575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611051919061170e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110ca575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110c1919061170e565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156111b3578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111aa919061160c565b60405180910390a35b50505050565b6111c1611211565b6111cc838383611252565b505050565b6111d96105df565b61120f576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6112196105df565b15611250576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112a2578060025f8282546112969190611984565b92505081905550611370565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561132b578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016113229392919061191c565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113b7578060025f8282540392505081905550611401565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161145e919061160c565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6114ad8261146b565b6114b78185611475565b93506114c7818560208601611485565b6114d081611493565b840191505092915050565b5f6020820190508181035f8301526114f381846114a3565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611528826114ff565b9050919050565b6115388161151e565b8114611542575f5ffd5b50565b5f813590506115538161152f565b92915050565b5f819050919050565b61156b81611559565b8114611575575f5ffd5b50565b5f8135905061158681611562565b92915050565b5f5f604083850312156115a2576115a16114fb565b5b5f6115af85828601611545565b92505060206115c085828601611578565b9150509250929050565b5f8115159050919050565b6115de816115ca565b82525050565b5f6020820190506115f75f8301846115d5565b92915050565b61160681611559565b82525050565b5f60208201905061161f5f8301846115fd565b92915050565b5f5f5f6060848603121561163c5761163b6114fb565b5b5f61164986828701611545565b935050602061165a86828701611545565b925050604061166b86828701611578565b9150509250925092565b5f60ff82169050919050565b61168a81611675565b82525050565b5f6020820190506116a35f830184611681565b92915050565b5f602082840312156116be576116bd6114fb565b5b5f6116cb84828501611545565b91505092915050565b5f602082840312156116e9576116e86114fb565b5b5f6116f684828501611578565b91505092915050565b6117088161151e565b82525050565b5f6020820190506117215f8301846116ff565b92915050565b611730816115ca565b811461173a575f5ffd5b50565b5f8135905061174b81611727565b92915050565b5f5f60408385031215611767576117666114fb565b5b5f61177485828601611545565b92505060206117858582860161173d565b9150509250929050565b5f5f604083850312156117a5576117a46114fb565b5b5f6117b285828601611545565b92505060206117c385828601611545565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061181157607f821691505b602082108103611824576118236117cd565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61186182611559565b915061186c83611559565b925082820261187a81611559565b915082820484148315176118915761189061182a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6118cf82611559565b91506118da83611559565b9250826118ea576118e9611898565b5b828204905092915050565b5f6040820190506119085f8301856115fd565b61191560208301846115fd565b9392505050565b5f60608201905061192f5f8301866116ff565b61193c60208301856115fd565b61194960408301846115fd565b949350505050565b5f61195b82611559565b915061196683611559565b925082820390508181111561197e5761197d61182a565b5b92915050565b5f61198e82611559565b915061199983611559565b92508282019050808211156119b1576119b061182a565b5b9291505056fea2646970667358221220ce3efa2bb519c0daf5a6b7beb365e06dc3c093a9fa7b1babc1b5000f6fb2787264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2BE6 CODESIZE SUB DUP1 PUSH2 0x2BE6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST CALLER DUP5 DUP5 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0xD4F JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0xD4F JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5 DUP2 PUSH2 0x3D8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFE2EA6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC8 DUP2 GT ISZERO PUSH2 0x176 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5BA09AE000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x29E CALLER PUSH2 0x279 PUSH2 0x49D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x285 SWAP2 SWAP1 PUSH2 0xFAE JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0x4A5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4AB5BE82436D353E61CA18726E984E561F5C1CC7C6D38B29D2553C790434705A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0x2211ABB4BBC4D80B7505C31B54D01D15AC6E33A42C59540D309D89DAF759063A PUSH0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x329 SWAP3 SWAP2 SWAP1 PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x69E34A174B4A0CCE59950C4C852317E9797BDCAE125FBF8B5DD8B4311384412F PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x69E34A174B4A0CCE59950C4C852317E9797BDCAE125FBF8B5DD8B4311384412F PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x10C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0x11EC JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x515 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50C SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x526 PUSH0 DUP4 DUP4 PUSH2 0x52A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x592 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x622 JUMPI PUSH0 PUSH1 0x7 SLOAD GT ISZERO PUSH2 0x621 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP4 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x61F JUMPI PUSH2 0x5F8 DUP5 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x639 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x605 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST SWAP1 POP PUSH2 0x618 DUP6 DUP6 DUP4 PUSH2 0x639 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x634 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH2 0x633 DUP4 DUP4 DUP4 PUSH2 0x639 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x647 PUSH2 0x65D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x658 DUP4 DUP4 DUP4 PUSH2 0x6A4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x66B PUSH2 0x8BD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x7C2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x77D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x774 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x809 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x853 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x8B0 SWAP2 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x931 DUP3 PUSH2 0x8EB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x950 JUMPI PUSH2 0x94F PUSH2 0x8FB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x962 PUSH2 0x8D2 JUMP JUMPDEST SWAP1 POP PUSH2 0x96E DUP3 DUP3 PUSH2 0x928 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x98D JUMPI PUSH2 0x98C PUSH2 0x8FB JUMP JUMPDEST JUMPDEST PUSH2 0x996 DUP3 PUSH2 0x8EB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9C3 PUSH2 0x9BE DUP5 PUSH2 0x973 JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x9DF JUMPI PUSH2 0x9DE PUSH2 0x8E7 JUMP JUMPDEST JUMPDEST PUSH2 0x9EA DUP5 DUP3 DUP6 PUSH2 0x9A3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA06 JUMPI PUSH2 0xA05 PUSH2 0x8E3 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xA16 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x9B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA48 DUP3 PUSH2 0xA1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA58 DUP2 PUSH2 0xA3E JUMP JUMPDEST DUP2 EQ PUSH2 0xA62 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA73 DUP2 PUSH2 0xA4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA8B DUP2 PUSH2 0xA79 JUMP JUMPDEST DUP2 EQ PUSH2 0xA95 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xAA6 DUP2 PUSH2 0xA82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xAC4 JUMPI PUSH2 0xAC3 PUSH2 0x8DB JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAE1 JUMPI PUSH2 0xAE0 PUSH2 0x8DF JUMP JUMPDEST JUMPDEST PUSH2 0xAED DUP8 DUP3 DUP9 ADD PUSH2 0x9F2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB0E JUMPI PUSH2 0xB0D PUSH2 0x8DF JUMP JUMPDEST JUMPDEST PUSH2 0xB1A DUP8 DUP3 DUP9 ADD PUSH2 0x9F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xB2B DUP8 DUP3 DUP9 ADD PUSH2 0xA65 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xB3C DUP8 DUP3 DUP9 ADD PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xB96 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBA9 JUMPI PUSH2 0xBA8 PUSH2 0xB52 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xC0B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0xC15 DUP7 DUP4 PUSH2 0xBD0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC50 PUSH2 0xC4B PUSH2 0xC46 DUP5 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0xC2D JUMP JUMPDEST PUSH2 0xA79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC69 DUP4 PUSH2 0xC36 JUMP JUMPDEST PUSH2 0xC7D PUSH2 0xC75 DUP3 PUSH2 0xC57 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xBDC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC94 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0xC9F DUP2 DUP5 DUP5 PUSH2 0xC60 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCC2 JUMPI PUSH2 0xCB7 PUSH0 DUP3 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xCA5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xCD8 DUP2 PUSH2 0xBAF JUMP JUMPDEST PUSH2 0xCE1 DUP5 PUSH2 0xBC1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xCF0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xD04 PUSH2 0xCFC DUP6 PUSH2 0xBC1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xCA4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD27 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xD0C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD3F DUP4 DUP4 PUSH2 0xD18 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD58 DUP3 PUSH2 0xB48 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD71 JUMPI PUSH2 0xD70 PUSH2 0x8FB JUMP JUMPDEST JUMPDEST PUSH2 0xD7B DUP3 SLOAD PUSH2 0xB7F JUMP JUMPDEST PUSH2 0xD86 DUP3 DUP3 DUP6 PUSH2 0xCC6 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xDB7 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xDA5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xDAF DUP6 DUP3 PUSH2 0xD34 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xDC5 DUP7 PUSH2 0xBAF JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xDEC JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDC7 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xE09 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xE05 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xD18 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE27 DUP2 PUSH2 0xA3E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE40 PUSH0 DUP4 ADD DUP5 PUSH2 0xE1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xEC8 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xEA4 JUMPI PUSH2 0xEA3 PUSH2 0xE46 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xEB3 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xEC1 DUP6 PUSH2 0xE73 JUMP JUMPDEST SWAP5 POP PUSH2 0xE88 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xEE0 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xF9B JUMP JUMPDEST DUP2 PUSH2 0xEED JUMPI PUSH0 SWAP1 POP PUSH2 0xF9B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xF03 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xF0D JUMPI PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xF9B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xF1F JUMPI PUSH2 0xF1E PUSH2 0xE46 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xF36 JUMPI PUSH2 0xF35 PUSH2 0xE46 JUMP JUMPDEST JUMPDEST POP PUSH2 0xF9B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xF71 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xF6C JUMPI PUSH2 0xF6B PUSH2 0xE46 JUMP JUMPDEST JUMPDEST PUSH2 0xF9B JUMP JUMPDEST PUSH2 0xF7E DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xE7F JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xF95 JUMPI PUSH2 0xF94 PUSH2 0xE46 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFB8 DUP3 PUSH2 0xA79 JUMP JUMPDEST SWAP2 POP PUSH2 0xFC3 DUP4 PUSH2 0xFA2 JUMP JUMPDEST SWAP3 POP PUSH2 0xFF0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xED1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1002 DUP3 PUSH2 0xA79 JUMP JUMPDEST SWAP2 POP PUSH2 0x100D DUP4 PUSH2 0xA79 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x101B DUP2 PUSH2 0xA79 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1032 JUMPI PUSH2 0x1031 PUSH2 0xE46 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x105C PUSH2 0x1057 PUSH2 0x1052 DUP5 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0xC2D JUMP JUMPDEST PUSH2 0xA79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106C DUP2 PUSH2 0x1042 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x107B DUP2 PUSH2 0xA79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1094 PUSH0 DUP4 ADD DUP6 PUSH2 0x1063 JUMP JUMPDEST PUSH2 0x10A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1072 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10BC DUP2 PUSH2 0x10A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10D5 PUSH0 DUP4 ADD DUP5 PUSH2 0x10B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1112 DUP3 PUSH2 0xA79 JUMP JUMPDEST SWAP2 POP PUSH2 0x111D DUP4 PUSH2 0xA79 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x112D JUMPI PUSH2 0x112C PUSH2 0x10DB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1142 DUP3 PUSH2 0xA79 JUMP JUMPDEST SWAP2 POP PUSH2 0x114D DUP4 PUSH2 0xA79 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1165 JUMPI PUSH2 0x1164 PUSH2 0xE46 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1175 DUP3 PUSH2 0xA79 JUMP JUMPDEST SWAP2 POP PUSH2 0x1180 DUP4 PUSH2 0xA79 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1198 JUMPI PUSH2 0x1197 PUSH2 0xE46 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11B1 PUSH0 DUP4 ADD DUP7 PUSH2 0xE1E JUMP JUMPDEST PUSH2 0x11BE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x11CB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1072 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1072 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19ED DUP1 PUSH2 0x11F9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x751FD179 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA071DCF4 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC4081A4C GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC4081A4C EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x481 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xA071DCF4 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x3FB JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x751FD179 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x92828671 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x99F3BC9A EQ PUSH2 0x38F JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x483A9310 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x305 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x3F4218E0 EQ PUSH2 0x22F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0x5AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH2 0x65E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x333 PUSH2 0x71F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33D PUSH2 0x731 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x397 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0xBAE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4AC SWAP1 PUSH2 0x17FA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D8 SWAP1 PUSH2 0x17FA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x523 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x523 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x506 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x537 PUSH2 0xC32 JUMP JUMPDEST SWAP1 POP PUSH2 0x544 DUP2 DUP6 DUP6 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x562 PUSH2 0xC32 JUMP JUMPDEST SWAP1 POP PUSH2 0x56F DUP6 DUP3 DUP6 PUSH2 0xC4B JUMP JUMPDEST PUSH2 0x57A DUP6 DUP6 DUP6 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x5B3 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x5BB PUSH2 0xE62 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0xC8 PUSH1 0x7 SLOAD DUP4 PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x1857 JUMP JUMPDEST PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x666 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x66F PUSH0 PUSH2 0xEC3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x679 PUSH2 0xDDB JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x69E34A174B4A0CCE59950C4C852317E9797BDCAE125FBF8B5DD8B4311384412F DUP3 PUSH1 0x40 MLOAD PUSH2 0x713 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x727 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x72F PUSH2 0xF88 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xC8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x771 SWAP1 PUSH2 0x17FA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x79D SWAP1 PUSH2 0x17FA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x80B PUSH2 0xC32 JUMP JUMPDEST SWAP1 POP PUSH2 0x818 DUP2 DUP6 DUP6 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC8 DUP2 JUMP JUMPDEST PUSH2 0x830 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH32 0x5BA09AE000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP DUP2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0x2211ABB4BBC4D80B7505C31B54D01D15AC6E33A42C59540D309D89DAF759063A DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8AA SWAP3 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x940 PUSH2 0xDDB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFE2EA6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4AB5BE82436D353E61CA18726E984E561F5C1CC7C6D38B29D2553C790434705A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x69E34A174B4A0CCE59950C4C852317E9797BDCAE125FBF8B5DD8B4311384412F PUSH0 PUSH1 0x40 MLOAD PUSH2 0xB53 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x69E34A174B4A0CCE59950C4C852317E9797BDCAE125FBF8B5DD8B4311384412F PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xBA2 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xBB6 PUSH2 0xDDB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC26 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1D SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC2F DUP2 PUSH2 0xEC3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC46 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC56 DUP5 DUP5 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xCD8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCC9 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x191C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCD7 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xFEA JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xD46 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xDCA JUMPI PUSH0 PUSH1 0x7 SLOAD GT ISZERO PUSH2 0xDC9 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP4 PUSH2 0xD66 SWAP2 SWAP1 PUSH2 0x1857 JUMP JUMPDEST PUSH2 0xD70 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xDC7 JUMPI PUSH2 0xDA6 DUP5 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x11B9 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xDB3 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC0 DUP6 DUP6 DUP4 PUSH2 0x11B9 JUMP JUMPDEST POP POP PUSH2 0xDD6 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH2 0xDD5 DUP4 DUP4 DUP4 PUSH2 0x11B9 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDE3 PUSH2 0xC32 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE01 PUSH2 0x731 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE60 JUMPI PUSH2 0xE24 PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE57 SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE6A PUSH2 0x11D1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xEAC PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB9 SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF90 PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xFD3 PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE0 SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x105A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1051 SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C1 SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x11B3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11AA SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x11C1 PUSH2 0x1211 JUMP JUMPDEST PUSH2 0x11CC DUP4 DUP4 DUP4 PUSH2 0x1252 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x11D9 PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x120F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1219 PUSH2 0x5DF JUMP JUMPDEST ISZERO PUSH2 0x1250 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1296 SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1370 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x132B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1322 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x191C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1401 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x145E SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14AD DUP3 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x14B7 DUP2 DUP6 PUSH2 0x1475 JUMP JUMPDEST SWAP4 POP PUSH2 0x14C7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x14D0 DUP2 PUSH2 0x1493 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14F3 DUP2 DUP5 PUSH2 0x14A3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1528 DUP3 PUSH2 0x14FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1538 DUP2 PUSH2 0x151E JUMP JUMPDEST DUP2 EQ PUSH2 0x1542 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1553 DUP2 PUSH2 0x152F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x156B DUP2 PUSH2 0x1559 JUMP JUMPDEST DUP2 EQ PUSH2 0x1575 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1586 DUP2 PUSH2 0x1562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A2 JUMPI PUSH2 0x15A1 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15AF DUP6 DUP3 DUP7 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15C0 DUP6 DUP3 DUP7 ADD PUSH2 0x1578 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DE DUP2 PUSH2 0x15CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F7 PUSH0 DUP4 ADD DUP5 PUSH2 0x15D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1606 DUP2 PUSH2 0x1559 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x161F PUSH0 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x163C JUMPI PUSH2 0x163B PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1649 DUP7 DUP3 DUP8 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x165A DUP7 DUP3 DUP8 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x166B DUP7 DUP3 DUP8 ADD PUSH2 0x1578 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168A DUP2 PUSH2 0x1675 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1681 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16BE JUMPI PUSH2 0x16BD PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16CB DUP5 DUP3 DUP6 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E9 JUMPI PUSH2 0x16E8 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16F6 DUP5 DUP3 DUP6 ADD PUSH2 0x1578 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1708 DUP2 PUSH2 0x151E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1721 PUSH0 DUP4 ADD DUP5 PUSH2 0x16FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1730 DUP2 PUSH2 0x15CA JUMP JUMPDEST DUP2 EQ PUSH2 0x173A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x174B DUP2 PUSH2 0x1727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1767 JUMPI PUSH2 0x1766 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1774 DUP6 DUP3 DUP7 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1785 DUP6 DUP3 DUP7 ADD PUSH2 0x173D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17A5 JUMPI PUSH2 0x17A4 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17B2 DUP6 DUP3 DUP7 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17C3 DUP6 DUP3 DUP7 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1811 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1824 JUMPI PUSH2 0x1823 PUSH2 0x17CD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1861 DUP3 PUSH2 0x1559 JUMP JUMPDEST SWAP2 POP PUSH2 0x186C DUP4 PUSH2 0x1559 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x187A DUP2 PUSH2 0x1559 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1891 JUMPI PUSH2 0x1890 PUSH2 0x182A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18CF DUP3 PUSH2 0x1559 JUMP JUMPDEST SWAP2 POP PUSH2 0x18DA DUP4 PUSH2 0x1559 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x18EA JUMPI PUSH2 0x18E9 PUSH2 0x1898 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1908 PUSH0 DUP4 ADD DUP6 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x1915 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x192F PUSH0 DUP4 ADD DUP7 PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x193C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x1949 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x195B DUP3 PUSH2 0x1559 JUMP JUMPDEST SWAP2 POP PUSH2 0x1966 DUP4 PUSH2 0x1559 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x197E JUMPI PUSH2 0x197D PUSH2 0x182A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x198E DUP3 PUSH2 0x1559 JUMP JUMPDEST SWAP2 POP PUSH2 0x1999 DUP4 PUSH2 0x1559 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19B1 JUMPI PUSH2 0x19B0 PUSH2 0x182A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE RETURNDATACOPY STATICCALL 0x2B 0xB5 NOT 0xC0 0xDA CREATE2 0xA6 0xB7 0xBE 0xB3 PUSH6 0xE06DC3C093A9 STATICCALL PUSH28 0x1BABC1B5000F6FB2787264736F6C634300081E003300000000000000 ",
							"sourceMap": "414:4990:8:-:0;;;1203:859;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1374:10;1342:5;1349:7;1656:5:2;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1425:1:8::2;1404:23;;:9;:23;;::::0;1400:60:::2;;1436:24;;;;;;;;;;;;;;1400:60;666:3;1474:7;:17;1470:45;;;1500:15;;;;;;;;;;;;;;1470:45;1536:9;1525:8;;:20;;;;;;;;;;;;;;;;;;1564:7;1555:6;:16;;;;1672:4;1646:11;:23;1658:10;1646:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1711:4;1686:11;:22;1698:9;1686:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1807:43;1813:10;1839;:8;;;:10;;:::i;:::-;1835:2;:14;;;;:::i;:::-;1825:7;:24;;;;:::i;:::-;1807:5;;;:43;;:::i;:::-;1902:9;1874:38;;1898:1;1874:38;;;;;;;;;;;;1927:25;1941:1;1944:7;1927:25;;;;;;;:::i;:::-;;;;;;;;1987:10;1967:37;;;1999:4;1967:37;;;;;;:::i;:::-;;;;;;;;2039:9;2019:36;;;2050:4;2019:36;;;;;;:::i;:::-;;;;;;;;1203:859:::0;;;;414:4990;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2688:82:2:-;2737:5;2761:2;2754:9;;2688:82;:::o;7362:208::-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;;;:35;;:::i;:::-;7362:208;;:::o;4861:541:8:-;4990:1;4974:18;;:4;:18;;;;:38;;;;;5010:1;4996:16;;:2;:16;;;;4974:38;4970:385;;;5041:1;5032:6;;:10;5028:317;;;5062:11;5096:3;5086:6;;5077;:15;;;;:::i;:::-;5076:23;;;;:::i;:::-;5062:37;;5127:1;5121:3;:7;5117:214;;;5152:34;5166:4;5172:8;;;;;;;;;;;5182:3;5152:13;;;:34;;:::i;:::-;5208:11;5231:3;5222:6;:12;;;;:::i;:::-;5208:26;;5256:28;5270:4;5276:2;5280:3;5256:13;;;:28;;:::i;:::-;5306:7;;;;5117:214;5044:301;5028:317;4970:385;5364:31;5378:4;5384:2;5388:6;5364:13;;;:31;;:::i;:::-;4861:541;;;;:::o;1113:145:4:-;1350:19:7;:17;;;:19;;:::i;:::-;1221:30:4::1;1235:4;1241:2;1245:5;1221:13;;;:30;;:::i;:::-;1113:145:::0;;;:::o;1878:128:7:-;1943:8;:6;;;:8;;:::i;:::-;1939:61;;;1974:15;;;;;;;;;;;;;;1939:61;1878:128::o;5912:1107:2:-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;1726:84:7:-;1773:4;1796:7;;;;;;;;;;;1789:14;;1726:84;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:126::-;2607:7;2647:42;2640:5;2636:54;2625:65;;2570:126;;;:::o;2702:96::-;2739:7;2768:24;2786:5;2768:24;:::i;:::-;2757:35;;2702:96;;;:::o;2804:122::-;2877:24;2895:5;2877:24;:::i;:::-;2870:5;2867:35;2857:63;;2916:1;2913;2906:12;2857:63;2804:122;:::o;2932:143::-;2989:5;3020:6;3014:13;3005:22;;3036:33;3063:5;3036:33;:::i;:::-;2932:143;;;;:::o;3081:77::-;3118:7;3147:5;3136:16;;3081:77;;;:::o;3164:122::-;3237:24;3255:5;3237:24;:::i;:::-;3230:5;3227:35;3217:63;;3276:1;3273;3266:12;3217:63;3164:122;:::o;3292:143::-;3349:5;3380:6;3374:13;3365:22;;3396:33;3423:5;3396:33;:::i;:::-;3292:143;;;;:::o;3441:1166::-;3558:6;3566;3574;3582;3631:3;3619:9;3610:7;3606:23;3602:33;3599:120;;;3638:79;;:::i;:::-;3599:120;3779:1;3768:9;3764:17;3758:24;3809:18;3801:6;3798:30;3795:117;;;3831:79;;:::i;:::-;3795:117;3936:74;4002:7;3993:6;3982:9;3978:22;3936:74;:::i;:::-;3926:84;;3729:291;4080:2;4069:9;4065:18;4059:25;4111:18;4103:6;4100:30;4097:117;;;4133:79;;:::i;:::-;4097:117;4238:74;4304:7;4295:6;4284:9;4280:22;4238:74;:::i;:::-;4228:84;;4030:292;4361:2;4387:64;4443:7;4434:6;4423:9;4419:22;4387:64;:::i;:::-;4377:74;;4332:129;4500:2;4526:64;4582:7;4573:6;4562:9;4558:22;4526:64;:::i;:::-;4516:74;;4471:129;3441:1166;;;;;;;:::o;4613:99::-;4665:6;4699:5;4693:12;4683:22;;4613:99;;;:::o;4718:180::-;4766:77;4763:1;4756:88;4863:4;4860:1;4853:15;4887:4;4884:1;4877:15;4904:320;4948:6;4985:1;4979:4;4975:12;4965:22;;5032:1;5026:4;5022:12;5053:18;5043:81;;5109:4;5101:6;5097:17;5087:27;;5043:81;5171:2;5163:6;5160:14;5140:18;5137:38;5134:84;;5190:18;;:::i;:::-;5134:84;4955:269;4904:320;;;:::o;5230:141::-;5279:4;5302:3;5294:11;;5325:3;5322:1;5315:14;5359:4;5356:1;5346:18;5338:26;;5230:141;;;:::o;5377:93::-;5414:6;5461:2;5456;5449:5;5445:14;5441:23;5431:33;;5377:93;;;:::o;5476:107::-;5520:8;5570:5;5564:4;5560:16;5539:37;;5476:107;;;;:::o;5589:393::-;5658:6;5708:1;5696:10;5692:18;5731:97;5761:66;5750:9;5731:97;:::i;:::-;5849:39;5879:8;5868:9;5849:39;:::i;:::-;5837:51;;5921:4;5917:9;5910:5;5906:21;5897:30;;5970:4;5960:8;5956:19;5949:5;5946:30;5936:40;;5665:317;;5589:393;;;;;:::o;5988:60::-;6016:3;6037:5;6030:12;;5988:60;;;:::o;6054:142::-;6104:9;6137:53;6155:34;6164:24;6182:5;6164:24;:::i;:::-;6155:34;:::i;:::-;6137:53;:::i;:::-;6124:66;;6054:142;;;:::o;6202:75::-;6245:3;6266:5;6259:12;;6202:75;;;:::o;6283:269::-;6393:39;6424:7;6393:39;:::i;:::-;6454:91;6503:41;6527:16;6503:41;:::i;:::-;6495:6;6488:4;6482:11;6454:91;:::i;:::-;6448:4;6441:105;6359:193;6283:269;;;:::o;6558:73::-;6603:3;6624:1;6617:8;;6558:73;:::o;6637:189::-;6714:32;;:::i;:::-;6755:65;6813:6;6805;6799:4;6755:65;:::i;:::-;6690:136;6637:189;;:::o;6832:186::-;6892:120;6909:3;6902:5;6899:14;6892:120;;;6963:39;7000:1;6993:5;6963:39;:::i;:::-;6936:1;6929:5;6925:13;6916:22;;6892:120;;;6832:186;;:::o;7024:543::-;7125:2;7120:3;7117:11;7114:446;;;7159:38;7191:5;7159:38;:::i;:::-;7243:29;7261:10;7243:29;:::i;:::-;7233:8;7229:44;7426:2;7414:10;7411:18;7408:49;;;7447:8;7432:23;;7408:49;7470:80;7526:22;7544:3;7526:22;:::i;:::-;7516:8;7512:37;7499:11;7470:80;:::i;:::-;7129:431;;7114:446;7024:543;;;:::o;7573:117::-;7627:8;7677:5;7671:4;7667:16;7646:37;;7573:117;;;;:::o;7696:169::-;7740:6;7773:51;7821:1;7817:6;7809:5;7806:1;7802:13;7773:51;:::i;:::-;7769:56;7854:4;7848;7844:15;7834:25;;7747:118;7696:169;;;;:::o;7870:295::-;7946:4;8092:29;8117:3;8111:4;8092:29;:::i;:::-;8084:37;;8154:3;8151:1;8147:11;8141:4;8138:21;8130:29;;7870:295;;;;:::o;8170:1395::-;8287:37;8320:3;8287:37;:::i;:::-;8389:18;8381:6;8378:30;8375:56;;;8411:18;;:::i;:::-;8375:56;8455:38;8487:4;8481:11;8455:38;:::i;:::-;8540:67;8600:6;8592;8586:4;8540:67;:::i;:::-;8634:1;8658:4;8645:17;;8690:2;8682:6;8679:14;8707:1;8702:618;;;;9364:1;9381:6;9378:77;;;9430:9;9425:3;9421:19;9415:26;9406:35;;9378:77;9481:67;9541:6;9534:5;9481:67;:::i;:::-;9475:4;9468:81;9337:222;8672:887;;8702:618;8754:4;8750:9;8742:6;8738:22;8788:37;8820:4;8788:37;:::i;:::-;8847:1;8861:208;8875:7;8872:1;8869:14;8861:208;;;8954:9;8949:3;8945:19;8939:26;8931:6;8924:42;9005:1;8997:6;8993:14;8983:24;;9052:2;9041:9;9037:18;9024:31;;8898:4;8895:1;8891:12;8886:17;;8861:208;;;9097:6;9088:7;9085:19;9082:179;;;9155:9;9150:3;9146:19;9140:26;9198:48;9240:4;9232:6;9228:17;9217:9;9198:48;:::i;:::-;9190:6;9183:64;9105:156;9082:179;9307:1;9303;9295:6;9291:14;9287:22;9281:4;9274:36;8709:611;;;8672:887;;8262:1303;;;8170:1395;;:::o;9571:118::-;9658:24;9676:5;9658:24;:::i;:::-;9653:3;9646:37;9571:118;;:::o;9695:222::-;9788:4;9826:2;9815:9;9811:18;9803:26;;9839:71;9907:1;9896:9;9892:17;9883:6;9839:71;:::i;:::-;9695:222;;;;:::o;9923:180::-;9971:77;9968:1;9961:88;10068:4;10065:1;10058:15;10092:4;10089:1;10082:15;10109:102;10151:8;10198:5;10195:1;10191:13;10170:34;;10109:102;;;:::o;10217:848::-;10278:5;10285:4;10309:6;10300:15;;10333:5;10324:14;;10347:712;10368:1;10358:8;10355:15;10347:712;;;10463:4;10458:3;10454:14;10448:4;10445:24;10442:50;;;10472:18;;:::i;:::-;10442:50;10522:1;10512:8;10508:16;10505:451;;;10937:4;10930:5;10926:16;10917:25;;10505:451;10987:4;10981;10977:15;10969:23;;11017:32;11040:8;11017:32;:::i;:::-;11005:44;;10347:712;;;10217:848;;;;;;;:::o;11071:1073::-;11125:5;11316:8;11306:40;;11337:1;11328:10;;11339:5;;11306:40;11365:4;11355:36;;11382:1;11373:10;;11384:5;;11355:36;11451:4;11499:1;11494:27;;;;11535:1;11530:191;;;;11444:277;;11494:27;11512:1;11503:10;;11514:5;;;11530:191;11575:3;11565:8;11562:17;11559:43;;;11582:18;;:::i;:::-;11559:43;11631:8;11628:1;11624:16;11615:25;;11666:3;11659:5;11656:14;11653:40;;;11673:18;;:::i;:::-;11653:40;11706:5;;;11444:277;;11830:2;11820:8;11817:16;11811:3;11805:4;11802:13;11798:36;11780:2;11770:8;11767:16;11762:2;11756:4;11753:12;11749:35;11733:111;11730:246;;;11886:8;11880:4;11876:19;11867:28;;11921:3;11914:5;11911:14;11908:40;;;11928:18;;:::i;:::-;11908:40;11961:5;;11730:246;12001:42;12039:3;12029:8;12023:4;12020:1;12001:42;:::i;:::-;11986:57;;;;12075:4;12070:3;12066:14;12059:5;12056:25;12053:51;;;12084:18;;:::i;:::-;12053:51;12133:4;12126:5;12122:16;12113:25;;11071:1073;;;;;;:::o;12150:86::-;12185:7;12225:4;12218:5;12214:16;12203:27;;12150:86;;;:::o;12242:281::-;12300:5;12324:23;12342:4;12324:23;:::i;:::-;12316:31;;12368:25;12384:8;12368:25;:::i;:::-;12356:37;;12412:104;12449:66;12439:8;12433:4;12412:104;:::i;:::-;12403:113;;12242:281;;;;:::o;12529:410::-;12569:7;12592:20;12610:1;12592:20;:::i;:::-;12587:25;;12626:20;12644:1;12626:20;:::i;:::-;12621:25;;12681:1;12678;12674:9;12703:30;12721:11;12703:30;:::i;:::-;12692:41;;12882:1;12873:7;12869:15;12866:1;12863:22;12843:1;12836:9;12816:83;12793:139;;12912:18;;:::i;:::-;12793:139;12577:362;12529:410;;;;:::o;12945:85::-;12990:7;13019:5;13008:16;;12945:85;;;:::o;13036:158::-;13094:9;13127:61;13145:42;13154:32;13180:5;13154:32;:::i;:::-;13145:42;:::i;:::-;13127:61;:::i;:::-;13114:74;;13036:158;;;:::o;13200:147::-;13295:45;13334:5;13295:45;:::i;:::-;13290:3;13283:58;13200:147;;:::o;13353:118::-;13440:24;13458:5;13440:24;:::i;:::-;13435:3;13428:37;13353:118;;:::o;13477:348::-;13606:4;13644:2;13633:9;13629:18;13621:26;;13657:79;13733:1;13722:9;13718:17;13709:6;13657:79;:::i;:::-;13746:72;13814:2;13803:9;13799:18;13790:6;13746:72;:::i;:::-;13477:348;;;;;:::o;13831:90::-;13865:7;13908:5;13901:13;13894:21;13883:32;;13831:90;;;:::o;13927:109::-;14008:21;14023:5;14008:21;:::i;:::-;14003:3;13996:34;13927:109;;:::o;14042:210::-;14129:4;14167:2;14156:9;14152:18;14144:26;;14180:65;14242:1;14231:9;14227:17;14218:6;14180:65;:::i;:::-;14042:210;;;;:::o;14258:180::-;14306:77;14303:1;14296:88;14403:4;14400:1;14393:15;14427:4;14424:1;14417:15;14444:185;14484:1;14501:20;14519:1;14501:20;:::i;:::-;14496:25;;14535:20;14553:1;14535:20;:::i;:::-;14530:25;;14574:1;14564:35;;14579:18;;:::i;:::-;14564:35;14621:1;14618;14614:9;14609:14;;14444:185;;;;:::o;14635:194::-;14675:4;14695:20;14713:1;14695:20;:::i;:::-;14690:25;;14729:20;14747:1;14729:20;:::i;:::-;14724:25;;14773:1;14770;14766:9;14758:17;;14797:1;14791:4;14788:11;14785:37;;;14802:18;;:::i;:::-;14785:37;14635:194;;;;:::o;14835:191::-;14875:3;14894:20;14912:1;14894:20;:::i;:::-;14889:25;;14928:20;14946:1;14928:20;:::i;:::-;14923:25;;14971:1;14968;14964:9;14957:16;;14992:3;14989:1;14986:10;14983:36;;;14999:18;;:::i;:::-;14983:36;14835:191;;;;:::o;15032:442::-;15181:4;15219:2;15208:9;15204:18;15196:26;;15232:71;15300:1;15289:9;15285:17;15276:6;15232:71;:::i;:::-;15313:72;15381:2;15370:9;15366:18;15357:6;15313:72;:::i;:::-;15395;15463:2;15452:9;15448:18;15439:6;15395:72;:::i;:::-;15032:442;;;;;;:::o;15480:222::-;15573:4;15611:2;15600:9;15596:18;15588:26;;15624:71;15692:1;15681:9;15677:17;15668:6;15624:71;:::i;:::-;15480:222;;;;:::o;414:4990:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_FEE_1097": {
									"entryPoint": 2083,
									"id": 1097,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 3129,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4074,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3547,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_949": {
									"entryPoint": 3122,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1058": {
									"entryPoint": 3976,
									"id": 1058,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1029": {
									"entryPoint": 4625,
									"id": 1029,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1042": {
									"entryPoint": 4561,
									"id": 1042,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_798": {
									"entryPoint": 3147,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3779,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_1074": {
									"entryPoint": 3682,
									"id": 1074,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1521": {
									"entryPoint": 3294,
									"id": 1521,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4690,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_910": {
									"entryPoint": 4537,
									"id": 910,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2230,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1325,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1561,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateTax_1443": {
									"entryPoint": 1469,
									"id": 1443,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 1414,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMaxFee_1418": {
									"entryPoint": 1882,
									"id": 1418,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTaxFeePercentage_1427": {
									"entryPoint": 2034,
									"id": 1427,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isFeeExempt_1101": {
									"entryPoint": 1422,
									"id": 1101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1181,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1841,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1342": {
									"entryPoint": 1823,
									"id": 1342,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1017": {
									"entryPoint": 1503,
									"id": 1017,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1630,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setFeeExemption_1333": {
									"entryPoint": 1649,
									"id": 1333,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTaxFee_1311": {
									"entryPoint": 2088,
									"id": 1311,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTreasury_1282": {
									"entryPoint": 2360,
									"id": 1282,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1890,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxFee_1094": {
									"entryPoint": 2043,
									"id": 1094,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 1359,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1409": {
									"entryPoint": 1368,
									"id": 1409,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2990,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1376": {
									"entryPoint": 2049,
									"id": 1376,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasury_1092": {
									"entryPoint": 1524,
									"id": 1092,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_1351": {
									"entryPoint": 1451,
									"id": 1351,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6428,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6389,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5253,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6186,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6296,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6093,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5371,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9654:9",
										"nodeType": "YulBlock",
										"src": "0:9654:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "208:73:9",
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nativeSrc": "218:19:9",
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nativeSrc": "218:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nativeSrc": "246:29:9",
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:9",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nativeSrc": "261:14:9",
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:9",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:9",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:9",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nativeSrc": "349:77:9",
													"nodeType": "YulBlock",
													"src": "349:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:9"
																},
																"nativeSrc": "360:23:9",
																"nodeType": "YulFunctionCall",
																"src": "360:23:9"
															},
															"nativeSrc": "360:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:9"
																		},
																		"nativeSrc": "399:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:9",
																		"nodeType": "YulLiteral",
																		"src": "417:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:9"
																},
																"nativeSrc": "392:27:9",
																"nodeType": "YulFunctionCall",
																"src": "392:27:9"
															},
															"nativeSrc": "392:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:9",
														"nodeType": "YulTypedName",
														"src": "331:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:9",
														"nodeType": "YulTypedName",
														"src": "336:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:9",
														"nodeType": "YulTypedName",
														"src": "341:6:9",
														"type": ""
													}
												],
												"src": "287:139:9"
											},
											{
												"body": {
													"nativeSrc": "480:54:9",
													"nodeType": "YulBlock",
													"src": "480:54:9",
													"statements": [
														{
															"nativeSrc": "490:38:9",
															"nodeType": "YulAssignment",
															"src": "490:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:9",
																				"nodeType": "YulLiteral",
																				"src": "515:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:9"
																		},
																		"nativeSrc": "504:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:9",
																				"nodeType": "YulLiteral",
																				"src": "524:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:9"
																		},
																		"nativeSrc": "520:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:9"
																},
																"nativeSrc": "500:28:9",
																"nodeType": "YulFunctionCall",
																"src": "500:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:9",
														"nodeType": "YulTypedName",
														"src": "463:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:9",
														"nodeType": "YulTypedName",
														"src": "473:6:9",
														"type": ""
													}
												],
												"src": "432:102:9"
											},
											{
												"body": {
													"nativeSrc": "632:285:9",
													"nodeType": "YulBlock",
													"src": "632:285:9",
													"statements": [
														{
															"nativeSrc": "642:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:9"
																},
																"nativeSrc": "656:39:9",
																"nodeType": "YulFunctionCall",
																"src": "656:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:9",
																	"nodeType": "YulTypedName",
																	"src": "646:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:9",
															"nodeType": "YulAssignment",
															"src": "704:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:9"
																},
																"nativeSrc": "711:71:9",
																"nodeType": "YulFunctionCall",
																"src": "711:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:9",
																				"nodeType": "YulLiteral",
																				"src": "837:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:9"
																		},
																		"nativeSrc": "826:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:9"
																},
																"nativeSrc": "791:65:9",
																"nodeType": "YulFunctionCall",
																"src": "791:65:9"
															},
															"nativeSrc": "791:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:9"
														},
														{
															"nativeSrc": "865:46:9",
															"nodeType": "YulAssignment",
															"src": "865:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:9"
																		},
																		"nativeSrc": "881:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:9"
																},
																"nativeSrc": "872:39:9",
																"nodeType": "YulFunctionCall",
																"src": "872:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:9",
														"nodeType": "YulTypedName",
														"src": "613:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:9",
														"nodeType": "YulTypedName",
														"src": "620:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:9",
														"nodeType": "YulTypedName",
														"src": "628:3:9",
														"type": ""
													}
												],
												"src": "540:377:9"
											},
											{
												"body": {
													"nativeSrc": "1041:195:9",
													"nodeType": "YulBlock",
													"src": "1041:195:9",
													"statements": [
														{
															"nativeSrc": "1051:26:9",
															"nodeType": "YulAssignment",
															"src": "1051:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:9"
																},
																"nativeSrc": "1059:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:9"
																		},
																		"nativeSrc": "1094:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:9"
																		},
																		"nativeSrc": "1113:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:9"
																},
																"nativeSrc": "1087:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:9"
															},
															"nativeSrc": "1087:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:9"
														},
														{
															"nativeSrc": "1143:86:9",
															"nodeType": "YulAssignment",
															"src": "1143:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:9"
																},
																"nativeSrc": "1151:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:9",
														"nodeType": "YulTypedName",
														"src": "1013:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:9",
														"nodeType": "YulTypedName",
														"src": "1025:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:9",
														"nodeType": "YulTypedName",
														"src": "1036:4:9",
														"type": ""
													}
												],
												"src": "923:313:9"
											},
											{
												"body": {
													"nativeSrc": "1282:35:9",
													"nodeType": "YulBlock",
													"src": "1282:35:9",
													"statements": [
														{
															"nativeSrc": "1292:19:9",
															"nodeType": "YulAssignment",
															"src": "1292:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:9"
																},
																"nativeSrc": "1302:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:9",
														"nodeType": "YulTypedName",
														"src": "1275:6:9",
														"type": ""
													}
												],
												"src": "1242:75:9"
											},
											{
												"body": {
													"nativeSrc": "1412:28:9",
													"nodeType": "YulBlock",
													"src": "1412:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:9"
																},
																"nativeSrc": "1422:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:9"
															},
															"nativeSrc": "1422:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:9"
											},
											{
												"body": {
													"nativeSrc": "1535:28:9",
													"nodeType": "YulBlock",
													"src": "1535:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:9"
																},
																"nativeSrc": "1545:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:9"
															},
															"nativeSrc": "1545:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:9"
											},
											{
												"body": {
													"nativeSrc": "1614:81:9",
													"nodeType": "YulBlock",
													"src": "1614:81:9",
													"statements": [
														{
															"nativeSrc": "1624:65:9",
															"nodeType": "YulAssignment",
															"src": "1624:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:9"
																},
																"nativeSrc": "1635:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:9",
														"nodeType": "YulTypedName",
														"src": "1596:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:9",
														"nodeType": "YulTypedName",
														"src": "1606:7:9",
														"type": ""
													}
												],
												"src": "1569:126:9"
											},
											{
												"body": {
													"nativeSrc": "1746:51:9",
													"nodeType": "YulBlock",
													"src": "1746:51:9",
													"statements": [
														{
															"nativeSrc": "1756:35:9",
															"nodeType": "YulAssignment",
															"src": "1756:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:9"
																},
																"nativeSrc": "1767:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:9",
														"nodeType": "YulTypedName",
														"src": "1728:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:9",
														"nodeType": "YulTypedName",
														"src": "1738:7:9",
														"type": ""
													}
												],
												"src": "1701:96:9"
											},
											{
												"body": {
													"nativeSrc": "1846:79:9",
													"nodeType": "YulBlock",
													"src": "1846:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:9",
																"nodeType": "YulBlock",
																"src": "1903:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:9"
																			},
																			"nativeSrc": "1905:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:9"
																		},
																		"nativeSrc": "1905:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:9"
																				},
																				"nativeSrc": "1876:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:9"
																		},
																		"nativeSrc": "1866:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:9"
																},
																"nativeSrc": "1859:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:9"
															},
															"nativeSrc": "1856:63:9",
															"nodeType": "YulIf",
															"src": "1856:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:9",
														"nodeType": "YulTypedName",
														"src": "1839:5:9",
														"type": ""
													}
												],
												"src": "1803:122:9"
											},
											{
												"body": {
													"nativeSrc": "1983:87:9",
													"nodeType": "YulBlock",
													"src": "1983:87:9",
													"statements": [
														{
															"nativeSrc": "1993:29:9",
															"nodeType": "YulAssignment",
															"src": "1993:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:9"
																},
																"nativeSrc": "2002:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:9"
																},
																"nativeSrc": "2031:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:9"
															},
															"nativeSrc": "2031:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:9",
														"nodeType": "YulTypedName",
														"src": "1961:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:9",
														"nodeType": "YulTypedName",
														"src": "1969:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:9",
														"nodeType": "YulTypedName",
														"src": "1977:5:9",
														"type": ""
													}
												],
												"src": "1931:139:9"
											},
											{
												"body": {
													"nativeSrc": "2121:32:9",
													"nodeType": "YulBlock",
													"src": "2121:32:9",
													"statements": [
														{
															"nativeSrc": "2131:16:9",
															"nodeType": "YulAssignment",
															"src": "2131:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:9",
																"nodeType": "YulIdentifier",
																"src": "2142:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:9",
														"nodeType": "YulTypedName",
														"src": "2103:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:9",
														"nodeType": "YulTypedName",
														"src": "2113:7:9",
														"type": ""
													}
												],
												"src": "2076:77:9"
											},
											{
												"body": {
													"nativeSrc": "2202:79:9",
													"nodeType": "YulBlock",
													"src": "2202:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:9",
																"nodeType": "YulBlock",
																"src": "2259:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:9"
																			},
																			"nativeSrc": "2261:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:9"
																		},
																		"nativeSrc": "2261:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:9"
																				},
																				"nativeSrc": "2232:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:9"
																		},
																		"nativeSrc": "2222:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:9"
																},
																"nativeSrc": "2215:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:9"
															},
															"nativeSrc": "2212:63:9",
															"nodeType": "YulIf",
															"src": "2212:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:9",
														"nodeType": "YulTypedName",
														"src": "2195:5:9",
														"type": ""
													}
												],
												"src": "2159:122:9"
											},
											{
												"body": {
													"nativeSrc": "2339:87:9",
													"nodeType": "YulBlock",
													"src": "2339:87:9",
													"statements": [
														{
															"nativeSrc": "2349:29:9",
															"nodeType": "YulAssignment",
															"src": "2349:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:9"
																},
																"nativeSrc": "2358:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:9"
																},
																"nativeSrc": "2387:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:9"
															},
															"nativeSrc": "2387:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:9",
														"nodeType": "YulTypedName",
														"src": "2317:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:9",
														"nodeType": "YulTypedName",
														"src": "2325:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:9",
														"nodeType": "YulTypedName",
														"src": "2333:5:9",
														"type": ""
													}
												],
												"src": "2287:139:9"
											},
											{
												"body": {
													"nativeSrc": "2515:391:9",
													"nodeType": "YulBlock",
													"src": "2515:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:9",
																"nodeType": "YulBlock",
																"src": "2561:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:9"
																			},
																			"nativeSrc": "2563:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:9"
																		},
																		"nativeSrc": "2563:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:9"
																		},
																		"nativeSrc": "2532:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:9"
																},
																"nativeSrc": "2528:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:9"
															},
															"nativeSrc": "2525:119:9",
															"nodeType": "YulIf",
															"src": "2525:119:9"
														},
														{
															"nativeSrc": "2654:117:9",
															"nodeType": "YulBlock",
															"src": "2654:117:9",
															"statements": [
																{
																	"nativeSrc": "2669:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:9"
																				},
																				"nativeSrc": "2729:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:9"
																		},
																		"nativeSrc": "2708:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:9",
															"nodeType": "YulBlock",
															"src": "2781:118:9",
															"statements": [
																{
																	"nativeSrc": "2796:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:9"
																				},
																				"nativeSrc": "2857:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:9"
																		},
																		"nativeSrc": "2836:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:9",
														"nodeType": "YulTypedName",
														"src": "2477:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:9",
														"nodeType": "YulTypedName",
														"src": "2488:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:9",
														"nodeType": "YulTypedName",
														"src": "2500:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:9",
														"nodeType": "YulTypedName",
														"src": "2508:6:9",
														"type": ""
													}
												],
												"src": "2432:474:9"
											},
											{
												"body": {
													"nativeSrc": "2954:48:9",
													"nodeType": "YulBlock",
													"src": "2954:48:9",
													"statements": [
														{
															"nativeSrc": "2964:32:9",
															"nodeType": "YulAssignment",
															"src": "2964:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:9"
																		},
																		"nativeSrc": "2982:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:9"
																},
																"nativeSrc": "2975:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:9",
														"nodeType": "YulTypedName",
														"src": "2936:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:9",
														"nodeType": "YulTypedName",
														"src": "2946:7:9",
														"type": ""
													}
												],
												"src": "2912:90:9"
											},
											{
												"body": {
													"nativeSrc": "3067:50:9",
													"nodeType": "YulBlock",
													"src": "3067:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:9"
																		},
																		"nativeSrc": "3089:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:9"
																},
																"nativeSrc": "3077:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:9"
															},
															"nativeSrc": "3077:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:9",
														"nodeType": "YulTypedName",
														"src": "3055:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:9",
														"nodeType": "YulTypedName",
														"src": "3062:3:9",
														"type": ""
													}
												],
												"src": "3008:109:9"
											},
											{
												"body": {
													"nativeSrc": "3215:118:9",
													"nodeType": "YulBlock",
													"src": "3215:118:9",
													"statements": [
														{
															"nativeSrc": "3225:26:9",
															"nodeType": "YulAssignment",
															"src": "3225:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:9"
																},
																"nativeSrc": "3233:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:9"
																		},
																		"nativeSrc": "3308:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:9"
																},
																"nativeSrc": "3261:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:9"
															},
															"nativeSrc": "3261:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:9",
														"nodeType": "YulTypedName",
														"src": "3187:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:9",
														"nodeType": "YulTypedName",
														"src": "3199:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:9",
														"nodeType": "YulTypedName",
														"src": "3210:4:9",
														"type": ""
													}
												],
												"src": "3123:210:9"
											},
											{
												"body": {
													"nativeSrc": "3404:53:9",
													"nodeType": "YulBlock",
													"src": "3404:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:9"
																		},
																		"nativeSrc": "3426:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:9"
																},
																"nativeSrc": "3414:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:9"
															},
															"nativeSrc": "3414:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:9",
														"nodeType": "YulTypedName",
														"src": "3392:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:9",
														"nodeType": "YulTypedName",
														"src": "3399:3:9",
														"type": ""
													}
												],
												"src": "3339:118:9"
											},
											{
												"body": {
													"nativeSrc": "3561:124:9",
													"nodeType": "YulBlock",
													"src": "3561:124:9",
													"statements": [
														{
															"nativeSrc": "3571:26:9",
															"nodeType": "YulAssignment",
															"src": "3571:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:9"
																},
																"nativeSrc": "3579:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:9"
																		},
																		"nativeSrc": "3660:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:9"
																},
																"nativeSrc": "3607:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:9"
															},
															"nativeSrc": "3607:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:9",
														"nodeType": "YulTypedName",
														"src": "3533:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:9",
														"nodeType": "YulTypedName",
														"src": "3545:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:9",
														"nodeType": "YulTypedName",
														"src": "3556:4:9",
														"type": ""
													}
												],
												"src": "3463:222:9"
											},
											{
												"body": {
													"nativeSrc": "3791:519:9",
													"nodeType": "YulBlock",
													"src": "3791:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:9",
																"nodeType": "YulBlock",
																"src": "3837:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:9"
																			},
																			"nativeSrc": "3839:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:9"
																		},
																		"nativeSrc": "3839:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:9"
																		},
																		"nativeSrc": "3808:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:9"
																},
																"nativeSrc": "3804:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:9"
															},
															"nativeSrc": "3801:119:9",
															"nodeType": "YulIf",
															"src": "3801:119:9"
														},
														{
															"nativeSrc": "3930:117:9",
															"nodeType": "YulBlock",
															"src": "3930:117:9",
															"statements": [
																{
																	"nativeSrc": "3945:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:9"
																				},
																				"nativeSrc": "4005:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:9"
																		},
																		"nativeSrc": "3984:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:9",
															"nodeType": "YulBlock",
															"src": "4057:118:9",
															"statements": [
																{
																	"nativeSrc": "4072:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:9"
																				},
																				"nativeSrc": "4133:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:9"
																		},
																		"nativeSrc": "4112:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:9",
															"nodeType": "YulBlock",
															"src": "4185:118:9",
															"statements": [
																{
																	"nativeSrc": "4200:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:9"
																				},
																				"nativeSrc": "4261:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:9"
																		},
																		"nativeSrc": "4240:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:9",
														"nodeType": "YulTypedName",
														"src": "3745:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:9",
														"nodeType": "YulTypedName",
														"src": "3756:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:9",
														"nodeType": "YulTypedName",
														"src": "3768:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:9",
														"nodeType": "YulTypedName",
														"src": "3776:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:9",
														"nodeType": "YulTypedName",
														"src": "3784:6:9",
														"type": ""
													}
												],
												"src": "3691:619:9"
											},
											{
												"body": {
													"nativeSrc": "4359:43:9",
													"nodeType": "YulBlock",
													"src": "4359:43:9",
													"statements": [
														{
															"nativeSrc": "4369:27:9",
															"nodeType": "YulAssignment",
															"src": "4369:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:9"
																},
																"nativeSrc": "4380:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:9",
														"nodeType": "YulTypedName",
														"src": "4341:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:9",
														"nodeType": "YulTypedName",
														"src": "4351:7:9",
														"type": ""
													}
												],
												"src": "4316:86:9"
											},
											{
												"body": {
													"nativeSrc": "4469:51:9",
													"nodeType": "YulBlock",
													"src": "4469:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:9"
																		},
																		"nativeSrc": "4491:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:9"
																},
																"nativeSrc": "4479:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:9"
															},
															"nativeSrc": "4479:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:9",
														"nodeType": "YulTypedName",
														"src": "4457:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:9",
														"nodeType": "YulTypedName",
														"src": "4464:3:9",
														"type": ""
													}
												],
												"src": "4408:112:9"
											},
											{
												"body": {
													"nativeSrc": "4620:120:9",
													"nodeType": "YulBlock",
													"src": "4620:120:9",
													"statements": [
														{
															"nativeSrc": "4630:26:9",
															"nodeType": "YulAssignment",
															"src": "4630:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:9"
																},
																"nativeSrc": "4638:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:9"
																		},
																		"nativeSrc": "4715:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:9"
																},
																"nativeSrc": "4666:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:9"
															},
															"nativeSrc": "4666:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:9",
														"nodeType": "YulTypedName",
														"src": "4592:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:9",
														"nodeType": "YulTypedName",
														"src": "4604:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:9",
														"nodeType": "YulTypedName",
														"src": "4615:4:9",
														"type": ""
													}
												],
												"src": "4526:214:9"
											},
											{
												"body": {
													"nativeSrc": "4812:263:9",
													"nodeType": "YulBlock",
													"src": "4812:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:9",
																"nodeType": "YulBlock",
																"src": "4858:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:9"
																			},
																			"nativeSrc": "4860:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:9"
																		},
																		"nativeSrc": "4860:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:9"
																		},
																		"nativeSrc": "4829:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:9"
																},
																"nativeSrc": "4825:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:9"
															},
															"nativeSrc": "4822:119:9",
															"nodeType": "YulIf",
															"src": "4822:119:9"
														},
														{
															"nativeSrc": "4951:117:9",
															"nodeType": "YulBlock",
															"src": "4951:117:9",
															"statements": [
																{
																	"nativeSrc": "4966:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:9"
																				},
																				"nativeSrc": "5026:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:9"
																		},
																		"nativeSrc": "5005:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:9",
														"nodeType": "YulTypedName",
														"src": "4782:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:9",
														"nodeType": "YulTypedName",
														"src": "4793:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:9",
														"nodeType": "YulTypedName",
														"src": "4805:6:9",
														"type": ""
													}
												],
												"src": "4746:329:9"
											},
											{
												"body": {
													"nativeSrc": "5147:263:9",
													"nodeType": "YulBlock",
													"src": "5147:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:9",
																"nodeType": "YulBlock",
																"src": "5193:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:9"
																			},
																			"nativeSrc": "5195:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:9"
																		},
																		"nativeSrc": "5195:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:9"
																		},
																		"nativeSrc": "5164:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:9"
																},
																"nativeSrc": "5160:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:9"
															},
															"nativeSrc": "5157:119:9",
															"nodeType": "YulIf",
															"src": "5157:119:9"
														},
														{
															"nativeSrc": "5286:117:9",
															"nodeType": "YulBlock",
															"src": "5286:117:9",
															"statements": [
																{
																	"nativeSrc": "5301:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:9"
																				},
																				"nativeSrc": "5361:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5340:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:9"
																		},
																		"nativeSrc": "5340:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5081:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:9",
														"nodeType": "YulTypedName",
														"src": "5117:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:9",
														"nodeType": "YulTypedName",
														"src": "5128:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:9",
														"nodeType": "YulTypedName",
														"src": "5140:6:9",
														"type": ""
													}
												],
												"src": "5081:329:9"
											},
											{
												"body": {
													"nativeSrc": "5481:53:9",
													"nodeType": "YulBlock",
													"src": "5481:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:9"
																		},
																		"nativeSrc": "5503:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:9"
																},
																"nativeSrc": "5491:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:9"
															},
															"nativeSrc": "5491:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:9",
														"nodeType": "YulTypedName",
														"src": "5469:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:9",
														"nodeType": "YulTypedName",
														"src": "5476:3:9",
														"type": ""
													}
												],
												"src": "5416:118:9"
											},
											{
												"body": {
													"nativeSrc": "5638:124:9",
													"nodeType": "YulBlock",
													"src": "5638:124:9",
													"statements": [
														{
															"nativeSrc": "5648:26:9",
															"nodeType": "YulAssignment",
															"src": "5648:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:9"
																},
																"nativeSrc": "5656:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:9"
																		},
																		"nativeSrc": "5737:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:9"
																},
																"nativeSrc": "5684:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:9"
															},
															"nativeSrc": "5684:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:9",
														"nodeType": "YulTypedName",
														"src": "5610:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:9",
														"nodeType": "YulTypedName",
														"src": "5622:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:9",
														"nodeType": "YulTypedName",
														"src": "5633:4:9",
														"type": ""
													}
												],
												"src": "5540:222:9"
											},
											{
												"body": {
													"nativeSrc": "5808:76:9",
													"nodeType": "YulBlock",
													"src": "5808:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5862:16:9",
																"nodeType": "YulBlock",
																"src": "5862:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5871:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5871:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5874:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5874:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5864:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5864:6:9"
																			},
																			"nativeSrc": "5864:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5864:12:9"
																		},
																		"nativeSrc": "5864:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5864:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5831:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5831:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5853:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5853:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5838:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "5838:14:9"
																				},
																				"nativeSrc": "5838:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5838:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5828:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "5828:2:9"
																		},
																		"nativeSrc": "5828:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5828:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5821:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5821:6:9"
																},
																"nativeSrc": "5821:40:9",
																"nodeType": "YulFunctionCall",
																"src": "5821:40:9"
															},
															"nativeSrc": "5818:60:9",
															"nodeType": "YulIf",
															"src": "5818:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5768:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5801:5:9",
														"nodeType": "YulTypedName",
														"src": "5801:5:9",
														"type": ""
													}
												],
												"src": "5768:116:9"
											},
											{
												"body": {
													"nativeSrc": "5939:84:9",
													"nodeType": "YulBlock",
													"src": "5939:84:9",
													"statements": [
														{
															"nativeSrc": "5949:29:9",
															"nodeType": "YulAssignment",
															"src": "5949:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5971:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5971:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5958:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "5958:12:9"
																},
																"nativeSrc": "5958:20:9",
																"nodeType": "YulFunctionCall",
																"src": "5958:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5949:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "5949:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6011:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6011:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5987:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "5987:23:9"
																},
																"nativeSrc": "5987:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5987:30:9"
															},
															"nativeSrc": "5987:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "5987:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "5890:133:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5917:6:9",
														"nodeType": "YulTypedName",
														"src": "5917:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5925:3:9",
														"nodeType": "YulTypedName",
														"src": "5925:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5933:5:9",
														"nodeType": "YulTypedName",
														"src": "5933:5:9",
														"type": ""
													}
												],
												"src": "5890:133:9"
											},
											{
												"body": {
													"nativeSrc": "6109:388:9",
													"nodeType": "YulBlock",
													"src": "6109:388:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6155:83:9",
																"nodeType": "YulBlock",
																"src": "6155:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6157:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6157:77:9"
																			},
																			"nativeSrc": "6157:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6157:79:9"
																		},
																		"nativeSrc": "6157:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6157:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6130:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6130:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6139:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6139:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6126:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6126:3:9"
																		},
																		"nativeSrc": "6126:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6126:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6151:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6151:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6122:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6122:3:9"
																},
																"nativeSrc": "6122:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6122:32:9"
															},
															"nativeSrc": "6119:119:9",
															"nodeType": "YulIf",
															"src": "6119:119:9"
														},
														{
															"nativeSrc": "6248:117:9",
															"nodeType": "YulBlock",
															"src": "6248:117:9",
															"statements": [
																{
																	"nativeSrc": "6263:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6263:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6277:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6277:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6267:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6267:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6292:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6292:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6327:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6327:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6338:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6338:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6323:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6323:3:9"
																				},
																				"nativeSrc": "6323:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6323:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6347:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6347:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6302:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6302:20:9"
																		},
																		"nativeSrc": "6302:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6302:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6292:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6292:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6375:115:9",
															"nodeType": "YulBlock",
															"src": "6375:115:9",
															"statements": [
																{
																	"nativeSrc": "6390:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6390:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6404:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6404:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6394:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6394:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6420:60:9",
																	"nodeType": "YulAssignment",
																	"src": "6420:60:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6452:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6452:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6463:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6463:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6448:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6448:3:9"
																				},
																				"nativeSrc": "6448:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6448:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6472:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6472:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6430:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "6430:17:9"
																		},
																		"nativeSrc": "6430:50:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6430:50:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6420:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6420:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6029:468:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6071:9:9",
														"nodeType": "YulTypedName",
														"src": "6071:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6082:7:9",
														"nodeType": "YulTypedName",
														"src": "6082:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6094:6:9",
														"nodeType": "YulTypedName",
														"src": "6094:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6102:6:9",
														"nodeType": "YulTypedName",
														"src": "6102:6:9",
														"type": ""
													}
												],
												"src": "6029:468:9"
											},
											{
												"body": {
													"nativeSrc": "6586:391:9",
													"nodeType": "YulBlock",
													"src": "6586:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6632:83:9",
																"nodeType": "YulBlock",
																"src": "6632:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6634:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6634:77:9"
																			},
																			"nativeSrc": "6634:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6634:79:9"
																		},
																		"nativeSrc": "6634:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6634:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6607:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6607:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6616:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6616:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6603:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6603:3:9"
																		},
																		"nativeSrc": "6603:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6603:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6628:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6628:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6599:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6599:3:9"
																},
																"nativeSrc": "6599:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6599:32:9"
															},
															"nativeSrc": "6596:119:9",
															"nodeType": "YulIf",
															"src": "6596:119:9"
														},
														{
															"nativeSrc": "6725:117:9",
															"nodeType": "YulBlock",
															"src": "6725:117:9",
															"statements": [
																{
																	"nativeSrc": "6740:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6740:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6754:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6754:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6744:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6744:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6769:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6769:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6804:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6804:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6815:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6815:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6800:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6800:3:9"
																				},
																				"nativeSrc": "6800:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6800:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6824:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6824:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6779:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6779:20:9"
																		},
																		"nativeSrc": "6779:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6779:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6769:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6769:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6852:118:9",
															"nodeType": "YulBlock",
															"src": "6852:118:9",
															"statements": [
																{
																	"nativeSrc": "6867:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6867:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6881:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6881:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6871:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6871:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6897:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6897:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6932:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6932:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6943:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6943:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6928:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6928:3:9"
																				},
																				"nativeSrc": "6928:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6928:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6952:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6952:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6907:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6907:20:9"
																		},
																		"nativeSrc": "6907:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6907:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6897:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6897:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6503:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6548:9:9",
														"nodeType": "YulTypedName",
														"src": "6548:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6559:7:9",
														"nodeType": "YulTypedName",
														"src": "6559:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6571:6:9",
														"nodeType": "YulTypedName",
														"src": "6571:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6579:6:9",
														"nodeType": "YulTypedName",
														"src": "6579:6:9",
														"type": ""
													}
												],
												"src": "6503:474:9"
											},
											{
												"body": {
													"nativeSrc": "7011:152:9",
													"nodeType": "YulBlock",
													"src": "7011:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7028:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7028:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7031:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7031:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7021:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7021:6:9"
																},
																"nativeSrc": "7021:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7021:88:9"
															},
															"nativeSrc": "7021:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7021:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7125:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7125:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7128:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7128:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7118:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7118:6:9"
																},
																"nativeSrc": "7118:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7118:15:9"
															},
															"nativeSrc": "7118:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7118:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7149:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7149:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7152:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7152:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7142:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7142:6:9"
																},
																"nativeSrc": "7142:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7142:15:9"
															},
															"nativeSrc": "7142:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7142:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6983:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6983:180:9"
											},
											{
												"body": {
													"nativeSrc": "7220:269:9",
													"nodeType": "YulBlock",
													"src": "7220:269:9",
													"statements": [
														{
															"nativeSrc": "7230:22:9",
															"nodeType": "YulAssignment",
															"src": "7230:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7244:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7244:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7250:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7250:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7240:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7240:3:9"
																},
																"nativeSrc": "7240:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7240:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7230:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7230:6:9"
																}
															]
														},
														{
															"nativeSrc": "7261:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7261:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7291:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7291:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7297:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7297:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7287:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7287:3:9"
																},
																"nativeSrc": "7287:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7287:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7265:18:9",
																	"nodeType": "YulTypedName",
																	"src": "7265:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7338:51:9",
																"nodeType": "YulBlock",
																"src": "7338:51:9",
																"statements": [
																	{
																		"nativeSrc": "7352:27:9",
																		"nodeType": "YulAssignment",
																		"src": "7352:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7366:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "7366:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7374:4:9",
																					"nodeType": "YulLiteral",
																					"src": "7374:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7362:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7362:3:9"
																			},
																			"nativeSrc": "7362:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7362:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7352:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7352:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7318:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "7318:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7311:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7311:6:9"
																},
																"nativeSrc": "7311:26:9",
																"nodeType": "YulFunctionCall",
																"src": "7311:26:9"
															},
															"nativeSrc": "7308:81:9",
															"nodeType": "YulIf",
															"src": "7308:81:9"
														},
														{
															"body": {
																"nativeSrc": "7441:42:9",
																"nodeType": "YulBlock",
																"src": "7441:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7455:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7455:16:9"
																			},
																			"nativeSrc": "7455:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7455:18:9"
																		},
																		"nativeSrc": "7455:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7455:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7405:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "7405:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7428:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7428:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7436:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7436:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7425:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7425:2:9"
																		},
																		"nativeSrc": "7425:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7425:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7402:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7402:2:9"
																},
																"nativeSrc": "7402:38:9",
																"nodeType": "YulFunctionCall",
																"src": "7402:38:9"
															},
															"nativeSrc": "7399:84:9",
															"nodeType": "YulIf",
															"src": "7399:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7169:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7204:4:9",
														"nodeType": "YulTypedName",
														"src": "7204:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7213:6:9",
														"nodeType": "YulTypedName",
														"src": "7213:6:9",
														"type": ""
													}
												],
												"src": "7169:320:9"
											},
											{
												"body": {
													"nativeSrc": "7523:152:9",
													"nodeType": "YulBlock",
													"src": "7523:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7540:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7540:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7543:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7543:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7533:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7533:6:9"
																},
																"nativeSrc": "7533:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7533:88:9"
															},
															"nativeSrc": "7533:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7533:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7637:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7637:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7640:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7640:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7630:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7630:6:9"
																},
																"nativeSrc": "7630:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7630:15:9"
															},
															"nativeSrc": "7630:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7630:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7661:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7661:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7664:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7664:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7654:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7654:6:9"
																},
																"nativeSrc": "7654:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7654:15:9"
															},
															"nativeSrc": "7654:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7654:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7495:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7495:180:9"
											},
											{
												"body": {
													"nativeSrc": "7729:362:9",
													"nodeType": "YulBlock",
													"src": "7729:362:9",
													"statements": [
														{
															"nativeSrc": "7739:25:9",
															"nodeType": "YulAssignment",
															"src": "7739:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7762:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7762:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7744:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7744:17:9"
																},
																"nativeSrc": "7744:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7744:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7739:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7739:1:9"
																}
															]
														},
														{
															"nativeSrc": "7773:25:9",
															"nodeType": "YulAssignment",
															"src": "7773:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7796:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7796:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7778:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7778:17:9"
																},
																"nativeSrc": "7778:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7778:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7773:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7773:1:9"
																}
															]
														},
														{
															"nativeSrc": "7807:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7807:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7830:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7830:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7833:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7833:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7826:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7826:3:9"
																},
																"nativeSrc": "7826:9:9",
																"nodeType": "YulFunctionCall",
																"src": "7826:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7811:11:9",
																	"nodeType": "YulTypedName",
																	"src": "7811:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7844:41:9",
															"nodeType": "YulAssignment",
															"src": "7844:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7873:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "7873:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7855:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7855:17:9"
																},
																"nativeSrc": "7855:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7855:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7844:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "7844:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8062:22:9",
																"nodeType": "YulBlock",
																"src": "8062:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8064:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8064:16:9"
																			},
																			"nativeSrc": "8064:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8064:18:9"
																		},
																		"nativeSrc": "8064:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8064:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7995:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "7995:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7988:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "7988:6:9"
																				},
																				"nativeSrc": "7988:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7988:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8018:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "8018:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8025:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "8025:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8034:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "8034:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8021:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "8021:3:9"
																						},
																						"nativeSrc": "8021:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "8021:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8015:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "8015:2:9"
																				},
																				"nativeSrc": "8015:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8015:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7968:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7968:2:9"
																		},
																		"nativeSrc": "7968:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7948:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7948:6:9"
																},
																"nativeSrc": "7948:113:9",
																"nodeType": "YulFunctionCall",
																"src": "7948:113:9"
															},
															"nativeSrc": "7945:139:9",
															"nodeType": "YulIf",
															"src": "7945:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7681:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7712:1:9",
														"nodeType": "YulTypedName",
														"src": "7712:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7715:1:9",
														"nodeType": "YulTypedName",
														"src": "7715:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7721:7:9",
														"nodeType": "YulTypedName",
														"src": "7721:7:9",
														"type": ""
													}
												],
												"src": "7681:410:9"
											},
											{
												"body": {
													"nativeSrc": "8125:152:9",
													"nodeType": "YulBlock",
													"src": "8125:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8142:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8142:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8145:77:9",
																		"nodeType": "YulLiteral",
																		"src": "8145:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8135:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8135:6:9"
																},
																"nativeSrc": "8135:88:9",
																"nodeType": "YulFunctionCall",
																"src": "8135:88:9"
															},
															"nativeSrc": "8135:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "8135:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8239:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8239:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8242:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8242:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8232:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8232:6:9"
																},
																"nativeSrc": "8232:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8232:15:9"
															},
															"nativeSrc": "8232:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8232:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8263:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8263:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8266:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8266:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8256:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8256:6:9"
																},
																"nativeSrc": "8256:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8256:15:9"
															},
															"nativeSrc": "8256:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "8256:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8097:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "8097:180:9"
											},
											{
												"body": {
													"nativeSrc": "8325:143:9",
													"nodeType": "YulBlock",
													"src": "8325:143:9",
													"statements": [
														{
															"nativeSrc": "8335:25:9",
															"nodeType": "YulAssignment",
															"src": "8335:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8358:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8358:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8340:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8340:17:9"
																},
																"nativeSrc": "8340:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8340:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8335:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8335:1:9"
																}
															]
														},
														{
															"nativeSrc": "8369:25:9",
															"nodeType": "YulAssignment",
															"src": "8369:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8392:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8392:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8374:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8374:17:9"
																},
																"nativeSrc": "8374:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8374:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8369:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8369:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8416:22:9",
																"nodeType": "YulBlock",
																"src": "8416:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8418:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8418:16:9"
																			},
																			"nativeSrc": "8418:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8418:18:9"
																		},
																		"nativeSrc": "8418:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8418:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8413:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8413:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8406:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8406:6:9"
																},
																"nativeSrc": "8406:9:9",
																"nodeType": "YulFunctionCall",
																"src": "8406:9:9"
															},
															"nativeSrc": "8403:35:9",
															"nodeType": "YulIf",
															"src": "8403:35:9"
														},
														{
															"nativeSrc": "8448:14:9",
															"nodeType": "YulAssignment",
															"src": "8448:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8457:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8457:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8460:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8460:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8453:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8453:3:9"
																},
																"nativeSrc": "8453:9:9",
																"nodeType": "YulFunctionCall",
																"src": "8453:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8448:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8448:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8283:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8314:1:9",
														"nodeType": "YulTypedName",
														"src": "8314:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8317:1:9",
														"nodeType": "YulTypedName",
														"src": "8317:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8323:1:9",
														"nodeType": "YulTypedName",
														"src": "8323:1:9",
														"type": ""
													}
												],
												"src": "8283:185:9"
											},
											{
												"body": {
													"nativeSrc": "8600:206:9",
													"nodeType": "YulBlock",
													"src": "8600:206:9",
													"statements": [
														{
															"nativeSrc": "8610:26:9",
															"nodeType": "YulAssignment",
															"src": "8610:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8622:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8622:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8633:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8633:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8618:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8618:3:9"
																},
																"nativeSrc": "8618:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8618:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8610:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8610:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8690:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8690:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8703:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8703:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8714:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8714:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8699:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8699:3:9"
																		},
																		"nativeSrc": "8699:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8699:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8646:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8646:43:9"
																},
																"nativeSrc": "8646:71:9",
																"nodeType": "YulFunctionCall",
																"src": "8646:71:9"
															},
															"nativeSrc": "8646:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "8646:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8771:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8771:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8784:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8784:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8795:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8795:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8780:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8780:3:9"
																		},
																		"nativeSrc": "8780:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8780:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8727:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8727:43:9"
																},
																"nativeSrc": "8727:72:9",
																"nodeType": "YulFunctionCall",
																"src": "8727:72:9"
															},
															"nativeSrc": "8727:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "8727:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8474:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8564:9:9",
														"nodeType": "YulTypedName",
														"src": "8564:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8576:6:9",
														"nodeType": "YulTypedName",
														"src": "8576:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8584:6:9",
														"nodeType": "YulTypedName",
														"src": "8584:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8595:4:9",
														"nodeType": "YulTypedName",
														"src": "8595:4:9",
														"type": ""
													}
												],
												"src": "8474:332:9"
											},
											{
												"body": {
													"nativeSrc": "8966:288:9",
													"nodeType": "YulBlock",
													"src": "8966:288:9",
													"statements": [
														{
															"nativeSrc": "8976:26:9",
															"nodeType": "YulAssignment",
															"src": "8976:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8988:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8988:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8999:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8999:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8984:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8984:3:9"
																},
																"nativeSrc": "8984:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8984:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8976:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8976:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9056:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9056:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9069:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9069:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9080:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9080:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9065:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9065:3:9"
																		},
																		"nativeSrc": "9065:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9065:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9012:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9012:43:9"
																},
																"nativeSrc": "9012:71:9",
																"nodeType": "YulFunctionCall",
																"src": "9012:71:9"
															},
															"nativeSrc": "9012:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "9012:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9137:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9137:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9150:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9150:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9161:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9161:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9146:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9146:3:9"
																		},
																		"nativeSrc": "9146:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9146:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9093:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9093:43:9"
																},
																"nativeSrc": "9093:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9093:72:9"
															},
															"nativeSrc": "9093:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9093:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9219:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9219:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9232:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9232:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9243:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9243:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9228:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9228:3:9"
																		},
																		"nativeSrc": "9228:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9228:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9175:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9175:43:9"
																},
																"nativeSrc": "9175:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9175:72:9"
															},
															"nativeSrc": "9175:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9175:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8812:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8922:9:9",
														"nodeType": "YulTypedName",
														"src": "8922:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8934:6:9",
														"nodeType": "YulTypedName",
														"src": "8934:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8942:6:9",
														"nodeType": "YulTypedName",
														"src": "8942:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8950:6:9",
														"nodeType": "YulTypedName",
														"src": "8950:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8961:4:9",
														"nodeType": "YulTypedName",
														"src": "8961:4:9",
														"type": ""
													}
												],
												"src": "8812:442:9"
											},
											{
												"body": {
													"nativeSrc": "9305:149:9",
													"nodeType": "YulBlock",
													"src": "9305:149:9",
													"statements": [
														{
															"nativeSrc": "9315:25:9",
															"nodeType": "YulAssignment",
															"src": "9315:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9338:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9338:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9320:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9320:17:9"
																},
																"nativeSrc": "9320:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9320:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9315:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9315:1:9"
																}
															]
														},
														{
															"nativeSrc": "9349:25:9",
															"nodeType": "YulAssignment",
															"src": "9349:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9372:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9372:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9354:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9354:17:9"
																},
																"nativeSrc": "9354:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9354:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9349:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9349:1:9"
																}
															]
														},
														{
															"nativeSrc": "9383:17:9",
															"nodeType": "YulAssignment",
															"src": "9383:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9395:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9395:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9398:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9398:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9391:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9391:3:9"
																},
																"nativeSrc": "9391:9:9",
																"nodeType": "YulFunctionCall",
																"src": "9391:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9383:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9383:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9425:22:9",
																"nodeType": "YulBlock",
																"src": "9425:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9427:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9427:16:9"
																			},
																			"nativeSrc": "9427:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9427:18:9"
																		},
																		"nativeSrc": "9427:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9427:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9416:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9416:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9422:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9422:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9413:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9413:2:9"
																},
																"nativeSrc": "9413:11:9",
																"nodeType": "YulFunctionCall",
																"src": "9413:11:9"
															},
															"nativeSrc": "9410:37:9",
															"nodeType": "YulIf",
															"src": "9410:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9260:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9291:1:9",
														"nodeType": "YulTypedName",
														"src": "9291:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9294:1:9",
														"nodeType": "YulTypedName",
														"src": "9294:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9300:4:9",
														"nodeType": "YulTypedName",
														"src": "9300:4:9",
														"type": ""
													}
												],
												"src": "9260:194:9"
											},
											{
												"body": {
													"nativeSrc": "9504:147:9",
													"nodeType": "YulBlock",
													"src": "9504:147:9",
													"statements": [
														{
															"nativeSrc": "9514:25:9",
															"nodeType": "YulAssignment",
															"src": "9514:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9537:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9537:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9519:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9519:17:9"
																},
																"nativeSrc": "9519:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9519:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9514:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9514:1:9"
																}
															]
														},
														{
															"nativeSrc": "9548:25:9",
															"nodeType": "YulAssignment",
															"src": "9548:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9571:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9571:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9553:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9553:17:9"
																},
																"nativeSrc": "9553:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9553:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9548:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9548:1:9"
																}
															]
														},
														{
															"nativeSrc": "9582:16:9",
															"nodeType": "YulAssignment",
															"src": "9582:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9593:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9593:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9596:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9596:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9589:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9589:3:9"
																},
																"nativeSrc": "9589:9:9",
																"nodeType": "YulFunctionCall",
																"src": "9589:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9582:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9582:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9622:22:9",
																"nodeType": "YulBlock",
																"src": "9622:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9624:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9624:16:9"
																			},
																			"nativeSrc": "9624:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9624:18:9"
																		},
																		"nativeSrc": "9624:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9624:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9614:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9614:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9617:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9617:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9611:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9611:2:9"
																},
																"nativeSrc": "9611:10:9",
																"nodeType": "YulFunctionCall",
																"src": "9611:10:9"
															},
															"nativeSrc": "9608:36:9",
															"nodeType": "YulIf",
															"src": "9608:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9460:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9491:1:9",
														"nodeType": "YulTypedName",
														"src": "9491:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9494:1:9",
														"nodeType": "YulTypedName",
														"src": "9494:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9500:3:9",
														"nodeType": "YulTypedName",
														"src": "9500:3:9",
														"type": ""
													}
												],
												"src": "9460:191:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610171575f3560e01c8063751fd179116100dc578063a071dcf411610095578063c4081a4c1161006f578063c4081a4c14610419578063dd62ed3e14610435578063f0f4426014610465578063f2fde38b1461048157610171565b8063a071dcf4146103ad578063a9059cbb146103cb578063bc063e1a146103fb57610171565b8063751fd1791461030f5780638456cb591461032b5780638da5cb5b14610335578063928286711461035357806395d89b411461037157806399f3bc9a1461038f57610171565b80633f4ba83a1161012e5780633f4ba83a1461025f578063483a9310146102695780635c975abb1461029957806361d027b3146102b757806370a08231146102d5578063715018a61461030557610171565b806306fdde0314610175578063095ea7b31461019357806318160ddd146101c357806323b872dd146101e1578063313ce567146102115780633f4218e01461022f575b5f5ffd5b61017d61049d565b60405161018a91906114db565b60405180910390f35b6101ad60048036038101906101a8919061158c565b61052d565b6040516101ba91906115e4565b60405180910390f35b6101cb61054f565b6040516101d8919061160c565b60405180910390f35b6101fb60048036038101906101f69190611625565b610558565b60405161020891906115e4565b60405180910390f35b610219610586565b6040516102269190611690565b60405180910390f35b610249600480360381019061024491906116a9565b61058e565b60405161025691906115e4565b60405180910390f35b6102676105ab565b005b610283600480360381019061027e91906116d4565b6105bd565b604051610290919061160c565b60405180910390f35b6102a16105df565b6040516102ae91906115e4565b60405180910390f35b6102bf6105f4565b6040516102cc919061170e565b60405180910390f35b6102ef60048036038101906102ea91906116a9565b610619565b6040516102fc919061160c565b60405180910390f35b61030d61065e565b005b61032960048036038101906103249190611751565b610671565b005b61033361071f565b005b61033d610731565b60405161034a919061170e565b60405180910390f35b61035b61075a565b604051610368919061160c565b60405180910390f35b610379610762565b60405161038691906114db565b60405180910390f35b6103976107f2565b6040516103a4919061160c565b60405180910390f35b6103b56107fb565b6040516103c2919061160c565b60405180910390f35b6103e560048036038101906103e0919061158c565b610801565b6040516103f291906115e4565b60405180910390f35b610403610823565b604051610410919061160c565b60405180910390f35b610433600480360381019061042e91906116d4565b610828565b005b61044f600480360381019061044a919061178f565b6108b6565b60405161045c919061160c565b60405180910390f35b61047f600480360381019061047a91906116a9565b610938565b005b61049b600480360381019061049691906116a9565b610bae565b005b6060600380546104ac906117fa565b80601f01602080910402602001604051908101604052809291908181526020018280546104d8906117fa565b80156105235780601f106104fa57610100808354040283529160200191610523565b820191905f5260205f20905b81548152906001019060200180831161050657829003601f168201915b5050505050905090565b5f5f610537610c32565b9050610544818585610c39565b600191505092915050565b5f600254905090565b5f5f610562610c32565b905061056f858285610c4b565b61057a858585610cde565b60019150509392505050565b5f6012905090565b6008602052805f5260405f205f915054906101000a900460ff1681565b6105b3610ddb565b6105bb610e62565b565b5f60c8600754836105ce9190611857565b6105d891906118c5565b9050919050565b5f60055f9054906101000a900460ff16905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610666610ddb565b61066f5f610ec3565b565b610679610ddb565b8060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f8260405161071391906115e4565b60405180910390a25050565b610727610ddb565b61072f610f88565b565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60c8905090565b606060048054610771906117fa565b80601f016020809104026020016040519081016040528092919081815260200182805461079d906117fa565b80156107e85780601f106107bf576101008083540402835291602001916107e8565b820191905f5260205f20905b8154815290600101906020018083116107cb57829003601f168201915b5050505050905090565b5f600754905090565b60075481565b5f5f61080b610c32565b9050610818818585610cde565b600191505092915050565b60c881565b610830610ddb565b61271081111561086c576040517f5ba09ae000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6007549050816007819055507f2211abb4bbc4d80b7505c31b54d01d15ac6e33a42c59540d309d89daf759063a81836040516108aa9291906118f5565b60405180910390a15050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610940610ddb565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109a5576040517fcfe2ea6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600160085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a60405160405180910390a38073ffffffffffffffffffffffffffffffffffffffff167f69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f5f604051610b5391906115e4565b60405180910390a28173ffffffffffffffffffffffffffffffffffffffff167f69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f6001604051610ba291906115e4565b60405180910390a25050565b610bb6610ddb565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c26575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c1d919061170e565b60405180910390fd5b610c2f81610ec3565b50565b5f33905090565b610c468383836001610fea565b505050565b5f610c5684846108b6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610cd85781811015610cc9578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610cc09392919061191c565b60405180910390fd5b610cd784848484035f610fea565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610d4657505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15610dca575f6007541115610dc9575f606460075483610d669190611857565b610d7091906118c5565b90505f811115610dc757610da68460065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836111b9565b5f8183610db39190611951565b9050610dc08585836111b9565b5050610dd6565b505b5b610dd58383836111b9565b5b505050565b610de3610c32565b73ffffffffffffffffffffffffffffffffffffffff16610e01610731565b73ffffffffffffffffffffffffffffffffffffffff1614610e6057610e24610c32565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e57919061170e565b60405180910390fd5b565b610e6a6111d1565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610eac610c32565b604051610eb9919061170e565b60405180910390a1565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f90611211565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fd3610c32565b604051610fe0919061170e565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361105a575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611051919061170e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110ca575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110c1919061170e565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156111b3578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111aa919061160c565b60405180910390a35b50505050565b6111c1611211565b6111cc838383611252565b505050565b6111d96105df565b61120f576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6112196105df565b15611250576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112a2578060025f8282546112969190611984565b92505081905550611370565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561132b578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016113229392919061191c565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113b7578060025f8282540392505081905550611401565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161145e919061160c565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6114ad8261146b565b6114b78185611475565b93506114c7818560208601611485565b6114d081611493565b840191505092915050565b5f6020820190508181035f8301526114f381846114a3565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611528826114ff565b9050919050565b6115388161151e565b8114611542575f5ffd5b50565b5f813590506115538161152f565b92915050565b5f819050919050565b61156b81611559565b8114611575575f5ffd5b50565b5f8135905061158681611562565b92915050565b5f5f604083850312156115a2576115a16114fb565b5b5f6115af85828601611545565b92505060206115c085828601611578565b9150509250929050565b5f8115159050919050565b6115de816115ca565b82525050565b5f6020820190506115f75f8301846115d5565b92915050565b61160681611559565b82525050565b5f60208201905061161f5f8301846115fd565b92915050565b5f5f5f6060848603121561163c5761163b6114fb565b5b5f61164986828701611545565b935050602061165a86828701611545565b925050604061166b86828701611578565b9150509250925092565b5f60ff82169050919050565b61168a81611675565b82525050565b5f6020820190506116a35f830184611681565b92915050565b5f602082840312156116be576116bd6114fb565b5b5f6116cb84828501611545565b91505092915050565b5f602082840312156116e9576116e86114fb565b5b5f6116f684828501611578565b91505092915050565b6117088161151e565b82525050565b5f6020820190506117215f8301846116ff565b92915050565b611730816115ca565b811461173a575f5ffd5b50565b5f8135905061174b81611727565b92915050565b5f5f60408385031215611767576117666114fb565b5b5f61177485828601611545565b92505060206117858582860161173d565b9150509250929050565b5f5f604083850312156117a5576117a46114fb565b5b5f6117b285828601611545565b92505060206117c385828601611545565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061181157607f821691505b602082108103611824576118236117cd565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61186182611559565b915061186c83611559565b925082820261187a81611559565b915082820484148315176118915761189061182a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6118cf82611559565b91506118da83611559565b9250826118ea576118e9611898565b5b828204905092915050565b5f6040820190506119085f8301856115fd565b61191560208301846115fd565b9392505050565b5f60608201905061192f5f8301866116ff565b61193c60208301856115fd565b61194960408301846115fd565b949350505050565b5f61195b82611559565b915061196683611559565b925082820390508181111561197e5761197d61182a565b5b92915050565b5f61198e82611559565b915061199983611559565b92508282019050808211156119b1576119b061182a565b5b9291505056fea2646970667358221220ce3efa2bb519c0daf5a6b7beb365e06dc3c093a9fa7b1babc1b5000f6fb2787264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x751FD179 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA071DCF4 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC4081A4C GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC4081A4C EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x481 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xA071DCF4 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x3FB JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x751FD179 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x92828671 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x99F3BC9A EQ PUSH2 0x38F JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x483A9310 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x305 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x3F4218E0 EQ PUSH2 0x22F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0x5AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH2 0x5F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH2 0x65E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x333 PUSH2 0x71F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33D PUSH2 0x731 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x379 PUSH2 0x762 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x14DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x397 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x16D4 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x178F JUMP JUMPDEST PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0xBAE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4AC SWAP1 PUSH2 0x17FA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D8 SWAP1 PUSH2 0x17FA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x523 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x523 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x506 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x537 PUSH2 0xC32 JUMP JUMPDEST SWAP1 POP PUSH2 0x544 DUP2 DUP6 DUP6 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x562 PUSH2 0xC32 JUMP JUMPDEST SWAP1 POP PUSH2 0x56F DUP6 DUP3 DUP6 PUSH2 0xC4B JUMP JUMPDEST PUSH2 0x57A DUP6 DUP6 DUP6 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x5B3 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x5BB PUSH2 0xE62 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0xC8 PUSH1 0x7 SLOAD DUP4 PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x1857 JUMP JUMPDEST PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x666 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x66F PUSH0 PUSH2 0xEC3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x679 PUSH2 0xDDB JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x69E34A174B4A0CCE59950C4C852317E9797BDCAE125FBF8B5DD8B4311384412F DUP3 PUSH1 0x40 MLOAD PUSH2 0x713 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x727 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x72F PUSH2 0xF88 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xC8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x771 SWAP1 PUSH2 0x17FA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x79D SWAP1 PUSH2 0x17FA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x80B PUSH2 0xC32 JUMP JUMPDEST SWAP1 POP PUSH2 0x818 DUP2 DUP6 DUP6 PUSH2 0xCDE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC8 DUP2 JUMP JUMPDEST PUSH2 0x830 PUSH2 0xDDB JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH32 0x5BA09AE000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP DUP2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH32 0x2211ABB4BBC4D80B7505C31B54D01D15AC6E33A42C59540D309D89DAF759063A DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8AA SWAP3 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x940 PUSH2 0xDDB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFE2EA6300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4AB5BE82436D353E61CA18726E984E561F5C1CC7C6D38B29D2553C790434705A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x69E34A174B4A0CCE59950C4C852317E9797BDCAE125FBF8B5DD8B4311384412F PUSH0 PUSH1 0x40 MLOAD PUSH2 0xB53 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x69E34A174B4A0CCE59950C4C852317E9797BDCAE125FBF8B5DD8B4311384412F PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xBA2 SWAP2 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xBB6 PUSH2 0xDDB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC26 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1D SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC2F DUP2 PUSH2 0xEC3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC46 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC56 DUP5 DUP5 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xCD8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCC9 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x191C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCD7 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xFEA JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xD46 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xDCA JUMPI PUSH0 PUSH1 0x7 SLOAD GT ISZERO PUSH2 0xDC9 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP4 PUSH2 0xD66 SWAP2 SWAP1 PUSH2 0x1857 JUMP JUMPDEST PUSH2 0xD70 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xDC7 JUMPI PUSH2 0xDA6 DUP5 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x11B9 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xDB3 SWAP2 SWAP1 PUSH2 0x1951 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC0 DUP6 DUP6 DUP4 PUSH2 0x11B9 JUMP JUMPDEST POP POP PUSH2 0xDD6 JUMP JUMPDEST POP JUMPDEST JUMPDEST PUSH2 0xDD5 DUP4 DUP4 DUP4 PUSH2 0x11B9 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDE3 PUSH2 0xC32 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE01 PUSH2 0x731 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE60 JUMPI PUSH2 0xE24 PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE57 SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE6A PUSH2 0x11D1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xEAC PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB9 SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF90 PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xFD3 PUSH2 0xC32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE0 SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x105A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1051 SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C1 SWAP2 SWAP1 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x11B3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11AA SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x11C1 PUSH2 0x1211 JUMP JUMPDEST PUSH2 0x11CC DUP4 DUP4 DUP4 PUSH2 0x1252 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x11D9 PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x120F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1219 PUSH2 0x5DF JUMP JUMPDEST ISZERO PUSH2 0x1250 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1296 SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1370 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x132B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1322 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x191C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1401 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x145E SWAP2 SWAP1 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14AD DUP3 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x14B7 DUP2 DUP6 PUSH2 0x1475 JUMP JUMPDEST SWAP4 POP PUSH2 0x14C7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1485 JUMP JUMPDEST PUSH2 0x14D0 DUP2 PUSH2 0x1493 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14F3 DUP2 DUP5 PUSH2 0x14A3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1528 DUP3 PUSH2 0x14FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1538 DUP2 PUSH2 0x151E JUMP JUMPDEST DUP2 EQ PUSH2 0x1542 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1553 DUP2 PUSH2 0x152F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x156B DUP2 PUSH2 0x1559 JUMP JUMPDEST DUP2 EQ PUSH2 0x1575 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1586 DUP2 PUSH2 0x1562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A2 JUMPI PUSH2 0x15A1 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15AF DUP6 DUP3 DUP7 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15C0 DUP6 DUP3 DUP7 ADD PUSH2 0x1578 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DE DUP2 PUSH2 0x15CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F7 PUSH0 DUP4 ADD DUP5 PUSH2 0x15D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1606 DUP2 PUSH2 0x1559 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x161F PUSH0 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x163C JUMPI PUSH2 0x163B PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1649 DUP7 DUP3 DUP8 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x165A DUP7 DUP3 DUP8 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x166B DUP7 DUP3 DUP8 ADD PUSH2 0x1578 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168A DUP2 PUSH2 0x1675 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1681 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16BE JUMPI PUSH2 0x16BD PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16CB DUP5 DUP3 DUP6 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E9 JUMPI PUSH2 0x16E8 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16F6 DUP5 DUP3 DUP6 ADD PUSH2 0x1578 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1708 DUP2 PUSH2 0x151E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1721 PUSH0 DUP4 ADD DUP5 PUSH2 0x16FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1730 DUP2 PUSH2 0x15CA JUMP JUMPDEST DUP2 EQ PUSH2 0x173A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x174B DUP2 PUSH2 0x1727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1767 JUMPI PUSH2 0x1766 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1774 DUP6 DUP3 DUP7 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1785 DUP6 DUP3 DUP7 ADD PUSH2 0x173D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17A5 JUMPI PUSH2 0x17A4 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17B2 DUP6 DUP3 DUP7 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17C3 DUP6 DUP3 DUP7 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1811 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1824 JUMPI PUSH2 0x1823 PUSH2 0x17CD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1861 DUP3 PUSH2 0x1559 JUMP JUMPDEST SWAP2 POP PUSH2 0x186C DUP4 PUSH2 0x1559 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x187A DUP2 PUSH2 0x1559 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1891 JUMPI PUSH2 0x1890 PUSH2 0x182A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18CF DUP3 PUSH2 0x1559 JUMP JUMPDEST SWAP2 POP PUSH2 0x18DA DUP4 PUSH2 0x1559 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x18EA JUMPI PUSH2 0x18E9 PUSH2 0x1898 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1908 PUSH0 DUP4 ADD DUP6 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x1915 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x192F PUSH0 DUP4 ADD DUP7 PUSH2 0x16FF JUMP JUMPDEST PUSH2 0x193C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x1949 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15FD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x195B DUP3 PUSH2 0x1559 JUMP JUMPDEST SWAP2 POP PUSH2 0x1966 DUP4 PUSH2 0x1559 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x197E JUMPI PUSH2 0x197D PUSH2 0x182A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x198E DUP3 PUSH2 0x1559 JUMP JUMPDEST SWAP2 POP PUSH2 0x1999 DUP4 PUSH2 0x1559 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19B1 JUMPI PUSH2 0x19B0 PUSH2 0x182A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE RETURNDATACOPY STATICCALL 0x2B 0xB5 NOT 0xC0 0xDA CREATE2 0xA6 0xB7 0xBE 0xB3 PUSH6 0xE06DC3C093A9 STATICCALL PUSH28 0x1BABC1B5000F6FB2787264736F6C634300081E003300000000000000 ",
							"sourceMap": "414:4990:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3882:254:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;725:43:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3478:63;;;:::i;:::-;;4666:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1726:84:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;493:23:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;3230:177:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3413:59;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4214:84:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4398::8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;522:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3614:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;632:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2804:237;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3455:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2173:523:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;3882:254:8:-;3979:4;3995:15;4013:12;:10;:12::i;:::-;3995:30;;4035:38;4051:4;4057:7;4066:6;4035:15;:38::i;:::-;4083:25;4091:4;4097:2;4101:6;4083:7;:25::i;:::-;4125:4;4118:11;;;3882:254;;;;;:::o;2688:82:2:-;2737:5;2761:2;2754:9;;2688:82;:::o;725:43:8:-;;;;;;;;;;;;;;;;;;;;;;:::o;3478:63::-;1531:13:0;:11;:13::i;:::-;3524:10:8::1;:8;:10::i;:::-;3478:63::o:0;4666:121::-;4727:7;666:3;4763:6;;4754;:15;;;;:::i;:::-;4753:27;;;;:::i;:::-;4746:34;;4666:121;;;:::o;1726:84:7:-;1773:4;1796:7;;;;;;;;;;;1789:14;;1726:84;:::o;493:23:8:-;;;;;;;;;;;;;:::o;2933:116:2:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3230:177:8:-;1531:13:0;:11;:13::i;:::-;3340:7:8::1;3316:11;:21;3328:8;3316:21;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;3382:8;3362:38;;;3392:7;3362:38;;;;;;:::i;:::-;;;;;;;;3230:177:::0;;:::o;3413:59::-;1531:13:0;:11;:13::i;:::-;3457:8:8::1;:6;:8::i;:::-;3413:59::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;4214:84:8:-;4258:7;666:3;4277:14;;4214:84;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;4398::8:-;4452:7;4478:6;;4471:13;;4398:93;:::o;522:21::-;;;;:::o;3614:187::-;3693:4;3709:13;3725:12;:10;:12::i;:::-;3709:28;;3747:26;3755:5;3762:2;3766:6;3747:7;:26::i;:::-;3790:4;3783:11;;;3614:187;;;;:::o;632:37::-;666:3;632:37;:::o;2804:237::-;1531:13:0;:11;:13::i;:::-;2883:5:8::1;2873:7;:15;2869:43;;;2897:15;;;;;;;;;;;;;;2869:43;2931:14;2948:6;;2931:23;;2973:7;2964:6;:16;;;;3004:30;3018:6;3026:7;3004:30;;;;;;;:::i;:::-;;;;;;;;2859:182;2804:237:::0;:::o;3455:140:2:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;2173:523:8:-;1531:13:0;:11;:13::i;:::-;2273:1:8::1;2249:26;;:12;:26;;::::0;2245:63:::1;;2284:24;;;;;;;;;;;;;;2245:63;2327:19;2349:8;;;;;;;;;;;2327:30;;2378:12;2367:8;;:23;;;;;;;;;;;;;;;;;;2468:5;2441:11;:24;2453:11;2441:24;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;2511:4;2483:11;:25;2495:12;2483:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;2568:12;2539:42;;2555:11;2539:42;;;;;;;;;;;;2616:11;2596:39;;;2629:5;2596:39;;;;;;:::i;:::-;;;;;;;;2670:12;2650:39;;;2684:4;2650:39;;;;;;:::i;:::-;;;;;;;;2235:461;2173:523:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8630:128:2:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;4861:541:8:-;4990:1;4974:18;;:4;:18;;;;:38;;;;;5010:1;4996:16;;:2;:16;;;;4974:38;4970:385;;;5041:1;5032:6;;:10;5028:317;;;5062:11;5096:3;5086:6;;5077;:15;;;;:::i;:::-;5076:23;;;;:::i;:::-;5062:37;;5127:1;5121:3;:7;5117:214;;;5152:34;5166:4;5172:8;;;;;;;;;;;5182:3;5152:13;:34::i;:::-;5208:11;5231:3;5222:6;:12;;;;:::i;:::-;5208:26;;5256:28;5270:4;5276:2;5280:3;5256:13;:28::i;:::-;5306:7;;;;5117:214;5044:301;5028:317;4970:385;5364:31;5378:4;5384:2;5388:6;5364:13;:31::i;:::-;4861:541;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2586:117:7:-;1597:16;:14;:16::i;:::-;2654:5:::1;2644:7;;:15;;;;;;;;;;;;;;;;;;2674:22;2683:12;:10;:12::i;:::-;2674:22;;;;;;:::i;:::-;;;;;;;;2586:117::o:0;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2339:115:7:-;1350:19;:17;:19::i;:::-;2408:4:::1;2398:7;;:14;;;;;;;;;;;;;;;;;;2427:20;2434:12;:10;:12::i;:::-;2427:20;;;;;;:::i;:::-;;;;;;;;2339:115::o:0;9605:432:2:-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;1113:145:4:-;1350:19:7;:17;:19::i;:::-;1221:30:4::1;1235:4;1241:2;1245:5;1221:13;:30::i;:::-;1113:145:::0;;;:::o;2078:126:7:-;2141:8;:6;:8::i;:::-;2136:62;;2172:15;;;;;;;;;;;;;;2136:62;2078:126::o;1878:128::-;1943:8;:6;:8::i;:::-;1939:61;;;1974:15;;;;;;;;;;;;;;1939:61;1878:128::o;5912:1107:2:-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:116::-;5838:21;5853:5;5838:21;:::i;:::-;5831:5;5828:32;5818:60;;5874:1;5871;5864:12;5818:60;5768:116;:::o;5890:133::-;5933:5;5971:6;5958:20;5949:29;;5987:30;6011:5;5987:30;:::i;:::-;5890:133;;;;:::o;6029:468::-;6094:6;6102;6151:2;6139:9;6130:7;6126:23;6122:32;6119:119;;;6157:79;;:::i;:::-;6119:119;6277:1;6302:53;6347:7;6338:6;6327:9;6323:22;6302:53;:::i;:::-;6292:63;;6248:117;6404:2;6430:50;6472:7;6463:6;6452:9;6448:22;6430:50;:::i;:::-;6420:60;;6375:115;6029:468;;;;;:::o;6503:474::-;6571:6;6579;6628:2;6616:9;6607:7;6603:23;6599:32;6596:119;;;6634:79;;:::i;:::-;6596:119;6754:1;6779:53;6824:7;6815:6;6804:9;6800:22;6779:53;:::i;:::-;6769:63;;6725:117;6881:2;6907:53;6952:7;6943:6;6932:9;6928:22;6907:53;:::i;:::-;6897:63;;6852:118;6503:474;;;;;:::o;6983:180::-;7031:77;7028:1;7021:88;7128:4;7125:1;7118:15;7152:4;7149:1;7142:15;7169:320;7213:6;7250:1;7244:4;7240:12;7230:22;;7297:1;7291:4;7287:12;7318:18;7308:81;;7374:4;7366:6;7362:17;7352:27;;7308:81;7436:2;7428:6;7425:14;7405:18;7402:38;7399:84;;7455:18;;:::i;:::-;7399:84;7220:269;7169:320;;;:::o;7495:180::-;7543:77;7540:1;7533:88;7640:4;7637:1;7630:15;7664:4;7661:1;7654:15;7681:410;7721:7;7744:20;7762:1;7744:20;:::i;:::-;7739:25;;7778:20;7796:1;7778:20;:::i;:::-;7773:25;;7833:1;7830;7826:9;7855:30;7873:11;7855:30;:::i;:::-;7844:41;;8034:1;8025:7;8021:15;8018:1;8015:22;7995:1;7988:9;7968:83;7945:139;;8064:18;;:::i;:::-;7945:139;7729:362;7681:410;;;;:::o;8097:180::-;8145:77;8142:1;8135:88;8242:4;8239:1;8232:15;8266:4;8263:1;8256:15;8283:185;8323:1;8340:20;8358:1;8340:20;:::i;:::-;8335:25;;8374:20;8392:1;8374:20;:::i;:::-;8369:25;;8413:1;8403:35;;8418:18;;:::i;:::-;8403:35;8460:1;8457;8453:9;8448:14;;8283:185;;;;:::o;8474:332::-;8595:4;8633:2;8622:9;8618:18;8610:26;;8646:71;8714:1;8703:9;8699:17;8690:6;8646:71;:::i;:::-;8727:72;8795:2;8784:9;8780:18;8771:6;8727:72;:::i;:::-;8474:332;;;;;:::o;8812:442::-;8961:4;8999:2;8988:9;8984:18;8976:26;;9012:71;9080:1;9069:9;9065:17;9056:6;9012:71;:::i;:::-;9093:72;9161:2;9150:9;9146:18;9137:6;9093:72;:::i;:::-;9175;9243:2;9232:9;9228:18;9219:6;9175:72;:::i;:::-;8812:442;;;;;;:::o;9260:194::-;9300:4;9320:20;9338:1;9320:20;:::i;:::-;9315:25;;9354:20;9372:1;9354:20;:::i;:::-;9349:25;;9398:1;9395;9391:9;9383:17;;9422:1;9416:4;9413:11;9410:37;;;9427:18;;:::i;:::-;9410:37;9260:194;;;;:::o;9460:191::-;9500:3;9519:20;9537:1;9519:20;:::i;:::-;9514:25;;9553:20;9571:1;9553:20;:::i;:::-;9548:25;;9596:1;9593;9589:9;9582:16;;9617:3;9614:1;9611:10;9608:36;;;9624:18;;:::i;:::-;9608:36;9460:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1327400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_FEE()": "414",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2939",
								"calculateTax(uint256)": "infinite",
								"decimals()": "450",
								"getMaxFee()": "421",
								"getTaxFeePercentage()": "2565",
								"isFeeExempt(address)": "2967",
								"name()": "infinite",
								"owner()": "2633",
								"pause()": "infinite",
								"paused()": "2540",
								"renounceOwnership()": "infinite",
								"setFeeExemption(address,bool)": "infinite",
								"setTaxFee(uint256)": "infinite",
								"setTreasury(address)": "infinite",
								"symbol()": "infinite",
								"taxFee()": "2470",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"treasury()": "2597",
								"unpause()": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 414,
									"end": 5404,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 414,
									"end": 5404,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 414,
									"end": 5404,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1203,
									"end": 2062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1374,
									"end": 1384,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1347,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1349,
									"end": 1356,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1425,
									"end": 1426,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1404,
									"end": 1427,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1404,
									"end": 1427,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1404,
									"end": 1413,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1404,
									"end": 1427,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1404,
									"end": 1427,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1404,
									"end": 1427,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1400,
									"end": 1460,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1400,
									"end": 1460,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1460,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1436,
									"end": 1460,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1460,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "CFE2EA6300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1436,
									"end": 1460,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1460,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1460,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1436,
									"end": 1460,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1460,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1436,
									"end": 1460,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1460,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1460,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1460,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1460,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1460,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1400,
									"end": 1460,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1400,
									"end": 1460,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 666,
									"end": 669,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "C8"
								},
								{
									"begin": 1474,
									"end": 1481,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1491,
									"modifierDepth": 2,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1515,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1515,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1470,
									"end": 1515,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1515,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1500,
									"end": 1515,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1515,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "5BA09AE000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1500,
									"end": 1515,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1515,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1515,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1500,
									"end": 1515,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1515,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1500,
									"end": 1515,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1515,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1515,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1515,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1515,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1515,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1515,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1470,
									"end": 1515,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1536,
									"end": 1545,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1533,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1525,
									"end": 1533,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1525,
									"end": 1545,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1564,
									"end": 1571,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1561,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1555,
									"end": 1571,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1571,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1571,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1571,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1672,
									"end": 1676,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1646,
									"end": 1657,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1658,
									"end": 1668,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1669,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1676,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1711,
									"end": 1715,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1686,
									"end": 1697,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1698,
									"end": 1707,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1708,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1807,
									"end": 1850,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1813,
									"end": 1823,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1839,
									"end": 1849,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1839,
									"end": 1847,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1839,
									"end": 1847,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1839,
									"end": 1847,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1839,
									"end": 1849,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1839,
									"end": 1849,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1839,
									"end": 1849,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1839,
									"end": 1849,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1839,
									"end": 1849,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1835,
									"end": 1837,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 1835,
									"end": 1849,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1835,
									"end": 1849,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1835,
									"end": 1849,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1835,
									"end": 1849,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1835,
									"end": 1849,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1835,
									"end": 1849,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1835,
									"end": 1849,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1825,
									"end": 1832,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "F4240"
								},
								{
									"begin": 1825,
									"end": 1849,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1825,
									"end": 1849,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1825,
									"end": 1849,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1825,
									"end": 1849,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1825,
									"end": 1849,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1825,
									"end": 1849,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1825,
									"end": 1849,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1807,
									"end": 1812,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1807,
									"end": 1812,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1807,
									"end": 1812,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1807,
									"end": 1850,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1807,
									"end": 1850,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1807,
									"end": 1850,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1807,
									"end": 1850,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1807,
									"end": 1850,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1902,
									"end": 1911,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1912,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1874,
									"end": 1912,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 1899,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1874,
									"end": 1912,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1874,
									"end": 1912,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1912,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "4AB5BE82436D353E61CA18726E984E561F5C1CC7C6D38B29D2553C790434705A"
								},
								{
									"begin": 1874,
									"end": 1912,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1874,
									"end": 1912,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1912,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1874,
									"end": 1912,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1912,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1912,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1912,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1912,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1874,
									"end": 1912,
									"modifierDepth": 2,
									"name": "LOG3",
									"source": 8
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "2211ABB4BBC4D80B7505C31B54D01D15AC6E33A42C59540D309D89DAF759063A"
								},
								{
									"begin": 1941,
									"end": 1942,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1944,
									"end": 1951,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1927,
									"end": 1952,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1927,
									"end": 1952,
									"modifierDepth": 2,
									"name": "LOG1",
									"source": 8
								},
								{
									"begin": 1987,
									"end": 1997,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "69E34A174B4A0CCE59950C4C852317E9797BDCAE125FBF8B5DD8B4311384412F"
								},
								{
									"begin": 1999,
									"end": 2003,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1967,
									"end": 2004,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1967,
									"end": 2004,
									"modifierDepth": 2,
									"name": "LOG2",
									"source": 8
								},
								{
									"begin": 2039,
									"end": 2048,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "69E34A174B4A0CCE59950C4C852317E9797BDCAE125FBF8B5DD8B4311384412F"
								},
								{
									"begin": 2050,
									"end": 2054,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 2019,
									"end": 2055,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2019,
									"end": 2055,
									"modifierDepth": 2,
									"name": "LOG2",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 2062,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 414,
									"end": 5404,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 414,
									"end": 5404,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2737,
									"end": 2742,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2688,
									"end": 2770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7451,
									"end": 7452,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7432,
									"end": 7439,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7506,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7476,
									"end": 7508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7548,
									"end": 7555,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7557,
									"end": 7562,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 4861,
									"end": 5402,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4861,
									"end": 5402,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4990,
									"end": 4991,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4974,
									"end": 4992,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4974,
									"end": 4992,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4974,
									"end": 4978,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4974,
									"end": 4992,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4974,
									"end": 4992,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4974,
									"end": 4992,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4974,
									"end": 4992,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4974,
									"end": 5012,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4974,
									"end": 5012,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4974,
									"end": 5012,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 4974,
									"end": 5012,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4974,
									"end": 5012,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5010,
									"end": 5011,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4996,
									"end": 5012,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4996,
									"end": 5012,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4996,
									"end": 4998,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4996,
									"end": 5012,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4996,
									"end": 5012,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4996,
									"end": 5012,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4996,
									"end": 5012,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4974,
									"end": 5012,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 4974,
									"end": 5012,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4970,
									"end": 5355,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4970,
									"end": 5355,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 4970,
									"end": 5355,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5042,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5032,
									"end": 5038,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 5032,
									"end": 5038,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5032,
									"end": 5042,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 5345,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 5345,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 5028,
									"end": 5345,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5062,
									"end": 5073,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5096,
									"end": 5099,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5086,
									"end": 5092,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 5086,
									"end": 5092,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5077,
									"end": 5083,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5077,
									"end": 5092,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 5077,
									"end": 5092,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5077,
									"end": 5092,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5077,
									"end": 5092,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 5077,
									"end": 5092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5077,
									"end": 5092,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 5077,
									"end": 5092,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5076,
									"end": 5099,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 5076,
									"end": 5099,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5076,
									"end": 5099,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5076,
									"end": 5099,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 5076,
									"end": 5099,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5076,
									"end": 5099,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 5076,
									"end": 5099,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5062,
									"end": 5099,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5062,
									"end": 5099,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5127,
									"end": 5128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5121,
									"end": 5124,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5128,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5117,
									"end": 5331,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5117,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 5117,
									"end": 5331,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5152,
									"end": 5186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 5166,
									"end": 5170,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5172,
									"end": 5180,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 5172,
									"end": 5180,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5172,
									"end": 5180,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5172,
									"end": 5180,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5172,
									"end": 5180,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5172,
									"end": 5180,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 5172,
									"end": 5180,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 5172,
									"end": 5180,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5172,
									"end": 5180,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 5172,
									"end": 5180,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5172,
									"end": 5180,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5182,
									"end": 5185,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5152,
									"end": 5165,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 5152,
									"end": 5186,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5152,
									"end": 5186,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 5152,
									"end": 5186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5152,
									"end": 5186,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 5152,
									"end": 5186,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5208,
									"end": 5219,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5231,
									"end": 5234,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5222,
									"end": 5228,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5222,
									"end": 5234,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 5222,
									"end": 5234,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5222,
									"end": 5234,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5222,
									"end": 5234,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 5222,
									"end": 5234,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5222,
									"end": 5234,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 5222,
									"end": 5234,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5208,
									"end": 5234,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5208,
									"end": 5234,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5256,
									"end": 5284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 5270,
									"end": 5274,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5276,
									"end": 5278,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5280,
									"end": 5283,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5256,
									"end": 5269,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 5256,
									"end": 5269,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5256,
									"end": 5269,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 5256,
									"end": 5284,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5256,
									"end": 5284,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 5256,
									"end": 5284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5256,
									"end": 5284,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 5256,
									"end": 5284,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5306,
									"end": 5313,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5306,
									"end": 5313,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5306,
									"end": 5313,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 5306,
									"end": 5313,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5117,
									"end": 5331,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 5117,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5044,
									"end": 5345,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 5345,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 5028,
									"end": 5345,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4970,
									"end": 5355,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 4970,
									"end": 5355,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5364,
									"end": 5395,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 5378,
									"end": 5382,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5384,
									"end": 5386,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5388,
									"end": 5394,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5364,
									"end": 5377,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 5364,
									"end": 5377,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5364,
									"end": 5377,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 5364,
									"end": 5395,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5364,
									"end": 5395,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 5364,
									"end": 5395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5364,
									"end": 5395,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 5364,
									"end": 5395,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 5402,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 4861,
									"end": 5402,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 5402,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 5402,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 5402,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 5402,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1113,
									"end": 1258,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 1113,
									"end": 1258,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1350,
									"end": 1369,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1350,
									"end": 1367,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1369,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1350,
									"end": 1369,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1369,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1369,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1350,
									"end": 1369,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1221,
									"end": 1251,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 1235,
									"end": 1239,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1241,
									"end": 1243,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1245,
									"end": 1250,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1221,
									"end": 1234,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1221,
									"end": 1234,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1221,
									"end": 1234,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1221,
									"end": 1251,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1221,
									"end": 1251,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1221,
									"end": 1251,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1221,
									"end": 1251,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 1221,
									"end": 1251,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1113,
									"end": 1258,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1113,
									"end": 1258,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1113,
									"end": 1258,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1113,
									"end": 1258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1878,
									"end": 2006,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1878,
									"end": 2006,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1943,
									"end": 1951,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1943,
									"end": 1949,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1943,
									"end": 1949,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1943,
									"end": 1949,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1943,
									"end": 1951,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1943,
									"end": 1951,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1943,
									"end": 1951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1943,
									"end": 1951,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1943,
									"end": 1951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1939,
									"end": 2000,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1939,
									"end": 2000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1939,
									"end": 2000,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "PUSH",
									"source": 7,
									"value": "D93C066500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 1989,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1939,
									"end": 2000,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1939,
									"end": 2000,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1878,
									"end": 2006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6017,
									"end": 6018,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6001,
									"end": 6005,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6153,
									"end": 6158,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 6137,
									"end": 6158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "tag",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6208,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6220,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6221,
									"end": 6225,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6258,
									"end": 6263,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6244,
									"end": 6255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6315,
									"end": 6319,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6334,
									"end": 6339,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 6290,
									"end": 6340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "tag",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "tag",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6507,
									"end": 6512,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6493,
									"end": 6504,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6484,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6485,
									"end": 6489,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6175,
									"end": 6537,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6565,
									"end": 6566,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6551,
									"end": 6553,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6730,
									"end": 6735,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6942,
									"end": 6947,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6934,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6935,
									"end": 6937,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7004,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6996,
									"end": 7000,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7006,
									"end": 7011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 6987,
									"end": 7012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "tag",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1810,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1726,
									"end": 1810,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1773,
									"end": 1777,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1796,
									"end": 1803,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1789,
									"end": 1803,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1789,
									"end": 1803,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1726,
									"end": 1810,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1726,
									"end": 1810,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 9
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "151"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 9,
									"value": "151"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2689,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2640,
									"end": 2645,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2636,
									"end": 2690,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2570,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "tag",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2746,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 2786,
									"end": 2791,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 2768,
									"end": 2792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "tag",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2702,
									"end": 2798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 2877,
									"end": 2901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "tag",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2870,
									"end": 2875,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 2902,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "164"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2916,
									"end": 2917,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2913,
									"end": 2914,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2906,
									"end": 2918,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "tag",
									"source": 9,
									"value": "164"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2804,
									"end": 2926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2989,
									"end": 2994,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3014,
									"end": 3027,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 3063,
									"end": 3068,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 3036,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "tag",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2932,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3118,
									"end": 3125,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3147,
									"end": 3152,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3136,
									"end": 3152,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3136,
									"end": 3152,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 3158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 3255,
									"end": 3260,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 3237,
									"end": 3261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "tag",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3230,
									"end": 3235,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3227,
									"end": 3262,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3276,
									"end": 3277,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3273,
									"end": 3274,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3266,
									"end": 3278,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "tag",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3164,
									"end": 3286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3349,
									"end": 3354,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3380,
									"end": 3386,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3374,
									"end": 3387,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3365,
									"end": 3387,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3365,
									"end": 3387,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 3423,
									"end": 3428,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 3396,
									"end": 3429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "tag",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3292,
									"end": 3435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3558,
									"end": 3564,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3566,
									"end": 3572,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3574,
									"end": 3580,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3582,
									"end": 3588,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3631,
									"end": 3634,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3619,
									"end": 3628,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3610,
									"end": 3617,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3606,
									"end": 3629,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3602,
									"end": 3635,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3638,
									"end": 3717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "tag",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "tag",
									"source": 9,
									"value": "174"
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3779,
									"end": 3780,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3768,
									"end": 3777,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3764,
									"end": 3781,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3758,
									"end": 3782,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3809,
									"end": 3827,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3801,
									"end": 3807,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3798,
									"end": 3828,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3795,
									"end": 3912,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3795,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "176"
								},
								{
									"begin": 3795,
									"end": 3912,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3910,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 3831,
									"end": 3910,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3831,
									"end": 3910,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3910,
									"name": "tag",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 3831,
									"end": 3910,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3795,
									"end": 3912,
									"name": "tag",
									"source": 9,
									"value": "176"
								},
								{
									"begin": 3795,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3936,
									"end": 4010,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 4002,
									"end": 4009,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3993,
									"end": 3999,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3982,
									"end": 3991,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 3978,
									"end": 4000,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3936,
									"end": 4010,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 3936,
									"end": 4010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3936,
									"end": 4010,
									"name": "tag",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 3936,
									"end": 4010,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3926,
									"end": 4010,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3926,
									"end": 4010,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3729,
									"end": 4020,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4080,
									"end": 4082,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4069,
									"end": 4078,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4065,
									"end": 4083,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4059,
									"end": 4084,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4111,
									"end": 4129,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4103,
									"end": 4109,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4100,
									"end": 4130,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4097,
									"end": 4214,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4097,
									"end": 4214,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 4097,
									"end": 4214,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4133,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 4133,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 4133,
									"end": 4212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4133,
									"end": 4212,
									"name": "tag",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 4133,
									"end": 4212,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4097,
									"end": 4214,
									"name": "tag",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 4097,
									"end": 4214,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4238,
									"end": 4312,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 4304,
									"end": 4311,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 4295,
									"end": 4301,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4284,
									"end": 4293,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4280,
									"end": 4302,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4238,
									"end": 4312,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 4238,
									"end": 4312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4238,
									"end": 4312,
									"name": "tag",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 4238,
									"end": 4312,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4228,
									"end": 4312,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4228,
									"end": 4312,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4030,
									"end": 4322,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4361,
									"end": 4363,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4387,
									"end": 4451,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "182"
								},
								{
									"begin": 4443,
									"end": 4450,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 4434,
									"end": 4440,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4423,
									"end": 4432,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4419,
									"end": 4441,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4387,
									"end": 4451,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 4387,
									"end": 4451,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4387,
									"end": 4451,
									"name": "tag",
									"source": 9,
									"value": "182"
								},
								{
									"begin": 4387,
									"end": 4451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4377,
									"end": 4451,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4377,
									"end": 4451,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4332,
									"end": 4461,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4500,
									"end": 4502,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 4526,
									"end": 4590,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "183"
								},
								{
									"begin": 4582,
									"end": 4589,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 4573,
									"end": 4579,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4562,
									"end": 4571,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4558,
									"end": 4580,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4526,
									"end": 4590,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 4526,
									"end": 4590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4526,
									"end": 4590,
									"name": "tag",
									"source": 9,
									"value": "183"
								},
								{
									"begin": 4526,
									"end": 4590,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4516,
									"end": 4590,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4516,
									"end": 4590,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4471,
									"end": 4600,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3441,
									"end": 4607,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "tag",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4665,
									"end": 4671,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4699,
									"end": 4704,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4693,
									"end": 4705,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4683,
									"end": 4705,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4683,
									"end": 4705,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4613,
									"end": 4712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4718,
									"end": 4898,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 4718,
									"end": 4898,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4766,
									"end": 4843,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4763,
									"end": 4764,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4756,
									"end": 4844,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4863,
									"end": 4867,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 4860,
									"end": 4861,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 4853,
									"end": 4868,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4887,
									"end": 4891,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4884,
									"end": 4885,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4877,
									"end": 4892,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4948,
									"end": 4954,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4985,
									"end": 4986,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 4979,
									"end": 4983,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4975,
									"end": 4987,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4965,
									"end": 4987,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4965,
									"end": 4987,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5032,
									"end": 5033,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5026,
									"end": 5030,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5022,
									"end": 5034,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5053,
									"end": 5071,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "187"
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5109,
									"end": 5113,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 5101,
									"end": 5107,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5097,
									"end": 5114,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5087,
									"end": 5114,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5087,
									"end": 5114,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "tag",
									"source": 9,
									"value": "187"
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5171,
									"end": 5173,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5163,
									"end": 5169,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5160,
									"end": 5174,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5140,
									"end": 5158,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5137,
									"end": 5175,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "188"
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 5190,
									"end": 5208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "tag",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "tag",
									"source": 9,
									"value": "188"
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4955,
									"end": 5224,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4904,
									"end": 5224,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5279,
									"end": 5283,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5302,
									"end": 5305,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5294,
									"end": 5305,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5294,
									"end": 5305,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5325,
									"end": 5328,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5322,
									"end": 5323,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5315,
									"end": 5329,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5359,
									"end": 5363,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5356,
									"end": 5357,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5346,
									"end": 5364,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 5338,
									"end": 5364,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5338,
									"end": 5364,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5230,
									"end": 5371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5414,
									"end": 5420,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5461,
									"end": 5463,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5456,
									"end": 5458,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 5449,
									"end": 5454,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5445,
									"end": 5459,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5441,
									"end": 5464,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 5431,
									"end": 5464,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5431,
									"end": 5464,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5377,
									"end": 5470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5520,
									"end": 5528,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5570,
									"end": 5575,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5564,
									"end": 5568,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5560,
									"end": 5576,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 5539,
									"end": 5576,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5539,
									"end": 5576,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5476,
									"end": 5583,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5658,
									"end": 5664,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5708,
									"end": 5709,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 5696,
									"end": 5706,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5692,
									"end": 5710,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 5761,
									"end": 5827,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5750,
									"end": 5759,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 5731,
									"end": 5828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "tag",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "195"
								},
								{
									"begin": 5879,
									"end": 5887,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5868,
									"end": 5877,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 5849,
									"end": 5888,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "tag",
									"source": 9,
									"value": "195"
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5837,
									"end": 5888,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 5837,
									"end": 5888,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5921,
									"end": 5925,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5917,
									"end": 5926,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 5910,
									"end": 5915,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5906,
									"end": 5927,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5897,
									"end": 5927,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 5897,
									"end": 5927,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5970,
									"end": 5974,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5960,
									"end": 5968,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5956,
									"end": 5975,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5949,
									"end": 5954,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5946,
									"end": 5976,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 5936,
									"end": 5976,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5936,
									"end": 5976,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5665,
									"end": 5982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5665,
									"end": 5982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5589,
									"end": 5982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "tag",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6016,
									"end": 6019,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6037,
									"end": 6042,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6042,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6042,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5988,
									"end": 6048,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6104,
									"end": 6113,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "198"
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "200"
								},
								{
									"begin": 6182,
									"end": 6187,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 6164,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "tag",
									"source": 9,
									"value": "200"
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 6155,
									"end": 6189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "tag",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 6137,
									"end": 6190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "tag",
									"source": 9,
									"value": "198"
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6124,
									"end": 6190,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6124,
									"end": 6190,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6054,
									"end": 6196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6245,
									"end": 6248,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6266,
									"end": 6271,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6259,
									"end": 6271,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6259,
									"end": 6271,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6202,
									"end": 6277,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "203"
								},
								{
									"begin": 6424,
									"end": 6431,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 6393,
									"end": 6432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "tag",
									"source": 9,
									"value": "203"
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "204"
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "205"
								},
								{
									"begin": 6527,
									"end": 6543,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 6503,
									"end": 6544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "tag",
									"source": 9,
									"value": "205"
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6495,
									"end": 6501,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6488,
									"end": 6492,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6482,
									"end": 6493,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 6454,
									"end": 6545,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "tag",
									"source": 9,
									"value": "204"
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6448,
									"end": 6452,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6441,
									"end": 6546,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6359,
									"end": 6552,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6283,
									"end": 6552,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6558,
									"end": 6631,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 6558,
									"end": 6631,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6603,
									"end": 6606,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6624,
									"end": 6625,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6617,
									"end": 6625,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6617,
									"end": 6625,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6558,
									"end": 6631,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6558,
									"end": 6631,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "tag",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "208"
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 6714,
									"end": 6746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "tag",
									"source": 9,
									"value": "208"
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "209"
								},
								{
									"begin": 6813,
									"end": 6819,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6805,
									"end": 6811,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6799,
									"end": 6803,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 6755,
									"end": 6820,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "tag",
									"source": 9,
									"value": "209"
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6690,
									"end": 6826,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6637,
									"end": 6826,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "tag",
									"source": 9,
									"value": "211"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6909,
									"end": 6912,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6902,
									"end": 6907,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6899,
									"end": 6913,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "213"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "214"
								},
								{
									"begin": 7000,
									"end": 7001,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6993,
									"end": 6998,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 6963,
									"end": 7002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "tag",
									"source": 9,
									"value": "214"
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6936,
									"end": 6937,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6929,
									"end": 6934,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6916,
									"end": 6938,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6916,
									"end": 6938,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "211"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "tag",
									"source": 9,
									"value": "213"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6832,
									"end": 7018,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7125,
									"end": 7127,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7120,
									"end": 7123,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7117,
									"end": 7128,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "216"
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "217"
								},
								{
									"begin": 7191,
									"end": 7196,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 7159,
									"end": 7197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "tag",
									"source": 9,
									"value": "217"
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "218"
								},
								{
									"begin": 7261,
									"end": 7271,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 7243,
									"end": 7272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "tag",
									"source": 9,
									"value": "218"
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7233,
									"end": 7241,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7229,
									"end": 7273,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7426,
									"end": 7428,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7414,
									"end": 7424,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7411,
									"end": 7429,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "219"
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7447,
									"end": 7455,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7432,
									"end": 7455,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7432,
									"end": 7455,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "tag",
									"source": 9,
									"value": "219"
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "220"
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "221"
								},
								{
									"begin": 7544,
									"end": 7547,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 7526,
									"end": 7548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "tag",
									"source": 9,
									"value": "221"
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7516,
									"end": 7524,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7512,
									"end": 7549,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7499,
									"end": 7510,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 7470,
									"end": 7550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "tag",
									"source": 9,
									"value": "220"
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7129,
									"end": 7560,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7129,
									"end": 7560,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "tag",
									"source": 9,
									"value": "216"
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7024,
									"end": 7567,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7627,
									"end": 7635,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7677,
									"end": 7682,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7671,
									"end": 7675,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7667,
									"end": 7683,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 7646,
									"end": 7683,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7646,
									"end": 7683,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7573,
									"end": 7690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7740,
									"end": 7746,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "224"
								},
								{
									"begin": 7821,
									"end": 7822,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7817,
									"end": 7823,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 7809,
									"end": 7814,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7806,
									"end": 7807,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 7802,
									"end": 7815,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 7773,
									"end": 7824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "tag",
									"source": 9,
									"value": "224"
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7769,
									"end": 7825,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 7854,
									"end": 7858,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 7848,
									"end": 7852,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7844,
									"end": 7859,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 7834,
									"end": 7859,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7834,
									"end": 7859,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7747,
									"end": 7865,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7696,
									"end": 7865,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "tag",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7946,
									"end": 7950,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "226"
								},
								{
									"begin": 8117,
									"end": 8120,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8111,
									"end": 8115,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 8092,
									"end": 8121,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "tag",
									"source": 9,
									"value": "226"
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8084,
									"end": 8121,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8084,
									"end": 8121,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8154,
									"end": 8157,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8151,
									"end": 8152,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 8147,
									"end": 8158,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 8141,
									"end": 8145,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8138,
									"end": 8159,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 8130,
									"end": 8159,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8130,
									"end": 8159,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7870,
									"end": 8165,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "228"
								},
								{
									"begin": 8320,
									"end": 8323,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 8287,
									"end": 8324,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "tag",
									"source": 9,
									"value": "228"
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8389,
									"end": 8407,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8381,
									"end": 8387,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8378,
									"end": 8408,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "229"
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "230"
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 8411,
									"end": 8429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "tag",
									"source": 9,
									"value": "230"
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "tag",
									"source": 9,
									"value": "229"
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "231"
								},
								{
									"begin": 8487,
									"end": 8491,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8481,
									"end": 8492,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 8455,
									"end": 8493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "tag",
									"source": 9,
									"value": "231"
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "232"
								},
								{
									"begin": 8600,
									"end": 8606,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8592,
									"end": 8598,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8586,
									"end": 8590,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 8540,
									"end": 8607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "tag",
									"source": 9,
									"value": "232"
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8634,
									"end": 8635,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8658,
									"end": 8662,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8645,
									"end": 8662,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8645,
									"end": 8662,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8690,
									"end": 8692,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 8682,
									"end": 8688,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8679,
									"end": 8693,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 8707,
									"end": 8708,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "234"
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9364,
									"end": 9365,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9381,
									"end": 9387,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "235"
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9430,
									"end": 9439,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9425,
									"end": 9428,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 9421,
									"end": 9440,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9415,
									"end": 9441,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 9406,
									"end": 9441,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9406,
									"end": 9441,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "tag",
									"source": 9,
									"value": "235"
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "236"
								},
								{
									"begin": 9541,
									"end": 9547,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 9534,
									"end": 9539,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 9481,
									"end": 9548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "tag",
									"source": 9,
									"value": "236"
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9475,
									"end": 9479,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 9468,
									"end": 9549,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 9337,
									"end": 9559,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "233"
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "tag",
									"source": 9,
									"value": "234"
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8754,
									"end": 8758,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 8750,
									"end": 8759,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 8742,
									"end": 8748,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8738,
									"end": 8760,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "237"
								},
								{
									"begin": 8820,
									"end": 8824,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 8788,
									"end": 8825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "tag",
									"source": 9,
									"value": "237"
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8847,
									"end": 8848,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "tag",
									"source": 9,
									"value": "238"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8875,
									"end": 8882,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8872,
									"end": 8873,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8869,
									"end": 8883,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "240"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8954,
									"end": 8963,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8949,
									"end": 8952,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8945,
									"end": 8964,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8939,
									"end": 8965,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8931,
									"end": 8937,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8924,
									"end": 8966,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 9005,
									"end": 9006,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8997,
									"end": 9003,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8993,
									"end": 9007,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8983,
									"end": 9007,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8983,
									"end": 9007,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9052,
									"end": 9054,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 9041,
									"end": 9050,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 9037,
									"end": 9055,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9024,
									"end": 9055,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 9024,
									"end": 9055,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8898,
									"end": 8902,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8895,
									"end": 8896,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8891,
									"end": 8903,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8886,
									"end": 8903,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8886,
									"end": 8903,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "238"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "tag",
									"source": 9,
									"value": "240"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9097,
									"end": 9103,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 9088,
									"end": 9095,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9085,
									"end": 9104,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "241"
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 9155,
									"end": 9164,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9150,
									"end": 9153,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 9146,
									"end": 9165,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9140,
									"end": 9166,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "242"
								},
								{
									"begin": 9240,
									"end": 9244,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 9232,
									"end": 9238,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 9228,
									"end": 9245,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 9217,
									"end": 9226,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 9198,
									"end": 9246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "tag",
									"source": 9,
									"value": "242"
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9190,
									"end": 9196,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9183,
									"end": 9247,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 9105,
									"end": 9261,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "tag",
									"source": 9,
									"value": "241"
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9307,
									"end": 9308,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 9303,
									"end": 9304,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 9295,
									"end": 9301,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 9291,
									"end": 9305,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 9287,
									"end": 9309,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9281,
									"end": 9285,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 9274,
									"end": 9310,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8709,
									"end": 9320,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8709,
									"end": 9320,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8709,
									"end": 9320,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "tag",
									"source": 9,
									"value": "233"
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8262,
									"end": 9565,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8262,
									"end": 9565,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8262,
									"end": 9565,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8170,
									"end": 9565,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9571,
									"end": 9689,
									"name": "tag",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 9571,
									"end": 9689,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9658,
									"end": 9682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "244"
								},
								{
									"begin": 9676,
									"end": 9681,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9658,
									"end": 9682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 9658,
									"end": 9682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9658,
									"end": 9682,
									"name": "tag",
									"source": 9,
									"value": "244"
								},
								{
									"begin": 9658,
									"end": 9682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9653,
									"end": 9656,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9646,
									"end": 9683,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9571,
									"end": 9689,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9571,
									"end": 9689,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9571,
									"end": 9689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9788,
									"end": 9792,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9826,
									"end": 9828,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 9815,
									"end": 9824,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9811,
									"end": 9829,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9803,
									"end": 9829,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9803,
									"end": 9829,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9839,
									"end": 9910,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "246"
								},
								{
									"begin": 9907,
									"end": 9908,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9896,
									"end": 9905,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9892,
									"end": 9909,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9883,
									"end": 9889,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 9839,
									"end": 9910,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 9839,
									"end": 9910,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9839,
									"end": 9910,
									"name": "tag",
									"source": 9,
									"value": "246"
								},
								{
									"begin": 9839,
									"end": 9910,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9695,
									"end": 9917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9923,
									"end": 10103,
									"name": "tag",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 9923,
									"end": 10103,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9971,
									"end": 10048,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9968,
									"end": 9969,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9961,
									"end": 10049,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 10068,
									"end": 10072,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 10065,
									"end": 10066,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 10058,
									"end": 10073,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 10092,
									"end": 10096,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 10089,
									"end": 10090,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10082,
									"end": 10097,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 10109,
									"end": 10211,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 10109,
									"end": 10211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10151,
									"end": 10159,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10198,
									"end": 10203,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10195,
									"end": 10196,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 10191,
									"end": 10204,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 10170,
									"end": 10204,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10170,
									"end": 10204,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10109,
									"end": 10211,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10109,
									"end": 10211,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10109,
									"end": 10211,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10109,
									"end": 10211,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10217,
									"end": 11065,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 10217,
									"end": 11065,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10278,
									"end": 10283,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10285,
									"end": 10289,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10309,
									"end": 10315,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10300,
									"end": 10315,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10300,
									"end": 10315,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10333,
									"end": 10338,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10324,
									"end": 10338,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10324,
									"end": 10338,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10347,
									"end": 11059,
									"name": "tag",
									"source": 9,
									"value": "250"
								},
								{
									"begin": 10347,
									"end": 11059,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10368,
									"end": 10369,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 10358,
									"end": 10366,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 10355,
									"end": 10370,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 10347,
									"end": 11059,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 10347,
									"end": 11059,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "252"
								},
								{
									"begin": 10347,
									"end": 11059,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10463,
									"end": 10467,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 10458,
									"end": 10461,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 10454,
									"end": 10468,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 10448,
									"end": 10452,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10445,
									"end": 10469,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 10442,
									"end": 10492,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 10442,
									"end": 10492,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "253"
								},
								{
									"begin": 10442,
									"end": 10492,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10472,
									"end": 10490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "254"
								},
								{
									"begin": 10472,
									"end": 10490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 10472,
									"end": 10490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10472,
									"end": 10490,
									"name": "tag",
									"source": 9,
									"value": "254"
								},
								{
									"begin": 10472,
									"end": 10490,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10442,
									"end": 10492,
									"name": "tag",
									"source": 9,
									"value": "253"
								},
								{
									"begin": 10442,
									"end": 10492,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10522,
									"end": 10523,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 10512,
									"end": 10520,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 10508,
									"end": 10524,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 10505,
									"end": 10956,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 10505,
									"end": 10956,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "255"
								},
								{
									"begin": 10505,
									"end": 10956,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10937,
									"end": 10941,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 10930,
									"end": 10935,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10926,
									"end": 10942,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 10917,
									"end": 10942,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10917,
									"end": 10942,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10505,
									"end": 10956,
									"name": "tag",
									"source": 9,
									"value": "255"
								},
								{
									"begin": 10505,
									"end": 10956,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10987,
									"end": 10991,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 10981,
									"end": 10985,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 10977,
									"end": 10992,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 10969,
									"end": 10992,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10969,
									"end": 10992,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11017,
									"end": 11049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "256"
								},
								{
									"begin": 11040,
									"end": 11048,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 11017,
									"end": 11049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 11017,
									"end": 11049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11017,
									"end": 11049,
									"name": "tag",
									"source": 9,
									"value": "256"
								},
								{
									"begin": 11017,
									"end": 11049,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11005,
									"end": 11049,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 11005,
									"end": 11049,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10347,
									"end": 11059,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "250"
								},
								{
									"begin": 10347,
									"end": 11059,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10347,
									"end": 11059,
									"name": "tag",
									"source": 9,
									"value": "252"
								},
								{
									"begin": 10347,
									"end": 11059,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10217,
									"end": 11065,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 10217,
									"end": 11065,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10217,
									"end": 11065,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 10217,
									"end": 11065,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 10217,
									"end": 11065,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10217,
									"end": 11065,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10217,
									"end": 11065,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10217,
									"end": 11065,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11071,
									"end": 12144,
									"name": "tag",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 11071,
									"end": 12144,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11125,
									"end": 11130,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11316,
									"end": 11324,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11306,
									"end": 11346,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "258"
								},
								{
									"begin": 11306,
									"end": 11346,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11337,
									"end": 11338,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 11328,
									"end": 11338,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11328,
									"end": 11338,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11339,
									"end": 11344,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "257"
								},
								{
									"begin": 11339,
									"end": 11344,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11306,
									"end": 11346,
									"name": "tag",
									"source": 9,
									"value": "258"
								},
								{
									"begin": 11306,
									"end": 11346,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11365,
									"end": 11369,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11355,
									"end": 11391,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "259"
								},
								{
									"begin": 11355,
									"end": 11391,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11382,
									"end": 11383,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11373,
									"end": 11383,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11373,
									"end": 11383,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11384,
									"end": 11389,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "257"
								},
								{
									"begin": 11384,
									"end": 11389,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11355,
									"end": 11391,
									"name": "tag",
									"source": 9,
									"value": "259"
								},
								{
									"begin": 11355,
									"end": 11391,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11451,
									"end": 11455,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11499,
									"end": 11500,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 11494,
									"end": 11521,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11494,
									"end": 11521,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 11494,
									"end": 11521,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "261"
								},
								{
									"begin": 11494,
									"end": 11521,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11535,
									"end": 11536,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 11530,
									"end": 11721,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11530,
									"end": 11721,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 11530,
									"end": 11721,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "262"
								},
								{
									"begin": 11530,
									"end": 11721,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11444,
									"end": 11721,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "260"
								},
								{
									"begin": 11444,
									"end": 11721,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11494,
									"end": 11521,
									"name": "tag",
									"source": 9,
									"value": "261"
								},
								{
									"begin": 11494,
									"end": 11521,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11512,
									"end": 11513,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 11503,
									"end": 11513,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11503,
									"end": 11513,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11514,
									"end": 11519,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11514,
									"end": 11519,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "257"
								},
								{
									"begin": 11514,
									"end": 11519,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11530,
									"end": 11721,
									"name": "tag",
									"source": 9,
									"value": "262"
								},
								{
									"begin": 11530,
									"end": 11721,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11575,
									"end": 11578,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 11565,
									"end": 11573,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11562,
									"end": 11579,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 11559,
									"end": 11602,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 11559,
									"end": 11602,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "263"
								},
								{
									"begin": 11559,
									"end": 11602,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11582,
									"end": 11600,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "264"
								},
								{
									"begin": 11582,
									"end": 11600,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 11582,
									"end": 11600,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11582,
									"end": 11600,
									"name": "tag",
									"source": 9,
									"value": "264"
								},
								{
									"begin": 11582,
									"end": 11600,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11559,
									"end": 11602,
									"name": "tag",
									"source": 9,
									"value": "263"
								},
								{
									"begin": 11559,
									"end": 11602,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11631,
									"end": 11639,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11628,
									"end": 11629,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 11624,
									"end": 11640,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 11615,
									"end": 11640,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 11615,
									"end": 11640,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11666,
									"end": 11669,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11659,
									"end": 11664,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11656,
									"end": 11670,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 11653,
									"end": 11693,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 11653,
									"end": 11693,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "265"
								},
								{
									"begin": 11653,
									"end": 11693,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11673,
									"end": 11691,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "266"
								},
								{
									"begin": 11673,
									"end": 11691,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 11673,
									"end": 11691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11673,
									"end": 11691,
									"name": "tag",
									"source": 9,
									"value": "266"
								},
								{
									"begin": 11673,
									"end": 11691,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11653,
									"end": 11693,
									"name": "tag",
									"source": 9,
									"value": "265"
								},
								{
									"begin": 11653,
									"end": 11693,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11706,
									"end": 11711,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11706,
									"end": 11711,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "257"
								},
								{
									"begin": 11706,
									"end": 11711,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11444,
									"end": 11721,
									"name": "tag",
									"source": 9,
									"value": "260"
								},
								{
									"begin": 11444,
									"end": 11721,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11444,
									"end": 11721,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11830,
									"end": 11832,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 11820,
									"end": 11828,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11817,
									"end": 11833,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 11811,
									"end": 11814,
									"name": "PUSH",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 11805,
									"end": 11809,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11802,
									"end": 11815,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 11798,
									"end": 11834,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 11780,
									"end": 11782,
									"name": "PUSH",
									"source": 9,
									"value": "4E"
								},
								{
									"begin": 11770,
									"end": 11778,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11767,
									"end": 11783,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 11762,
									"end": 11764,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 11756,
									"end": 11760,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11753,
									"end": 11765,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 11749,
									"end": 11784,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 11733,
									"end": 11844,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 11730,
									"end": 11976,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 11730,
									"end": 11976,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "267"
								},
								{
									"begin": 11730,
									"end": 11976,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11886,
									"end": 11894,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11880,
									"end": 11884,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11876,
									"end": 11895,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 11867,
									"end": 11895,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11867,
									"end": 11895,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11921,
									"end": 11924,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11914,
									"end": 11919,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 11911,
									"end": 11925,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 11908,
									"end": 11948,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 11908,
									"end": 11948,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "268"
								},
								{
									"begin": 11908,
									"end": 11948,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 11928,
									"end": 11946,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "269"
								},
								{
									"begin": 11928,
									"end": 11946,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 11928,
									"end": 11946,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11928,
									"end": 11946,
									"name": "tag",
									"source": 9,
									"value": "269"
								},
								{
									"begin": 11928,
									"end": 11946,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11908,
									"end": 11948,
									"name": "tag",
									"source": 9,
									"value": "268"
								},
								{
									"begin": 11908,
									"end": 11948,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11961,
									"end": 11966,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "257"
								},
								{
									"begin": 11961,
									"end": 11966,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11730,
									"end": 11976,
									"name": "tag",
									"source": 9,
									"value": "267"
								},
								{
									"begin": 11730,
									"end": 11976,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12001,
									"end": 12043,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "270"
								},
								{
									"begin": 12039,
									"end": 12042,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 12029,
									"end": 12037,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 12023,
									"end": 12027,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 12020,
									"end": 12021,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 12001,
									"end": 12043,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 12001,
									"end": 12043,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12001,
									"end": 12043,
									"name": "tag",
									"source": 9,
									"value": "270"
								},
								{
									"begin": 12001,
									"end": 12043,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11986,
									"end": 12043,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 11986,
									"end": 12043,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11986,
									"end": 12043,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11986,
									"end": 12043,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12075,
									"end": 12079,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 12070,
									"end": 12073,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 12066,
									"end": 12080,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 12059,
									"end": 12064,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 12056,
									"end": 12081,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 12053,
									"end": 12104,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 12053,
									"end": 12104,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "271"
								},
								{
									"begin": 12053,
									"end": 12104,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 12084,
									"end": 12102,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "272"
								},
								{
									"begin": 12084,
									"end": 12102,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 12084,
									"end": 12102,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12084,
									"end": 12102,
									"name": "tag",
									"source": 9,
									"value": "272"
								},
								{
									"begin": 12084,
									"end": 12102,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12053,
									"end": 12104,
									"name": "tag",
									"source": 9,
									"value": "271"
								},
								{
									"begin": 12053,
									"end": 12104,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12133,
									"end": 12137,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 12126,
									"end": 12131,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 12122,
									"end": 12138,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 12113,
									"end": 12138,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12113,
									"end": 12138,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11071,
									"end": 12144,
									"name": "tag",
									"source": 9,
									"value": "257"
								},
								{
									"begin": 11071,
									"end": 12144,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11071,
									"end": 12144,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 11071,
									"end": 12144,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 11071,
									"end": 12144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11071,
									"end": 12144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11071,
									"end": 12144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11071,
									"end": 12144,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12150,
									"end": 12236,
									"name": "tag",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 12150,
									"end": 12236,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12185,
									"end": 12192,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12225,
									"end": 12229,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 12218,
									"end": 12223,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12214,
									"end": 12230,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 12203,
									"end": 12230,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12203,
									"end": 12230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12150,
									"end": 12236,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12150,
									"end": 12236,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12150,
									"end": 12236,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12150,
									"end": 12236,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12242,
									"end": 12523,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 12242,
									"end": 12523,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12300,
									"end": 12305,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12324,
									"end": 12347,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "275"
								},
								{
									"begin": 12342,
									"end": 12346,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12324,
									"end": 12347,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 12324,
									"end": 12347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12324,
									"end": 12347,
									"name": "tag",
									"source": 9,
									"value": "275"
								},
								{
									"begin": 12324,
									"end": 12347,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12316,
									"end": 12347,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12316,
									"end": 12347,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12368,
									"end": 12393,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "276"
								},
								{
									"begin": 12384,
									"end": 12392,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 12368,
									"end": 12393,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 12368,
									"end": 12393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12368,
									"end": 12393,
									"name": "tag",
									"source": 9,
									"value": "276"
								},
								{
									"begin": 12368,
									"end": 12393,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12356,
									"end": 12393,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 12356,
									"end": 12393,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12412,
									"end": 12516,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "277"
								},
								{
									"begin": 12449,
									"end": 12515,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12439,
									"end": 12447,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 12433,
									"end": 12437,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 12412,
									"end": 12516,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 12412,
									"end": 12516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12412,
									"end": 12516,
									"name": "tag",
									"source": 9,
									"value": "277"
								},
								{
									"begin": 12412,
									"end": 12516,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12403,
									"end": 12516,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12403,
									"end": 12516,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12242,
									"end": 12523,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 12242,
									"end": 12523,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12242,
									"end": 12523,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12242,
									"end": 12523,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12242,
									"end": 12523,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12529,
									"end": 12939,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 12529,
									"end": 12939,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12569,
									"end": 12576,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 12592,
									"end": 12612,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "279"
								},
								{
									"begin": 12610,
									"end": 12611,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12592,
									"end": 12612,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 12592,
									"end": 12612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12592,
									"end": 12612,
									"name": "tag",
									"source": 9,
									"value": "279"
								},
								{
									"begin": 12592,
									"end": 12612,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12587,
									"end": 12612,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12587,
									"end": 12612,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12626,
									"end": 12646,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "280"
								},
								{
									"begin": 12644,
									"end": 12645,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 12626,
									"end": 12646,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 12626,
									"end": 12646,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12626,
									"end": 12646,
									"name": "tag",
									"source": 9,
									"value": "280"
								},
								{
									"begin": 12626,
									"end": 12646,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12621,
									"end": 12646,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 12621,
									"end": 12646,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12681,
									"end": 12682,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12678,
									"end": 12679,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12674,
									"end": 12683,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 12703,
									"end": 12733,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "281"
								},
								{
									"begin": 12721,
									"end": 12732,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 12703,
									"end": 12733,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 12703,
									"end": 12733,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12703,
									"end": 12733,
									"name": "tag",
									"source": 9,
									"value": "281"
								},
								{
									"begin": 12703,
									"end": 12733,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12692,
									"end": 12733,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12692,
									"end": 12733,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12882,
									"end": 12883,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12873,
									"end": 12880,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 12869,
									"end": 12884,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 12866,
									"end": 12867,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 12863,
									"end": 12885,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 12843,
									"end": 12844,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 12836,
									"end": 12845,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 12816,
									"end": 12899,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 12793,
									"end": 12932,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "282"
								},
								{
									"begin": 12793,
									"end": 12932,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 12912,
									"end": 12930,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "283"
								},
								{
									"begin": 12912,
									"end": 12930,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 12912,
									"end": 12930,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12912,
									"end": 12930,
									"name": "tag",
									"source": 9,
									"value": "283"
								},
								{
									"begin": 12912,
									"end": 12930,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12793,
									"end": 12932,
									"name": "tag",
									"source": 9,
									"value": "282"
								},
								{
									"begin": 12793,
									"end": 12932,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12577,
									"end": 12939,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12529,
									"end": 12939,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 12529,
									"end": 12939,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12529,
									"end": 12939,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12529,
									"end": 12939,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12529,
									"end": 12939,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 12945,
									"end": 13030,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 12945,
									"end": 13030,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 12990,
									"end": 12997,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13019,
									"end": 13024,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 13008,
									"end": 13024,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13008,
									"end": 13024,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12945,
									"end": 13030,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 12945,
									"end": 13030,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 12945,
									"end": 13030,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 12945,
									"end": 13030,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13036,
									"end": 13194,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 13036,
									"end": 13194,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13094,
									"end": 13103,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13127,
									"end": 13188,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "286"
								},
								{
									"begin": 13145,
									"end": 13187,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "287"
								},
								{
									"begin": 13154,
									"end": 13186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "288"
								},
								{
									"begin": 13180,
									"end": 13185,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 13154,
									"end": 13186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 13154,
									"end": 13186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13154,
									"end": 13186,
									"name": "tag",
									"source": 9,
									"value": "288"
								},
								{
									"begin": 13154,
									"end": 13186,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13145,
									"end": 13187,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 13145,
									"end": 13187,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13145,
									"end": 13187,
									"name": "tag",
									"source": 9,
									"value": "287"
								},
								{
									"begin": 13145,
									"end": 13187,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13127,
									"end": 13188,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 13127,
									"end": 13188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13127,
									"end": 13188,
									"name": "tag",
									"source": 9,
									"value": "286"
								},
								{
									"begin": 13127,
									"end": 13188,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13114,
									"end": 13188,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13114,
									"end": 13188,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13036,
									"end": 13194,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 13036,
									"end": 13194,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13036,
									"end": 13194,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13036,
									"end": 13194,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13200,
									"end": 13347,
									"name": "tag",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 13200,
									"end": 13347,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13295,
									"end": 13340,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "290"
								},
								{
									"begin": 13334,
									"end": 13339,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 13295,
									"end": 13340,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 13295,
									"end": 13340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13295,
									"end": 13340,
									"name": "tag",
									"source": 9,
									"value": "290"
								},
								{
									"begin": 13295,
									"end": 13340,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13290,
									"end": 13293,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 13283,
									"end": 13341,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 13200,
									"end": 13347,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13200,
									"end": 13347,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13200,
									"end": 13347,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13353,
									"end": 13471,
									"name": "tag",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 13353,
									"end": 13471,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13440,
									"end": 13464,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "292"
								},
								{
									"begin": 13458,
									"end": 13463,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 13440,
									"end": 13464,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 13440,
									"end": 13464,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13440,
									"end": 13464,
									"name": "tag",
									"source": 9,
									"value": "292"
								},
								{
									"begin": 13440,
									"end": 13464,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13435,
									"end": 13438,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 13428,
									"end": 13465,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 13353,
									"end": 13471,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13353,
									"end": 13471,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13353,
									"end": 13471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13477,
									"end": 13825,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 13477,
									"end": 13825,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13606,
									"end": 13610,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13644,
									"end": 13646,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 13633,
									"end": 13642,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 13629,
									"end": 13647,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 13621,
									"end": 13647,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13621,
									"end": 13647,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13657,
									"end": 13736,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "294"
								},
								{
									"begin": 13733,
									"end": 13734,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13722,
									"end": 13731,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 13718,
									"end": 13735,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 13709,
									"end": 13715,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 13657,
									"end": 13736,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 13657,
									"end": 13736,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13657,
									"end": 13736,
									"name": "tag",
									"source": 9,
									"value": "294"
								},
								{
									"begin": 13657,
									"end": 13736,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13746,
									"end": 13818,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "295"
								},
								{
									"begin": 13814,
									"end": 13816,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 13803,
									"end": 13812,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 13799,
									"end": 13817,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 13790,
									"end": 13796,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 13746,
									"end": 13818,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 13746,
									"end": 13818,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13746,
									"end": 13818,
									"name": "tag",
									"source": 9,
									"value": "295"
								},
								{
									"begin": 13746,
									"end": 13818,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13477,
									"end": 13825,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 13477,
									"end": 13825,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 13477,
									"end": 13825,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13477,
									"end": 13825,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13477,
									"end": 13825,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13477,
									"end": 13825,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13831,
									"end": 13921,
									"name": "tag",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 13831,
									"end": 13921,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 13865,
									"end": 13872,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 13908,
									"end": 13913,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 13901,
									"end": 13914,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 13894,
									"end": 13915,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 13883,
									"end": 13915,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13883,
									"end": 13915,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13831,
									"end": 13921,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 13831,
									"end": 13921,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 13831,
									"end": 13921,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13831,
									"end": 13921,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 13927,
									"end": 14036,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 13927,
									"end": 14036,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14008,
									"end": 14029,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "298"
								},
								{
									"begin": 14023,
									"end": 14028,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 14008,
									"end": 14029,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 14008,
									"end": 14029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14008,
									"end": 14029,
									"name": "tag",
									"source": 9,
									"value": "298"
								},
								{
									"begin": 14008,
									"end": 14029,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14003,
									"end": 14006,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 13996,
									"end": 14030,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 13927,
									"end": 14036,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13927,
									"end": 14036,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 13927,
									"end": 14036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14042,
									"end": 14252,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 14042,
									"end": 14252,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14129,
									"end": 14133,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 14167,
									"end": 14169,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 14156,
									"end": 14165,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14152,
									"end": 14170,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 14144,
									"end": 14170,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 14144,
									"end": 14170,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14180,
									"end": 14245,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "300"
								},
								{
									"begin": 14242,
									"end": 14243,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 14231,
									"end": 14240,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 14227,
									"end": 14244,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 14218,
									"end": 14224,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 14180,
									"end": 14245,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 14180,
									"end": 14245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14180,
									"end": 14245,
									"name": "tag",
									"source": 9,
									"value": "300"
								},
								{
									"begin": 14180,
									"end": 14245,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14042,
									"end": 14252,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 14042,
									"end": 14252,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14042,
									"end": 14252,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14042,
									"end": 14252,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14042,
									"end": 14252,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14258,
									"end": 14438,
									"name": "tag",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 14258,
									"end": 14438,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14306,
									"end": 14383,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14303,
									"end": 14304,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 14296,
									"end": 14384,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 14403,
									"end": 14407,
									"name": "PUSH",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 14400,
									"end": 14401,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 14393,
									"end": 14408,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 14427,
									"end": 14431,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 14424,
									"end": 14425,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 14417,
									"end": 14432,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 14444,
									"end": 14629,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 14444,
									"end": 14629,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14484,
									"end": 14485,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 14501,
									"end": 14521,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "303"
								},
								{
									"begin": 14519,
									"end": 14520,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14501,
									"end": 14521,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 14501,
									"end": 14521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14501,
									"end": 14521,
									"name": "tag",
									"source": 9,
									"value": "303"
								},
								{
									"begin": 14501,
									"end": 14521,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14496,
									"end": 14521,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14496,
									"end": 14521,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14535,
									"end": 14555,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "304"
								},
								{
									"begin": 14553,
									"end": 14554,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 14535,
									"end": 14555,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 14535,
									"end": 14555,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14535,
									"end": 14555,
									"name": "tag",
									"source": 9,
									"value": "304"
								},
								{
									"begin": 14535,
									"end": 14555,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14530,
									"end": 14555,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 14530,
									"end": 14555,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14574,
									"end": 14575,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14564,
									"end": 14599,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "305"
								},
								{
									"begin": 14564,
									"end": 14599,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 14579,
									"end": 14597,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "306"
								},
								{
									"begin": 14579,
									"end": 14597,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 14579,
									"end": 14597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14579,
									"end": 14597,
									"name": "tag",
									"source": 9,
									"value": "306"
								},
								{
									"begin": 14579,
									"end": 14597,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14564,
									"end": 14599,
									"name": "tag",
									"source": 9,
									"value": "305"
								},
								{
									"begin": 14564,
									"end": 14599,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14621,
									"end": 14622,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14618,
									"end": 14619,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14614,
									"end": 14623,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 14609,
									"end": 14623,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 14609,
									"end": 14623,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14444,
									"end": 14629,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 14444,
									"end": 14629,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14444,
									"end": 14629,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14444,
									"end": 14629,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14444,
									"end": 14629,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14635,
									"end": 14829,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 14635,
									"end": 14829,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14675,
									"end": 14679,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 14695,
									"end": 14715,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "308"
								},
								{
									"begin": 14713,
									"end": 14714,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14695,
									"end": 14715,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 14695,
									"end": 14715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14695,
									"end": 14715,
									"name": "tag",
									"source": 9,
									"value": "308"
								},
								{
									"begin": 14695,
									"end": 14715,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14690,
									"end": 14715,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14690,
									"end": 14715,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14729,
									"end": 14749,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "309"
								},
								{
									"begin": 14747,
									"end": 14748,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 14729,
									"end": 14749,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 14729,
									"end": 14749,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14729,
									"end": 14749,
									"name": "tag",
									"source": 9,
									"value": "309"
								},
								{
									"begin": 14729,
									"end": 14749,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14724,
									"end": 14749,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 14724,
									"end": 14749,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14773,
									"end": 14774,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14770,
									"end": 14771,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14766,
									"end": 14775,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 14758,
									"end": 14775,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 14758,
									"end": 14775,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14797,
									"end": 14798,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 14791,
									"end": 14795,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 14788,
									"end": 14799,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 14785,
									"end": 14822,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 14785,
									"end": 14822,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "310"
								},
								{
									"begin": 14785,
									"end": 14822,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 14802,
									"end": 14820,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "311"
								},
								{
									"begin": 14802,
									"end": 14820,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 14802,
									"end": 14820,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14802,
									"end": 14820,
									"name": "tag",
									"source": 9,
									"value": "311"
								},
								{
									"begin": 14802,
									"end": 14820,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14785,
									"end": 14822,
									"name": "tag",
									"source": 9,
									"value": "310"
								},
								{
									"begin": 14785,
									"end": 14822,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14635,
									"end": 14829,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 14635,
									"end": 14829,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14635,
									"end": 14829,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14635,
									"end": 14829,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14635,
									"end": 14829,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14835,
									"end": 15026,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 14835,
									"end": 15026,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14875,
									"end": 14878,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 14894,
									"end": 14914,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "313"
								},
								{
									"begin": 14912,
									"end": 14913,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14894,
									"end": 14914,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 14894,
									"end": 14914,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14894,
									"end": 14914,
									"name": "tag",
									"source": 9,
									"value": "313"
								},
								{
									"begin": 14894,
									"end": 14914,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14889,
									"end": 14914,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14889,
									"end": 14914,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14928,
									"end": 14948,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "314"
								},
								{
									"begin": 14946,
									"end": 14947,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 14928,
									"end": 14948,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 14928,
									"end": 14948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14928,
									"end": 14948,
									"name": "tag",
									"source": 9,
									"value": "314"
								},
								{
									"begin": 14928,
									"end": 14948,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14923,
									"end": 14948,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 14923,
									"end": 14948,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14971,
									"end": 14972,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14968,
									"end": 14969,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14964,
									"end": 14973,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 14957,
									"end": 14973,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 14957,
									"end": 14973,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14992,
									"end": 14995,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 14989,
									"end": 14990,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 14986,
									"end": 14996,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 14983,
									"end": 15019,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 14983,
									"end": 15019,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "315"
								},
								{
									"begin": 14983,
									"end": 15019,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 14999,
									"end": 15017,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "316"
								},
								{
									"begin": 14999,
									"end": 15017,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 14999,
									"end": 15017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14999,
									"end": 15017,
									"name": "tag",
									"source": 9,
									"value": "316"
								},
								{
									"begin": 14999,
									"end": 15017,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14983,
									"end": 15019,
									"name": "tag",
									"source": 9,
									"value": "315"
								},
								{
									"begin": 14983,
									"end": 15019,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14835,
									"end": 15026,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 14835,
									"end": 15026,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14835,
									"end": 15026,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14835,
									"end": 15026,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14835,
									"end": 15026,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 15032,
									"end": 15474,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 15032,
									"end": 15474,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 15181,
									"end": 15185,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 15219,
									"end": 15221,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 15208,
									"end": 15217,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 15204,
									"end": 15222,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 15196,
									"end": 15222,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 15196,
									"end": 15222,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 15232,
									"end": 15303,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "318"
								},
								{
									"begin": 15300,
									"end": 15301,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 15289,
									"end": 15298,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 15285,
									"end": 15302,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 15276,
									"end": 15282,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 15232,
									"end": 15303,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 15232,
									"end": 15303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 15232,
									"end": 15303,
									"name": "tag",
									"source": 9,
									"value": "318"
								},
								{
									"begin": 15232,
									"end": 15303,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 15313,
									"end": 15385,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "319"
								},
								{
									"begin": 15381,
									"end": 15383,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 15370,
									"end": 15379,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 15366,
									"end": 15384,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 15357,
									"end": 15363,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 15313,
									"end": 15385,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 15313,
									"end": 15385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 15313,
									"end": 15385,
									"name": "tag",
									"source": 9,
									"value": "319"
								},
								{
									"begin": 15313,
									"end": 15385,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 15395,
									"end": 15467,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "320"
								},
								{
									"begin": 15463,
									"end": 15465,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 15452,
									"end": 15461,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 15448,
									"end": 15466,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 15439,
									"end": 15445,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 15395,
									"end": 15467,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 15395,
									"end": 15467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 15395,
									"end": 15467,
									"name": "tag",
									"source": 9,
									"value": "320"
								},
								{
									"begin": 15395,
									"end": 15467,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 15032,
									"end": 15474,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 15032,
									"end": 15474,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 15032,
									"end": 15474,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 15032,
									"end": 15474,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 15032,
									"end": 15474,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 15032,
									"end": 15474,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 15032,
									"end": 15474,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 15480,
									"end": 15702,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 15480,
									"end": 15702,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 15573,
									"end": 15577,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 15611,
									"end": 15613,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 15600,
									"end": 15609,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 15596,
									"end": 15614,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 15588,
									"end": 15614,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 15588,
									"end": 15614,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 15624,
									"end": 15695,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "322"
								},
								{
									"begin": 15692,
									"end": 15693,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 15681,
									"end": 15690,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 15677,
									"end": 15694,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 15668,
									"end": 15674,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 15624,
									"end": 15695,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 15624,
									"end": 15695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 15624,
									"end": 15695,
									"name": "tag",
									"source": 9,
									"value": "322"
								},
								{
									"begin": 15624,
									"end": 15695,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 15480,
									"end": 15702,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 15480,
									"end": 15702,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 15480,
									"end": 15702,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 15480,
									"end": 15702,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 15480,
									"end": 15702,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 414,
									"end": 5404,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 414,
									"end": 5404,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 414,
									"end": 5404,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 414,
									"end": 5404,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 414,
									"end": 5404,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 414,
									"end": 5404,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 5404,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 414,
									"end": 5404,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 5404,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ce3efa2bb519c0daf5a6b7beb365e06dc3c093a9fa7b1babc1b5000f6fb2787264736f6c634300081e0033",
									".code": [
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "751FD179"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "A071DCF4"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "C4081A4C"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "C4081A4C"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "F0F44260"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "A071DCF4"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "BC063E1A"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "751FD179"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "8456CB59"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "92828671"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "99F3BC9A"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "3F4BA83A"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "3F4BA83A"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "483A9310"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "61D027B3"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "3F4218E0"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 5404,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 3882,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3882,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3882,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 725,
											"end": 768,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 725,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 725,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 725,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 3478,
											"end": 3541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4666,
											"end": 4787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 4666,
											"end": 4787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 4666,
											"end": 4787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 493,
											"end": 516,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 493,
											"end": 516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 493,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 493,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 493,
											"end": 516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 516,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 493,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 493,
											"end": 516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 516,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3230,
											"end": 3407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 3230,
											"end": 3407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3413,
											"end": 3472,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3413,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3413,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3413,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 3413,
											"end": 3472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3413,
											"end": 3472,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3413,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3413,
											"end": 3472,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4214,
											"end": 4298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 4214,
											"end": 4298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 4398,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 4398,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 522,
											"end": 543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 522,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 522,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 522,
											"end": 543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 543,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 522,
											"end": 543,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 522,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 522,
											"end": 543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 522,
											"end": 543,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 3614,
											"end": 3801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 3614,
											"end": 3801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3614,
											"end": 3801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 632,
											"end": 669,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 632,
											"end": 669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 632,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 632,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 632,
											"end": 669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 669,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 632,
											"end": 669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 632,
											"end": 669,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 669,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 632,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 632,
											"end": 669,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 632,
											"end": 669,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 632,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 632,
											"end": 669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 669,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 632,
											"end": 669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 632,
											"end": 669,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 669,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 632,
											"end": 669,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 632,
											"end": 669,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 632,
											"end": 669,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 632,
											"end": 669,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 632,
											"end": 669,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2804,
											"end": 3041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2804,
											"end": 3041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2173,
											"end": 2696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2173,
											"end": 2696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 3983,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4010,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4013,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 4013,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 4013,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4025,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 4013,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 4025,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 4025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 4051,
											"end": 4055,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4064,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4066,
											"end": 4072,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 4035,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4073,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 4035,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 4091,
											"end": 4095,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4097,
											"end": 4099,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4101,
											"end": 4107,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4083,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 4083,
											"end": 4108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4125,
											"end": 4129,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4118,
											"end": 4129,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4118,
											"end": 4129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4118,
											"end": 4129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 725,
											"end": 768,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 725,
											"end": 768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 3478,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3524,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 3524,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 3524,
											"end": 3534,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 3524,
											"end": 3534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3478,
											"end": 3541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4727,
											"end": 4734,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 669,
											"name": "PUSH",
											"source": 8,
											"value": "C8"
										},
										{
											"begin": 4763,
											"end": 4769,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4763,
											"end": 4769,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4754,
											"end": 4760,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4754,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 4754,
											"end": 4769,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4754,
											"end": 4769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4754,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 4754,
											"end": 4769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4754,
											"end": 4769,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 4754,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4753,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 4753,
											"end": 4780,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4753,
											"end": 4780,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4753,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 4753,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4753,
											"end": 4780,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 4753,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 4780,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 4780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1773,
											"end": 1777,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 493,
											"end": 516,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 493,
											"end": 516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 493,
											"end": 516,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 493,
											"end": 516,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 493,
											"end": 516,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 493,
											"end": 516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3340,
											"end": 3347,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3336,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3347,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3382,
											"end": 3390,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "69E34A174B4A0CCE59950C4C852317E9797BDCAE125FBF8B5DD8B4311384412F"
										},
										{
											"begin": 3392,
											"end": 3399,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3362,
											"end": 3400,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3400,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3230,
											"end": 3407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3413,
											"end": 3472,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 3413,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3457,
											"end": 3465,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 3457,
											"end": 3463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 3457,
											"end": 3465,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3457,
											"end": 3465,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 3457,
											"end": 3465,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3413,
											"end": 3472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4265,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 669,
											"name": "PUSH",
											"source": 8,
											"value": "C8"
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4277,
											"end": 4291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4452,
											"end": 4459,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4471,
											"end": 4484,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4471,
											"end": 4484,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4491,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4398,
											"end": 4491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 522,
											"end": 543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 522,
											"end": 543,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 522,
											"end": 543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3697,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3725,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 3725,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3725,
											"end": 3737,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 3725,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3709,
											"end": 3737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3755,
											"end": 3760,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3762,
											"end": 3764,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3766,
											"end": 3772,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 3747,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3773,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 3747,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3794,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3783,
											"end": 3794,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 669,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 632,
											"end": 669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 666,
											"end": 669,
											"name": "PUSH",
											"source": 8,
											"value": "C8"
										},
										{
											"begin": 632,
											"end": 669,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 632,
											"end": 669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 2873,
											"end": 2880,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2873,
											"end": 2888,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2897,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2897,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5BA09AE000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2897,
											"end": 2912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2897,
											"end": 2912,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2897,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2897,
											"end": 2912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2897,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2897,
											"end": 2912,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2897,
											"end": 2912,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2897,
											"end": 2912,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2897,
											"end": 2912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2897,
											"end": 2912,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2948,
											"end": 2954,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2954,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2954,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2973,
											"end": 2980,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2964,
											"end": 2980,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2980,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2980,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2211ABB4BBC4D80B7505C31B54D01D15AC6E33A42C59540D309D89DAF759063A"
										},
										{
											"begin": 3018,
											"end": 3024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3026,
											"end": 3033,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 3004,
											"end": 3034,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3004,
											"end": 3034,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 3041,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2804,
											"end": 3041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2273,
											"end": 2274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2249,
											"end": 2275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2249,
											"end": 2261,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2249,
											"end": 2275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2249,
											"end": 2275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2249,
											"end": 2275,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 2245,
											"end": 2308,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2308,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "CFE2EA6300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2284,
											"end": 2308,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2308,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2284,
											"end": 2308,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2308,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2308,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2308,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2308,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2308,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 2245,
											"end": 2308,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2349,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2349,
											"end": 2357,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2357,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2349,
											"end": 2357,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2327,
											"end": 2357,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2390,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2367,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2390,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2464,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2473,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2483,
											"end": 2494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2507,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2515,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2568,
											"end": 2580,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2539,
											"end": 2581,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2555,
											"end": 2566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2539,
											"end": 2581,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4AB5BE82436D353E61CA18726E984E561F5C1CC7C6D38B29D2553C790434705A"
										},
										{
											"begin": 2539,
											"end": 2581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2539,
											"end": 2581,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2539,
											"end": 2581,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2581,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2581,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2581,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2581,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2581,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 2616,
											"end": 2627,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "69E34A174B4A0CCE59950C4C852317E9797BDCAE125FBF8B5DD8B4311384412F"
										},
										{
											"begin": 2629,
											"end": 2634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2596,
											"end": 2635,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2635,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2682,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "69E34A174B4A0CCE59950C4C852317E9797BDCAE125FBF8B5DD8B4311384412F"
										},
										{
											"begin": 2684,
											"end": 2688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2650,
											"end": 2689,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2689,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2696,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4861,
											"end": 5402,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 4861,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4990,
											"end": 4991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 4978,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5012,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5012,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 4974,
											"end": 5012,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5012,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5011,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4996,
											"end": 5012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4996,
											"end": 4998,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4996,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4996,
											"end": 5012,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4996,
											"end": 5012,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4996,
											"end": 5012,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5012,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 4974,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 5355,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 5355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 4970,
											"end": 5355,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5042,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5038,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5032,
											"end": 5038,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5032,
											"end": 5042,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5345,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 5028,
											"end": 5345,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5062,
											"end": 5073,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5099,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5086,
											"end": 5092,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5086,
											"end": 5092,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5077,
											"end": 5083,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5077,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 5077,
											"end": 5092,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5077,
											"end": 5092,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5077,
											"end": 5092,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 5077,
											"end": 5092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5077,
											"end": 5092,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 5077,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 5076,
											"end": 5099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 5076,
											"end": 5099,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5062,
											"end": 5099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5062,
											"end": 5099,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5127,
											"end": 5128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5121,
											"end": 5124,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5117,
											"end": 5331,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5117,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 5117,
											"end": 5331,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5152,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 5166,
											"end": 5170,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5172,
											"end": 5180,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5172,
											"end": 5180,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5180,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5172,
											"end": 5180,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5172,
											"end": 5180,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5172,
											"end": 5180,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5172,
											"end": 5180,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5172,
											"end": 5180,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5172,
											"end": 5180,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5172,
											"end": 5180,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5172,
											"end": 5180,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5182,
											"end": 5185,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5152,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 5152,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5152,
											"end": 5186,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 5152,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5208,
											"end": 5219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5231,
											"end": 5234,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5222,
											"end": 5228,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5222,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5222,
											"end": 5234,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5222,
											"end": 5234,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5222,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 5222,
											"end": 5234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5222,
											"end": 5234,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5222,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5208,
											"end": 5234,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5208,
											"end": 5234,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5256,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 5270,
											"end": 5274,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5280,
											"end": 5283,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5256,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 5256,
											"end": 5284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5256,
											"end": 5284,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 5256,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 5306,
											"end": 5313,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5117,
											"end": 5331,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 5117,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5044,
											"end": 5345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5028,
											"end": 5345,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 5028,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 5355,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 4970,
											"end": 5355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 5378,
											"end": 5382,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5388,
											"end": 5394,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 5364,
											"end": 5395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5364,
											"end": 5395,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 5364,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5402,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 4861,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2703,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2586,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 1597,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 1597,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2644,
											"end": 2651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2683,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2683,
											"end": 2695,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 2674,
											"end": 2696,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2454,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2339,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2408,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2398,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2398,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2434,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2434,
											"end": 2446,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 2427,
											"end": 2447,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1221,
											"end": 1251,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 1235,
											"end": 1239,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 1243,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1250,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 1221,
											"end": 1251,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1251,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 1221,
											"end": 1251,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2078,
											"end": 2204,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2078,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2141,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2141,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 7,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2078,
											"end": 2204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1943,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 7,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1878,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 5884,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5768,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5838,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 5853,
											"end": 5858,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5838,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 5838,
											"end": 5859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5838,
											"end": 5859,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 5838,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5831,
											"end": 5836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5828,
											"end": 5860,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5818,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 5818,
											"end": 5878,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5874,
											"end": 5875,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5872,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5864,
											"end": 5876,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5818,
											"end": 5878,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 5818,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 5884,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 5884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 6023,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 5890,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5933,
											"end": 5938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5958,
											"end": 5978,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5949,
											"end": 5978,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5949,
											"end": 5978,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 6011,
											"end": 6016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5987,
											"end": 6017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6017,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 5987,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 6023,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 6023,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 6023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 6023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 6023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6497,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6029,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6094,
											"end": 6100,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6153,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6139,
											"end": 6148,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6130,
											"end": 6137,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6126,
											"end": 6149,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6122,
											"end": 6154,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6119,
											"end": 6238,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6119,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 6119,
											"end": 6238,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6157,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 6157,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 6157,
											"end": 6236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6157,
											"end": 6236,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 6157,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6119,
											"end": 6238,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 6119,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6277,
											"end": 6278,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6302,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 6347,
											"end": 6354,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6338,
											"end": 6344,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6327,
											"end": 6336,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6323,
											"end": 6345,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6302,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6302,
											"end": 6355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6302,
											"end": 6355,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 6302,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6292,
											"end": 6355,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6292,
											"end": 6355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6248,
											"end": 6365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6404,
											"end": 6406,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6430,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 6472,
											"end": 6479,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6463,
											"end": 6469,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6461,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6448,
											"end": 6470,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 6430,
											"end": 6480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6480,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 6430,
											"end": 6480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6480,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6375,
											"end": 6490,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6497,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6497,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6503,
											"end": 6977,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 6503,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6571,
											"end": 6577,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6585,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6616,
											"end": 6625,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6607,
											"end": 6614,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6603,
											"end": 6626,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6631,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6596,
											"end": 6715,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6596,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 6596,
											"end": 6715,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 6634,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 6634,
											"end": 6713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6713,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 6634,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6596,
											"end": 6715,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 6596,
											"end": 6715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6779,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 6824,
											"end": 6831,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6821,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6804,
											"end": 6813,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6800,
											"end": 6822,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6779,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6779,
											"end": 6832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6779,
											"end": 6832,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 6779,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6769,
											"end": 6832,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6769,
											"end": 6832,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6725,
											"end": 6842,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6881,
											"end": 6883,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6907,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 6952,
											"end": 6959,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6949,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6932,
											"end": 6941,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6928,
											"end": 6950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6907,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6960,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 6907,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6897,
											"end": 6960,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6897,
											"end": 6960,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6852,
											"end": 6970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6503,
											"end": 6977,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6503,
											"end": 6977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6503,
											"end": 6977,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6503,
											"end": 6977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6503,
											"end": 6977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6503,
											"end": 6977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6983,
											"end": 7163,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 6983,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7031,
											"end": 7108,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7028,
											"end": 7029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7109,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7132,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 7125,
											"end": 7126,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7118,
											"end": 7133,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7152,
											"end": 7156,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7149,
											"end": 7150,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7142,
											"end": 7157,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7169,
											"end": 7489,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 7169,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7250,
											"end": 7251,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7244,
											"end": 7248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7252,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7252,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7297,
											"end": 7298,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7291,
											"end": 7295,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7287,
											"end": 7299,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 7308,
											"end": 7389,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7378,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 7366,
											"end": 7372,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7362,
											"end": 7379,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7389,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 7308,
											"end": 7389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7436,
											"end": 7438,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7428,
											"end": 7434,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7425,
											"end": 7439,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7405,
											"end": 7423,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7402,
											"end": 7440,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7399,
											"end": 7483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 7399,
											"end": 7483,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7455,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 7455,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 7455,
											"end": 7473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7455,
											"end": 7473,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 7455,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7399,
											"end": 7483,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 7399,
											"end": 7483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7220,
											"end": 7489,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7169,
											"end": 7489,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7169,
											"end": 7489,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7169,
											"end": 7489,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7169,
											"end": 7489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7495,
											"end": 7675,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 7495,
											"end": 7675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7543,
											"end": 7620,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7540,
											"end": 7541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7533,
											"end": 7621,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7640,
											"end": 7644,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7637,
											"end": 7638,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7630,
											"end": 7645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7664,
											"end": 7668,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7661,
											"end": 7662,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7669,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7681,
											"end": 8091,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 7681,
											"end": 8091,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7721,
											"end": 7728,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 7762,
											"end": 7763,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7744,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 7744,
											"end": 7764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7744,
											"end": 7764,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 7744,
											"end": 7764,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7764,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7778,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 7796,
											"end": 7797,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7778,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 7778,
											"end": 7798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7778,
											"end": 7798,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 7778,
											"end": 7798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7798,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7773,
											"end": 7798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7833,
											"end": 7834,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7830,
											"end": 7831,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7826,
											"end": 7835,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7855,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 7873,
											"end": 7884,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7855,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 7855,
											"end": 7885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7855,
											"end": 7885,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 7855,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7885,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 7885,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8034,
											"end": 8035,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8025,
											"end": 8032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8021,
											"end": 8036,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8018,
											"end": 8019,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8015,
											"end": 8037,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7995,
											"end": 7996,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 7997,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7968,
											"end": 8051,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 7945,
											"end": 8084,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8064,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 8064,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 8064,
											"end": 8082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8064,
											"end": 8082,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 8064,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 8084,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 7945,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7729,
											"end": 8091,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7681,
											"end": 8091,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7681,
											"end": 8091,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7681,
											"end": 8091,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7681,
											"end": 8091,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7681,
											"end": 8091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8097,
											"end": 8277,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 8097,
											"end": 8277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8145,
											"end": 8222,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8142,
											"end": 8143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8223,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8242,
											"end": 8246,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 8239,
											"end": 8240,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8232,
											"end": 8247,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8266,
											"end": 8270,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8263,
											"end": 8264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8256,
											"end": 8271,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8283,
											"end": 8468,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 8283,
											"end": 8468,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8323,
											"end": 8324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8340,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 8340,
											"end": 8360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8360,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 8340,
											"end": 8360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8335,
											"end": 8360,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8335,
											"end": 8360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 8392,
											"end": 8393,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 8374,
											"end": 8394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8394,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 8374,
											"end": 8394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8394,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8413,
											"end": 8414,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 8403,
											"end": 8438,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8418,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 8418,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 8418,
											"end": 8436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8418,
											"end": 8436,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 8418,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8438,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 8403,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8460,
											"end": 8461,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8457,
											"end": 8458,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8453,
											"end": 8462,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8448,
											"end": 8462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8283,
											"end": 8468,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8283,
											"end": 8468,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8283,
											"end": 8468,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8283,
											"end": 8468,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8283,
											"end": 8468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8474,
											"end": 8806,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 8474,
											"end": 8806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8595,
											"end": 8599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8633,
											"end": 8635,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8622,
											"end": 8631,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8610,
											"end": 8636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8610,
											"end": 8636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 8714,
											"end": 8715,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8703,
											"end": 8712,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8699,
											"end": 8716,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8690,
											"end": 8696,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 8646,
											"end": 8717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 8717,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 8646,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8727,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 8795,
											"end": 8797,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8784,
											"end": 8793,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8780,
											"end": 8798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8771,
											"end": 8777,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8727,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 8727,
											"end": 8799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8727,
											"end": 8799,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 8727,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8474,
											"end": 8806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8474,
											"end": 8806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8474,
											"end": 8806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8474,
											"end": 8806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8474,
											"end": 8806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8474,
											"end": 8806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8812,
											"end": 9254,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 8812,
											"end": 9254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8961,
											"end": 8965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8999,
											"end": 9001,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8988,
											"end": 8997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8984,
											"end": 9002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8976,
											"end": 9002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8976,
											"end": 9002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 9080,
											"end": 9081,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9069,
											"end": 9078,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9065,
											"end": 9082,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 9012,
											"end": 9083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9012,
											"end": 9083,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 9012,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9093,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 9161,
											"end": 9163,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9150,
											"end": 9159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9146,
											"end": 9164,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9093,
											"end": 9165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 9093,
											"end": 9165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9093,
											"end": 9165,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 9093,
											"end": 9165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9175,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 9243,
											"end": 9245,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9232,
											"end": 9241,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9228,
											"end": 9246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9219,
											"end": 9225,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9175,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 9175,
											"end": 9247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9175,
											"end": 9247,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 9175,
											"end": 9247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8812,
											"end": 9254,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8812,
											"end": 9254,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8812,
											"end": 9254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8812,
											"end": 9254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8812,
											"end": 9254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8812,
											"end": 9254,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8812,
											"end": 9254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9260,
											"end": 9454,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 9260,
											"end": 9454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9300,
											"end": 9304,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9320,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 9338,
											"end": 9339,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9320,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 9320,
											"end": 9340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9320,
											"end": 9340,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 9320,
											"end": 9340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9315,
											"end": 9340,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9315,
											"end": 9340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9354,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 9372,
											"end": 9373,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9354,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 9354,
											"end": 9374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9354,
											"end": 9374,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 9354,
											"end": 9374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9374,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9349,
											"end": 9374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9398,
											"end": 9399,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9395,
											"end": 9396,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9400,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9383,
											"end": 9400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9383,
											"end": 9400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9422,
											"end": 9423,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9416,
											"end": 9420,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9413,
											"end": 9424,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9447,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 9410,
											"end": 9447,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9427,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 9427,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 9427,
											"end": 9445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9427,
											"end": 9445,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 9427,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9410,
											"end": 9447,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 9410,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9260,
											"end": 9454,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9260,
											"end": 9454,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9260,
											"end": 9454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9260,
											"end": 9454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9260,
											"end": 9454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9651,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 9460,
											"end": 9651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9500,
											"end": 9503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9519,
											"end": 9539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 9537,
											"end": 9538,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 9519,
											"end": 9539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9519,
											"end": 9539,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 9519,
											"end": 9539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9514,
											"end": 9539,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9514,
											"end": 9539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9553,
											"end": 9573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 9571,
											"end": 9572,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9553,
											"end": 9573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 9553,
											"end": 9573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9553,
											"end": 9573,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 9553,
											"end": 9573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 9573,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9548,
											"end": 9573,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9596,
											"end": 9597,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9593,
											"end": 9594,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9589,
											"end": 9598,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9582,
											"end": 9598,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9582,
											"end": 9598,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9620,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9614,
											"end": 9615,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9611,
											"end": 9621,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9608,
											"end": 9644,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9608,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 9608,
											"end": 9644,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9624,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 9624,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 9624,
											"end": 9642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9624,
											"end": 9642,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 9624,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9608,
											"end": 9644,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 9608,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9651,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9651,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.4.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.4.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.4.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.4.0/utils/Context.sol",
								"@openzeppelin/contracts@5.4.0/utils/Pausable.sol",
								"Monica.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_FEE()": "bc063e1a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"calculateTax(uint256)": "483a9310",
							"decimals()": "313ce567",
							"getMaxFee()": "92828671",
							"getTaxFeePercentage()": "99f3bc9a",
							"isFeeExempt(address)": "3f4218e0",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setFeeExemption(address,bool)": "751fd179",
							"setTaxFee(uint256)": "c4081a4c",
							"setTreasury(address)": "f0f44260",
							"symbol()": "95d89b41",
							"taxFee()": "a071dcf4",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_taxFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTaxFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTreasuryAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"FeeExemptionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"taxAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transferAmount\",\"type\":\"uint256\"}],\"name\":\"TaxCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"TaxFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldTreasury\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaxFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isFeeExempt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_exempt\",\"type\":\"bool\"}],\"name\":\"setFeeExemption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setTaxFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"monica.galeendo@gmail.com\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"calculateTax(uint256)\":{\"details\":\"Calculates tax amount for a given transfer amount\",\"params\":{\"amount\":\"Transfer amount\"},\"returns\":{\"_0\":\"Tax amount that would be collected\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getMaxFee()\":{\"details\":\"Returns the maximum fee that can be set\"},\"getTaxFeePercentage()\":{\"details\":\"Returns the current tax fee as a percentage (with 2 decimals)\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setFeeExemption(address,bool)\":{\"details\":\"Sets fee exemption status for an address\",\"params\":{\"_account\":\"Address to update\",\"_exempt\":\"Whether the address should be exempt from fees\"}},\"setTaxFee(uint256)\":{\"details\":\"Updates the tax fee\",\"params\":{\"_newFee\":\"New tax fee in basis points\"}},\"setTreasury(address)\":{\"details\":\"Updates the treasury address\",\"params\":{\"_newTreasury\":\"New treasury address\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Override transfer to include tax logic\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Override transferFrom to include tax logic\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Monica.sol\":\"Monica\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.4.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts@5.4.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts@5.4.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts@5.4.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts@5.4.0/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"Monica.sol\":{\"keccak256\":\"0x868716a494dc3498be5d47057af16f0c5f04304497659ed2c7c7fa431feb5ed5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://429ad70704581c1cf356aaed6d172277ec2a706fb930061353118a5bb7ef677c\",\"dweb:/ipfs/QmXDZo9kP4KQGoCE1Nh6jkrt71cNPh4QeNSkAZFVfnhu7k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "Monica.sol:Monica",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "Monica.sol:Monica",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "Monica.sol:Monica",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "Monica.sol:Monica",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "Monica.sol:Monica",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 976,
								"contract": "Monica.sol:Monica",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 8,
								"contract": "Monica.sol:Monica",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1092,
								"contract": "Monica.sol:Monica",
								"label": "treasury",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1094,
								"contract": "Monica.sol:Monica",
								"label": "taxFee",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1101,
								"contract": "Monica.sol:Monica",
								"label": "isFeeExempt",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@5.4.0/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.4.0/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							967
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.4.0/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 968,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								967
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@5.4.0/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.4.0/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							967
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							937
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.4.0/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.4.0/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 938,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 937,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.4.0/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 968,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.4.0/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 937,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								937,
								877,
								967
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										924
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										930
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2864:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2881:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2874:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2855:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:2"
									},
									"scope": 799,
									"src": "2803:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3007:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3024:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3034:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3017:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2952:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2998:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:2"
									},
									"scope": 799,
									"src": "2933:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3319:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3329:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "3345:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3377:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3384:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3388:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3367:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3404:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3262:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3274:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3313:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:2"
									},
									"scope": 799,
									"src": "3244:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3544:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3561:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3573:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3580:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3554:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3474:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3489:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3535:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:2"
									},
									"scope": 799,
									"src": "3455:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3981:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "3991:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "4007:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4038:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4045:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4054:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4070:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3919:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3936:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3975:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:2"
									},
									"scope": 799,
									"src": "3902:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4773:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4783:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "4801:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4839:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4845:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4854:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4823:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4880:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4886:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4890:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4870:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4906:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4702:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4716:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4728:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4767:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:2"
									},
									"scope": 799,
									"src": "4680:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5366:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5380:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5376:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5400:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5421:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5414:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5475:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5471:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5493:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5514:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5507:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5580:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5584:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5566:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5316:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5330:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:2"
									},
									"scope": 799,
									"src": "5297:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5987:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6001:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6175:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6189:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6211:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6221:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6244:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6258:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6240:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6265:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6315:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6321:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6334:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6290:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6475:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6485:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6493:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6507:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "5997:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6021:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6137:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6153:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6551:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6766:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6925:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "6935:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6942:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6547:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6569:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6714:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6730:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "6996:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7002:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7006:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "6987:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "6982:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5929:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5943:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5955:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:2"
									},
									"scope": 799,
									"src": "5912:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7418:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7432:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7428:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7455:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7476:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7469:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7557:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7377:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7394:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:2"
									},
									"scope": 799,
									"src": "7362:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "7944:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "7958:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "7954:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "7981:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8002:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "7995:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8060:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8081:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8052:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7920:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:2"
									},
									"scope": 799,
									"src": "7888:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8704:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8723:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8730:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8739:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8714:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8648:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8663:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8680:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:2"
									},
									"scope": 799,
									"src": "8630:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9703:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9717:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9713:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9738:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9759:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9752:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9815:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9811:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9838:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9859:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9852:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9910:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9922:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9929:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "9940:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "9959:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "9955:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "9970:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9998:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10005:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10014:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "9989:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "9984:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9623:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9638:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9670:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:2"
									},
									"scope": 799,
									"src": "9605:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10408:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10418:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10455:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10462:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10445:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10484:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10480:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10522:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10540:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10559:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10536:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10566:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10618:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10627:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10645:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10591:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10716:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10723:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10732:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10751:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10707:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10359:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10376:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:2"
									},
									"scope": 799,
									"src": "10319:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9691:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10693:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@5.4.0/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.4.0/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "215:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "397:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "406:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "428:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "448:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:3"
									},
									"src": "391:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "628:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "637:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "660:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "685:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:3"
									},
									"src": "622:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "822:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:3"
									},
									"scope": 877,
									"src": "776:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "972:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:3"
									},
									"scope": 877,
									"src": "913:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1223:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1235:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 877,
									"src": "1205:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 877,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2327:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2377:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:3"
									},
									"scope": 877,
									"src": "2310:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2713:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2727:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2739:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2772:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:3"
									},
									"scope": 877,
									"src": "2691:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "205:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2675:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol",
					"exportedSymbols": {
						"ERC20": [
							799
						],
						"ERC20Pausable": [
							911
						],
						"Pausable": [
							1075
						]
					},
					"id": 912,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 912,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.4.0/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 912,
							"sourceUnit": 1076,
							"src": "186:53:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1075,
										"src": "194:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "ERC20",
										"nameLocations": [
											"965:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "965:5:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "965:5:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "Pausable",
										"nameLocations": [
											"972:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1075,
										"src": "972:8:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "972:8:4"
								}
							],
							"canonicalName": "ERC20Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "241:688:4",
								"text": " @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 911,
							"linearizedBaseContracts": [
								911,
								1075,
								799,
								189,
								937,
								877,
								967
							],
							"name": "ERC20Pausable",
							"nameLocation": "948:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										606
									],
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "1211:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "1235:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 905,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "1241:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 906,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "1245:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 901,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1221:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Pausable_$911_$",
																"typeString": "type(contract super ERC20Pausable)"
															}
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1227:7:4",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "1221:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1221:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "1221:30:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "987:121:4",
										"text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 899,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 898,
												"name": "whenNotPaused",
												"nameLocations": [
													"1197:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1000,
												"src": "1197:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1197:13:4"
										}
									],
									"name": "_update",
									"nameLocation": "1122:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 897,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1188:8:4"
									},
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1138:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1130:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1152:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1144:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1164:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1156:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:41:4"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1211:0:4"
									},
									"scope": 911,
									"src": "1113:145:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 912,
							"src": "930:330:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188,
								989,
								992
							],
							"usedEvents": [
								811,
								820,
								981,
								986
							]
						}
					],
					"src": "124:1137:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@5.4.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.4.0/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							937
						]
					},
					"id": 938,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 913,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.4.0/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 938,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 914,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 917,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:5"
									},
									"id": 918,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 916,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 937,
							"linearizedBaseContracts": [
								937,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 921,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 937,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 930,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 927,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 937,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 933,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 937,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 938,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@5.4.0/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.4.0/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							967
						]
					},
					"id": 968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 939,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 940,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 967,
							"linearizedBaseContracts": [
								967
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 945,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 944,
												"id": 947,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 967,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 954,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 953,
												"id": 956,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 967,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 962,
												"id": 964,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 967,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 968,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@5.4.0/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.4.0/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							967
						],
						"Pausable": [
							1075
						]
					},
					"id": 1076,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 969,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.4.0/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 971,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1076,
							"sourceUnit": 968,
							"src": "128:45:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 970,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "136:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 973,
										"name": "Context",
										"nameLocations": [
											"645:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "645:7:7"
									},
									"id": 974,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:7"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 972,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:7",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1075,
							"linearizedBaseContracts": [
								1075,
								967
							],
							"name": "Pausable",
							"nameLocation": "633:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 976,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1075,
									"src": "659:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 975,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:7",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 981,
									"name": "Paused",
									"nameLocation": "770:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "777:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:7"
									},
									"src": "764:30:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:7",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 986,
									"name": "Unpaused",
									"nameLocation": "881:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "890:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:7"
									},
									"src": "875:32:7"
								},
								{
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:7",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 989,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:7"
									},
									"src": "994:22:7"
								},
								{
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:7",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 992,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:7"
									},
									"src": "1107:22:7"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "1340:47:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 995,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "1350:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "1350:19:7"
											},
											{
												"id": 998,
												"nodeType": "PlaceholderStatement",
												"src": "1379:1:7"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "1135:175:7",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1000,
									"name": "whenNotPaused",
									"nameLocation": "1324:13:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1337:2:7"
									},
									"src": "1315:72:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "1587:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1003,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "1597:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "1597:16:7"
											},
											{
												"id": 1006,
												"nodeType": "PlaceholderStatement",
												"src": "1623:1:7"
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "1393:167:7",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1008,
									"name": "whenPaused",
									"nameLocation": "1574:10:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1584:2:7"
									},
									"src": "1565:66:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "1779:31:7",
										"statements": [
											{
												"expression": {
													"id": 1014,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 976,
													"src": "1796:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1013,
												"id": 1015,
												"nodeType": "Return",
												"src": "1789:14:7"
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "1637:84:7",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1735:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1741:2:7"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1773:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1011,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1773:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:6:7"
									},
									"scope": 1075,
									"src": "1726:84:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "1929:77:7",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1021,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "1943:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "1939:61:7",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "1953:47:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1023,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "1974:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1974:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1025,
															"nodeType": "RevertStatement",
															"src": "1967:22:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "1816:57:7",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1887:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:7"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:7"
									},
									"scope": 1075,
									"src": "1878:128:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "2126:78:7",
										"statements": [
											{
												"condition": {
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2140:9:7",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1033,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "2141:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2141:8:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1040,
												"nodeType": "IfStatement",
												"src": "2136:62:7",
												"trueBody": {
													"id": 1039,
													"nodeType": "Block",
													"src": "2151:47:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1036,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "2172:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2172:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1038,
															"nodeType": "RevertStatement",
															"src": "2165:22:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "2012:61:7",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2087:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:2:7"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:7"
									},
									"scope": 1075,
									"src": "2078:126:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "2388:66:7",
										"statements": [
											{
												"expression": {
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1048,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "2398:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2408:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2398:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "2398:14:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1053,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "2434:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2434:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1052,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "2427:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2427:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "EmitStatement",
												"src": "2422:25:7"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "2210:124:7",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1046,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1045,
												"name": "whenNotPaused",
												"nameLocations": [
													"2374:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1000,
												"src": "2374:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:13:7"
										}
									],
									"name": "_pause",
									"nameLocation": "2348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:2:7"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2388:0:7"
									},
									"scope": 1075,
									"src": "2339:115:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "2634:69:7",
										"statements": [
											{
												"expression": {
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1064,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "2644:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2654:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2644:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "2644:15:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1069,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "2683:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2683:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1068,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "2674:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2674:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "EmitStatement",
												"src": "2669:27:7"
											}
										]
									},
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "2460:121:7",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1062,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1061,
												"name": "whenPaused",
												"nameLocations": [
													"2623:10:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1008,
												"src": "2623:10:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2623:10:7"
										}
									],
									"name": "_unpause",
									"nameLocation": "2595:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:7"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:7"
									},
									"scope": 1075,
									"src": "2586:117:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1076,
							"src": "615:2090:7",
							"usedErrors": [
								989,
								992
							],
							"usedEvents": [
								981,
								986
							]
						}
					],
					"src": "102:2604:7"
				},
				"id": 7
			},
			"Monica.sol": {
				"ast": {
					"absolutePath": "Monica.sol",
					"exportedSymbols": {
						"ERC20": [
							799
						],
						"ERC20Pausable": [
							911
						],
						"Monica": [
							1522
						],
						"Ownable": [
							147
						]
					},
					"id": 1523,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1077,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts@5.4.0/token/ERC20/ERC20.sol",
							"id": 1079,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1523,
							"sourceUnit": 800,
							"src": "107:74:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1078,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "115:5:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol",
							"file": "@openzeppelin/contracts@5.4.0/token/ERC20/extensions/ERC20Pausable.sol",
							"id": 1081,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1523,
							"sourceUnit": 912,
							"src": "182:101:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1080,
										"name": "ERC20Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 911,
										"src": "190:13:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.4.0/access/Ownable.sol",
							"file": "@openzeppelin/contracts@5.4.0/access/Ownable.sol",
							"id": 1083,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1523,
							"sourceUnit": 148,
							"src": "284:73:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1082,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "292:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1085,
										"name": "ERC20",
										"nameLocations": [
											"433:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "433:5:8"
									},
									"id": 1086,
									"nodeType": "InheritanceSpecifier",
									"src": "433:5:8"
								},
								{
									"baseName": {
										"id": 1087,
										"name": "ERC20Pausable",
										"nameLocations": [
											"440:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 911,
										"src": "440:13:8"
									},
									"id": 1088,
									"nodeType": "InheritanceSpecifier",
									"src": "440:13:8"
								},
								{
									"baseName": {
										"id": 1089,
										"name": "Ownable",
										"nameLocations": [
											"455:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "455:7:8"
									},
									"id": 1090,
									"nodeType": "InheritanceSpecifier",
									"src": "455:7:8"
								}
							],
							"canonicalName": "Monica",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1084,
								"nodeType": "StructuredDocumentation",
								"src": "359:55:8",
								"text": "@custom:security-contact monica.galeendo@gmail.com"
							},
							"fullyImplemented": true,
							"id": 1522,
							"linearizedBaseContracts": [
								1522,
								147,
								911,
								1075,
								799,
								189,
								937,
								877,
								967
							],
							"name": "Monica",
							"nameLocation": "423:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 1092,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "508:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1522,
									"src": "493:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1091,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "493:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a071dcf4",
									"id": 1094,
									"mutability": "mutable",
									"name": "taxFee",
									"nameLocation": "537:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1522,
									"src": "522:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1093,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "522:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bc063e1a",
									"id": 1097,
									"mutability": "constant",
									"name": "MAX_FEE",
									"nameLocation": "656:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1522,
									"src": "632:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1095,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "632:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 1096,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "666:3:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3f4218e0",
									"id": 1101,
									"mutability": "mutable",
									"name": "isFeeExempt",
									"nameLocation": "757:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1522,
									"src": "725:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1100,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1098,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "733:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "725:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1099,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "744:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a",
									"id": 1107,
									"name": "TreasuryUpdated",
									"nameLocation": "795:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldTreasury",
												"nameLocation": "827:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "811:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"indexed": true,
												"mutability": "mutable",
												"name": "newTreasury",
												"nameLocation": "856:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "840:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "810:58:8"
									},
									"src": "789:80:8"
								},
								{
									"anonymous": false,
									"eventSelector": "2211abb4bbc4d80b7505c31b54d01d15ac6e33a42c59540d309d89daf759063a",
									"id": 1113,
									"name": "TaxFeeUpdated",
									"nameLocation": "880:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldFee",
												"nameLocation": "902:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "894:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "918:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "910:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "893:32:8"
									},
									"src": "874:52:8"
								},
								{
									"anonymous": false,
									"eventSelector": "69e34a174b4a0cce59950c4c852317e9797bdcae125fbf8b5dd8b4311384412f",
									"id": 1119,
									"name": "FeeExemptionUpdated",
									"nameLocation": "937:19:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "973:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "957:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"indexed": false,
												"mutability": "mutable",
												"name": "exempt",
												"nameLocation": "987:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "982:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "982:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "956:38:8"
									},
									"src": "931:64:8"
								},
								{
									"anonymous": false,
									"eventSelector": "ddb30886d90db45adc1b2edcbabe12227896c25143cd155d3bf62ec8eff67856",
									"id": 1129,
									"name": "TaxCollected",
									"nameLocation": "1006:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1035:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1019:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1057:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1041:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"indexed": false,
												"mutability": "mutable",
												"name": "taxAmount",
												"nameLocation": "1069:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1061:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"indexed": false,
												"mutability": "mutable",
												"name": "transferAmount",
												"nameLocation": "1088:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "1080:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:85:8"
									},
									"src": "1000:104:8"
								},
								{
									"errorSelector": "cfe2ea63",
									"id": 1131,
									"name": "InvalidTreasuryAddress",
									"nameLocation": "1116:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1138:2:8"
									},
									"src": "1110:31:8"
								},
								{
									"errorSelector": "5ba09ae0",
									"id": 1133,
									"name": "InvalidTaxFee",
									"nameLocation": "1152:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1165:2:8"
									},
									"src": "1146:22:8"
								},
								{
									"errorSelector": "90b8ec18",
									"id": 1135,
									"name": "TransferFailed",
									"nameLocation": "1179:14:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1193:2:8"
									},
									"src": "1173:23:8"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "1390:672:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1154,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "1404:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1425:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1417:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1155,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1417:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1417:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1404:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1163,
												"nodeType": "IfStatement",
												"src": "1400:60:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1160,
															"name": "InvalidTreasuryAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "1436:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1436:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1162,
													"nodeType": "RevertStatement",
													"src": "1429:31:8"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1164,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "1474:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1165,
														"name": "MAX_FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "1484:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1474:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1170,
												"nodeType": "IfStatement",
												"src": "1470:45:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1167,
															"name": "InvalidTaxFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "1500:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1500:15:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1169,
													"nodeType": "RevertStatement",
													"src": "1493:22:8"
												}
											},
											{
												"expression": {
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1171,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "1525:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1172,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "1536:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1525:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "1525:20:8"
											},
											{
												"expression": {
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1175,
														"name": "taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "1555:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1176,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "1564:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1555:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "1555:16:8"
											},
											{
												"expression": {
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1179,
															"name": "isFeeExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "1646:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1182,
														"indexExpression": {
															"expression": {
																"id": 1180,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1658:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1662:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1658:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1646:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1672:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1646:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "1646:30:8"
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1186,
															"name": "isFeeExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "1686:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1188,
														"indexExpression": {
															"id": 1187,
															"name": "_treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "1698:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1686:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1711:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1686:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "1686:29:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1193,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1813:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1817:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1813:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030",
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1825:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1835:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1197,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "1839:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1839:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1835:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1825:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1192,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1807:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1807:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "1807:43:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1898:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1890:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1204,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1890:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1890:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1208,
															"name": "_treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "1902:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1203,
														"name": "TreasuryUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "1874:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1874:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1210,
												"nodeType": "EmitStatement",
												"src": "1869:43:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1941:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1213,
															"name": "_taxFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "1944:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1211,
														"name": "TaxFeeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "1927:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1927:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "EmitStatement",
												"src": "1922:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1217,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1987:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1991:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1987:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1999:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1216,
														"name": "FeeExemptionUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "1967:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1967:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1221,
												"nodeType": "EmitStatement",
												"src": "1962:42:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1223,
															"name": "_treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "2039:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2050:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1222,
														"name": "FeeExemptionUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "2019:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2019:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "EmitStatement",
												"src": "2014:41:8"
											}
										]
									},
									"id": 1228,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1146,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1137,
													"src": "1342:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1147,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1139,
													"src": "1349:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1148,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1145,
												"name": "ERC20",
												"nameLocations": [
													"1336:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1336:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1336:21:8"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1150,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1374:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1378:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1374:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1152,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1149,
												"name": "Ownable",
												"nameLocations": [
													"1366:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1366:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1366:19:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1238:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1224:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1136,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1224:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1267:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1253:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1138,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1253:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "1292:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1284:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "_taxFee",
												"nameLocation": "1319:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1311:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1214:113:8"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:0:8"
									},
									"scope": 1522,
									"src": "1203:859:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "2235:461:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1236,
														"name": "_newTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "2249:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2273:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2265:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1237,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2265:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2249:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1245,
												"nodeType": "IfStatement",
												"src": "2245:63:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1242,
															"name": "InvalidTreasuryAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "2284:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2284:24:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1244,
													"nodeType": "RevertStatement",
													"src": "2277:31:8"
												}
											},
											{
												"assignments": [
													1247
												],
												"declarations": [
													{
														"constant": false,
														"id": 1247,
														"mutability": "mutable",
														"name": "oldTreasury",
														"nameLocation": "2335:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1281,
														"src": "2327:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1246,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2327:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1249,
												"initialValue": {
													"id": 1248,
													"name": "treasury",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1092,
													"src": "2349:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2327:30:8"
											},
											{
												"expression": {
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1250,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "2367:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1251,
														"name": "_newTreasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "2378:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2367:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "2367:23:8"
											},
											{
												"expression": {
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1254,
															"name": "isFeeExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "2441:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1256,
														"indexExpression": {
															"id": 1255,
															"name": "oldTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "2453:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2441:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2468:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2441:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "2441:32:8"
											},
											{
												"expression": {
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1260,
															"name": "isFeeExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "2483:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1262,
														"indexExpression": {
															"id": 1261,
															"name": "_newTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "2495:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2483:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2511:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2483:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "2483:32:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1267,
															"name": "oldTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "2555:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1268,
															"name": "_newTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "2568:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1266,
														"name": "TreasuryUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "2539:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2539:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "EmitStatement",
												"src": "2534:47:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1272,
															"name": "oldTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "2616:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2629:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1271,
														"name": "FeeExemptionUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "2596:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "EmitStatement",
												"src": "2591:44:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1277,
															"name": "_newTreasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "2670:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2684:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1276,
														"name": "FeeExemptionUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "2650:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "EmitStatement",
												"src": "2645:44:8"
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "2068:100:8",
										"text": " @dev Updates the treasury address\n @param _newTreasury New treasury address"
									},
									"functionSelector": "f0f44260",
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1234,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1233,
												"name": "onlyOwner",
												"nameLocations": [
													"2225:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2225:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2225:9:8"
										}
									],
									"name": "setTreasury",
									"nameLocation": "2182:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "_newTreasury",
												"nameLocation": "2202:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2194:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2193:22:8"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:8"
									},
									"scope": 1522,
									"src": "2173:523:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "2859:182:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1290,
														"name": "_newFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "2873:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2883:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2873:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1296,
												"nodeType": "IfStatement",
												"src": "2869:43:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1293,
															"name": "InvalidTaxFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "2897:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2897:15:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1295,
													"nodeType": "RevertStatement",
													"src": "2890:22:8"
												}
											},
											{
												"assignments": [
													1298
												],
												"declarations": [
													{
														"constant": false,
														"id": 1298,
														"mutability": "mutable",
														"name": "oldFee",
														"nameLocation": "2939:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1310,
														"src": "2931:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1297,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2931:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1300,
												"initialValue": {
													"id": 1299,
													"name": "taxFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1094,
													"src": "2948:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2931:23:8"
											},
											{
												"expression": {
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1301,
														"name": "taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "2964:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1302,
														"name": "_newFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "2973:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2964:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "2964:16:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1306,
															"name": "oldFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "3018:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1307,
															"name": "_newFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "3026:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1305,
														"name": "TaxFeeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "3004:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3004:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1309,
												"nodeType": "EmitStatement",
												"src": "2999:35:8"
											}
										]
									},
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "2706:93:8",
										"text": " @dev Updates the tax fee\n @param _newFee New tax fee in basis points"
									},
									"functionSelector": "c4081a4c",
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1287,
												"name": "onlyOwner",
												"nameLocations": [
													"2849:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2849:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2849:9:8"
										}
									],
									"name": "setTaxFee",
									"nameLocation": "2813:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "_newFee",
												"nameLocation": "2831:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "2823:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2823:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2822:17:8"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2859:0:8"
									},
									"scope": 1522,
									"src": "2804:237:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "3306:101:8",
										"statements": [
											{
												"expression": {
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1321,
															"name": "isFeeExempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "3316:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1323,
														"indexExpression": {
															"id": 1322,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "3328:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3316:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1324,
														"name": "_exempt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "3340:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3316:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "3316:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1328,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "3382:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1329,
															"name": "_exempt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "3392:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1327,
														"name": "FeeExemptionUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "3362:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3362:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "EmitStatement",
												"src": "3357:43:8"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "3051:174:8",
										"text": " @dev Sets fee exemption status for an address\n @param _account Address to update\n @param _exempt Whether the address should be exempt from fees"
									},
									"functionSelector": "751fd179",
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1318,
												"name": "onlyOwner",
												"nameLocations": [
													"3296:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3296:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3296:9:8"
										}
									],
									"name": "setFeeExemption",
									"nameLocation": "3239:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "3263:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "3255:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3255:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "_exempt",
												"nameLocation": "3278:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "3273:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3273:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:32:8"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3306:0:8"
									},
									"scope": 1522,
									"src": "3230:177:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "3447:25:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1338,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "3457:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3457:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "3457:8:8"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1336,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1335,
												"name": "onlyOwner",
												"nameLocations": [
													"3437:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3437:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3437:9:8"
										}
									],
									"name": "pause",
									"nameLocation": "3422:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3427:2:8"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3447:0:8"
									},
									"scope": 1522,
									"src": "3413:59:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "3514:27:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1347,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "3524:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3524:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "3524:10:8"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1345,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1344,
												"name": "onlyOwner",
												"nameLocations": [
													"3504:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3504:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3504:9:8"
										}
									],
									"name": "unpause",
									"nameLocation": "3487:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3494:2:8"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3514:0:8"
									},
									"scope": 1522,
									"src": "3478:63:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "3699:102:8",
										"statements": [
											{
												"assignments": [
													1363
												],
												"declarations": [
													{
														"constant": false,
														"id": 1363,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3717:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "3709:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1362,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3709:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1366,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1364,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "3725:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3725:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3709:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1368,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "3755:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1369,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "3762:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "3766:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1367,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1521
														],
														"referencedDeclaration": 1521,
														"src": "3747:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3747:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "3747:26:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3790:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1361,
												"id": 1374,
												"nodeType": "Return",
												"src": "3783:11:8"
											}
										]
									},
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "3547:62:8",
										"text": " @dev Override transfer to include tax logic"
									},
									"functionSelector": "a9059cbb",
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3623:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1358,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3675:8:8"
									},
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3640:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "3632:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3632:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3652:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "3644:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3644:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3631:28:8"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "3693:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3693:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3692:6:8"
									},
									"scope": 1522,
									"src": "3614:187:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										482
									],
									"body": {
										"id": 1408,
										"nodeType": "Block",
										"src": "3985:151:8",
										"statements": [
											{
												"assignments": [
													1390
												],
												"declarations": [
													{
														"constant": false,
														"id": 1390,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4003:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1408,
														"src": "3995:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1389,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3995:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1393,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1391,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "4013:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4013:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3995:30:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1395,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "4051:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1396,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "4057:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1397,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "4066:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1394,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4035:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4035:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "4035:38:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1401,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "4091:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "4097:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1403,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "4101:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1400,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1521
														],
														"referencedDeclaration": 1521,
														"src": "4083:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4083:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "4083:25:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4125:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1388,
												"id": 1407,
												"nodeType": "Return",
												"src": "4118:11:8"
											}
										]
									},
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "3811:66:8",
										"text": " @dev Override transferFrom to include tax logic"
									},
									"functionSelector": "23b872dd",
									"id": 1409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3891:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1385,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3961:8:8"
									},
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3912:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "3904:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3926:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "3918:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3918:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3938:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "3930:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3903:42:8"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "3979:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3979:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:6:8"
									},
									"scope": 1522,
									"src": "3882:254:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "4267:31:8",
										"statements": [
											{
												"expression": {
													"id": 1415,
													"name": "MAX_FEE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1097,
													"src": "4284:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1414,
												"id": 1416,
												"nodeType": "Return",
												"src": "4277:14:8"
											}
										]
									},
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "4146:63:8",
										"text": " @dev Returns the maximum fee that can be set"
									},
									"functionSelector": "92828671",
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxFee",
									"nameLocation": "4223:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4232:2:8"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "4258:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:9:8"
									},
									"scope": 1522,
									"src": "4214:84:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "4461:30:8",
										"statements": [
											{
												"expression": {
													"id": 1424,
													"name": "taxFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1094,
													"src": "4478:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1423,
												"id": 1425,
												"nodeType": "Return",
												"src": "4471:13:8"
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "4308:85:8",
										"text": " @dev Returns the current tax fee as a percentage (with 2 decimals)"
									},
									"functionSelector": "99f3bc9a",
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaxFeePercentage",
									"nameLocation": "4407:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4426:2:8"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "4452:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4452:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4451:9:8"
									},
									"scope": 1522,
									"src": "4398:93:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1442,
										"nodeType": "Block",
										"src": "4736:51:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1435,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1430,
																	"src": "4754:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1436,
																	"name": "taxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "4763:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4754:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1438,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4753:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1439,
														"name": "MAX_FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "4773:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4753:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1434,
												"id": 1441,
												"nodeType": "Return",
												"src": "4746:34:8"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "4501:160:8",
										"text": " @dev Calculates tax amount for a given transfer amount\n @param amount Transfer amount\n @return Tax amount that would be collected"
									},
									"functionSelector": "483a9310",
									"id": 1443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTax",
									"nameLocation": "4675:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4696:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "4688:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4688:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4687:16:8"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "4727:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4727:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:9:8"
									},
									"scope": 1522,
									"src": "4666:121:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										606,
										910
									],
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "4960:442:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1455,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "4974:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4990:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4982:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1456,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4982:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4982:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4974:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1461,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "4996:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5010:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5002:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1462,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5002:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5002:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4996:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4974:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1511,
												"nodeType": "IfStatement",
												"src": "4970:385:8",
												"trueBody": {
													"id": 1510,
													"nodeType": "Block",
													"src": "5014:341:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1468,
																	"name": "taxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "5032:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5041:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5032:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1509,
															"nodeType": "IfStatement",
															"src": "5028:317:8",
															"trueBody": {
																"id": 1508,
																"nodeType": "Block",
																"src": "5044:301:8",
																"statements": [
																	{
																		"assignments": [
																			1472
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1472,
																				"mutability": "mutable",
																				"name": "fee",
																				"nameLocation": "5070:3:8",
																				"nodeType": "VariableDeclaration",
																				"scope": 1508,
																				"src": "5062:11:8",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1471,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5062:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1479,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1475,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1473,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1449,
																							"src": "5077:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1474,
																							"name": "taxFee",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1094,
																							"src": "5086:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5077:15:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1476,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5076:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 1477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5096:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "5076:23:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5062:37:8"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1480,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1472,
																				"src": "5121:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5127:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "5121:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1507,
																		"nodeType": "IfStatement",
																		"src": "5117:214:8",
																		"trueBody": {
																			"id": 1506,
																			"nodeType": "Block",
																			"src": "5130:201:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1486,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1445,
																								"src": "5166:4:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1487,
																								"name": "treasury",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1092,
																								"src": "5172:8:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1488,
																								"name": "fee",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1472,
																								"src": "5182:3:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1483,
																								"name": "super",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967271,
																								"src": "5152:5:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_super$_Monica_$1522_$",
																									"typeString": "type(contract super Monica)"
																								}
																							},
																							"id": 1485,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5158:7:8",
																							"memberName": "_update",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 910,
																							"src": "5152:13:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																								"typeString": "function (address,address,uint256)"
																							}
																						},
																						"id": 1489,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5152:34:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1490,
																					"nodeType": "ExpressionStatement",
																					"src": "5152:34:8"
																				},
																				{
																					"assignments": [
																						1492
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1492,
																							"mutability": "mutable",
																							"name": "net",
																							"nameLocation": "5216:3:8",
																							"nodeType": "VariableDeclaration",
																							"scope": 1506,
																							"src": "5208:11:8",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1491,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "5208:7:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 1496,
																					"initialValue": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1495,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1493,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1449,
																							"src": "5222:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 1494,
																							"name": "fee",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1472,
																							"src": "5231:3:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5222:12:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "5208:26:8"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1500,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1445,
																								"src": "5270:4:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1501,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1447,
																								"src": "5276:2:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1502,
																								"name": "net",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1492,
																								"src": "5280:3:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1497,
																								"name": "super",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967271,
																								"src": "5256:5:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_super$_Monica_$1522_$",
																									"typeString": "type(contract super Monica)"
																								}
																							},
																							"id": 1499,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5262:7:8",
																							"memberName": "_update",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 910,
																							"src": "5256:13:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																								"typeString": "function (address,address,uint256)"
																							}
																						},
																						"id": 1503,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5256:28:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1504,
																					"nodeType": "ExpressionStatement",
																					"src": "5256:28:8"
																				},
																				{
																					"functionReturnParameters": 1454,
																					"id": 1505,
																					"nodeType": "Return",
																					"src": "5306:7:8"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1515,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "5378:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1516,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "5384:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1517,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "5388:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1512,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5364:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Monica_$1522_$",
																"typeString": "type(contract super Monica)"
															}
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5370:7:8",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 910,
														"src": "5364:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5364:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "5364:31:8"
											}
										]
									},
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "4870:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1453,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1451,
												"name": "ERC20",
												"nameLocations": [
													"4938:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "4938:5:8"
											},
											{
												"id": 1452,
												"name": "ERC20Pausable",
												"nameLocations": [
													"4945:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 911,
												"src": "4945:13:8"
											}
										],
										"src": "4929:30:8"
									},
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4886:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "4878:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4900:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "4892:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4892:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4912:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "4904:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4904:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4877:42:8"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4960:0:8"
									},
									"scope": 1522,
									"src": "4861:541:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1523,
							"src": "414:4990:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								989,
								992,
								1131,
								1133,
								1135
							],
							"usedEvents": [
								24,
								811,
								820,
								981,
								986,
								1107,
								1113,
								1119,
								1129
							]
						}
					],
					"src": "81:5324:8"
				},
				"id": 8
			}
		}
	}
}